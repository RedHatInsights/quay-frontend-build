{"version":3,"file":"chunks/267.0e304fcec53dc71a4c57.min.js","mappings":"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","sources":["webpack://quay-ui-plugin/./src/routes/OrganizationsList/css/Organizations.scss","webpack://quay-ui-plugin/./src/components/labels/Labels.css","webpack://quay-ui-plugin/./src/routes/RepositoriesList/css/RobotAccount.css","webpack://quay-ui-plugin/./src/routes/RepositoryDetails/Settings/NotificationsCreateNotification.css","webpack://quay-ui-plugin/./src/routes/RepositoryDetails/Tags/Tags.css","webpack://quay-ui-plugin/./src/routes/TagDetails/Details/Details.css","webpack://quay-ui-plugin/./src/routes/TagDetails/SecurityReport/SecurityReportTable.css","webpack://quay-ui-plugin/./src/routes/OrganizationsList/css/Organizations.scss?dcfd","webpack://quay-ui-plugin/./src/resources/ErrorHandling.ts","webpack://quay-ui-plugin/./src/resources/AuthResource.ts","webpack://quay-ui-plugin/./src/libs/axios.ts","webpack://quay-ui-plugin/./src/resources/TagResource.ts","webpack://quay-ui-plugin/./src/libs/utils.ts","webpack://quay-ui-plugin/./src/components/errors/FormError.tsx","webpack://quay-ui-plugin/./src/resources/OrganizationResource.ts","webpack://quay-ui-plugin/./src/routes/OrganizationsList/CreateOrganizationModal.tsx","webpack://quay-ui-plugin/./src/hooks/UseCreateOrganization.ts","webpack://quay-ui-plugin/./src/routes/OrganizationsList/ColumnNames.ts","webpack://quay-ui-plugin/./src/atoms/UserState.ts","webpack://quay-ui-plugin/./src/resources/MembersResource.ts","webpack://quay-ui-plugin/./src/resources/RobotsResource.ts","webpack://quay-ui-plugin/./src/resources/RepositoryResource.ts","webpack://quay-ui-plugin/./src/resources/UserResource.ts","webpack://quay-ui-plugin/./src/resources/QuayConfig.ts","webpack://quay-ui-plugin/./src/hooks/UseQuayConfig.ts","webpack://quay-ui-plugin/./src/hooks/UseCurrentUser.ts","webpack://quay-ui-plugin/./src/routes/RepositoriesList/ColumnNames.ts","webpack://quay-ui-plugin/./src/hooks/UseRepositories.ts","webpack://quay-ui-plugin/./src/routes/OrganizationsList/OrganizationsListTableData.tsx","webpack://quay-ui-plugin/./src/components/toolbar/ToolbarPagination.tsx","webpack://quay-ui-plugin/./src/components/modals/BulkDeleteModalTemplate.tsx","webpack://quay-ui-plugin/./src/components/errors/RequestError.tsx","webpack://quay-ui-plugin/./src/components/toolbar/DropdownCheckbox.tsx","webpack://quay-ui-plugin/./src/components/toolbar/SearchDropdown.tsx","webpack://quay-ui-plugin/./src/components/toolbar/SearchInput.tsx","webpack://quay-ui-plugin/./src/components/toolbar/ToolbarButton.tsx","webpack://quay-ui-plugin/./src/components/toolbar/Kebab.tsx","webpack://quay-ui-plugin/./src/routes/OrganizationsList/OrganizationToolBar.tsx","webpack://quay-ui-plugin/./src/components/empty/Empty.tsx","webpack://quay-ui-plugin/./src/atoms/BrowserHistoryState.ts","webpack://quay-ui-plugin/./src/components/breadcrumb/Breadcrumb.tsx","webpack://quay-ui-plugin/./src/components/LoadingPage.tsx","webpack://quay-ui-plugin/./src/components/errors/ErrorModal.tsx","webpack://quay-ui-plugin/./src/components/Table/RepoCount.tsx","webpack://quay-ui-plugin/./src/hooks/UseOrganizations.ts","webpack://quay-ui-plugin/./src/routes/OrganizationsList/OrganizationsList.tsx","webpack://quay-ui-plugin/./src/hooks/UseDeleteOrganizations.ts","webpack://quay-ui-plugin/./src/components/modals/CreateRepoModalTemplate.tsx","webpack://quay-ui-plugin/./src/hooks/UseCreateRepository.ts","webpack://quay-ui-plugin/./src/atoms/RepositoryState.ts","webpack://quay-ui-plugin/./src/components/modals/ConfirmationModal.tsx","webpack://quay-ui-plugin/./src/routes/RepositoriesList/RepositoryToolBar.tsx","webpack://quay-ui-plugin/./src/hooks/UseDeleteRepositories.ts","webpack://quay-ui-plugin/./src/routes/RepositoriesList/RepositoriesList.tsx","webpack://quay-ui-plugin/./src/routes/OrganizationsList/Organization/Tabs/Settings/Settings.tsx","webpack://quay-ui-plugin/./src/hooks/UseOrganization.ts","webpack://quay-ui-plugin/./src/atoms/RobotAccountState.ts","webpack://quay-ui-plugin/./src/components/toolbar/FilterInput.tsx","webpack://quay-ui-plugin/./src/components/toolbar/ExpandCollapseButton.tsx","webpack://quay-ui-plugin/./src/components/toolbar/BulkDelete.tsx","webpack://quay-ui-plugin/./src/routes/RepositoriesList/RobotAccountsToolBar.tsx","webpack://quay-ui-plugin/./src/components/modals/robotAccountWizard/NameAndDescription.tsx","webpack://quay-ui-plugin/./src/resources/TeamResources.ts","webpack://quay-ui-plugin/./src/hooks/useRobotAccounts.ts","webpack://quay-ui-plugin/./src/components/modals/robotAccountWizard/Footer.tsx","webpack://quay-ui-plugin/./src/components/ToggleDrawer.tsx","webpack://quay-ui-plugin/./src/atoms/TeamState.ts","webpack://quay-ui-plugin/./src/components/toolbar/FilterWithDropdown.tsx","webpack://quay-ui-plugin/./src/components/modals/robotAccountWizard/TeamView.tsx","webpack://quay-ui-plugin/./src/components/modals/robotAccountWizard/AddToTeam.tsx","webpack://quay-ui-plugin/./src/hooks/useTeams.ts","webpack://quay-ui-plugin/./src/components/toolbar/DropdownWithDescription.tsx","webpack://quay-ui-plugin/./src/components/modals/robotAccountWizard/AddToRepository.tsx","webpack://quay-ui-plugin/./src/components/modals/robotAccountWizard/DefaultPermissions.tsx","webpack://quay-ui-plugin/./src/components/modals/robotAccountWizard/ReviewAndFinish.tsx","webpack://quay-ui-plugin/./src/components/modals/CreateRobotAccountModal.tsx","webpack://quay-ui-plugin/./src/routes/RepositoriesList/RobotAccountKebab.tsx","webpack://quay-ui-plugin/./src/hooks/UseDeleteRobotAccount.ts","webpack://quay-ui-plugin/./src/components/modals/robotAccountWizard/DisplayModal.tsx","webpack://quay-ui-plugin/./src/components/modals/RobotRepositoryPermissions.tsx","webpack://quay-ui-plugin/./src/hooks/useRobotPermissions.ts","webpack://quay-ui-plugin/./src/hooks/useRobotToken.ts","webpack://quay-ui-plugin/./src/routes/RepositoriesList/css/RobotAccount.css?add6","webpack://quay-ui-plugin/./src/components/modals/RobotTokensModal.tsx","webpack://quay-ui-plugin/./src/routes/RepositoriesList/RobotAccountsList.tsx","webpack://quay-ui-plugin/./src/hooks/UseRobotRepoPermissions.ts","webpack://quay-ui-plugin/./src/routes/OrganizationsList/Organization/Organization.tsx","webpack://quay-ui-plugin/./src/routes/RepositoryDetails/Tags/ColumnNames.ts","webpack://quay-ui-plugin/./src/atoms/TagListState.ts","webpack://quay-ui-plugin/./src/routes/RepositoryDetails/Tags/Tags.css?2632","webpack://quay-ui-plugin/./src/routes/RepositoryDetails/Tags/DeleteModal.tsx","webpack://quay-ui-plugin/./src/routes/RepositoryDetails/Tags/TagsToolbar.tsx","webpack://quay-ui-plugin/./src/routes/TagDetails/Types.ts","webpack://quay-ui-plugin/./src/routes/RepositoryDetails/Tags/TablePopover.tsx","webpack://quay-ui-plugin/./src/routes/RepositoryDetails/Tags/SecurityDetails.tsx","webpack://quay-ui-plugin/./src/atoms/SecurityDetailsState.ts","webpack://quay-ui-plugin/./src/components/Table/ImageSize.tsx","webpack://quay-ui-plugin/./src/routes/RepositoryDetails/Tags/TagsTable.tsx","webpack://quay-ui-plugin/./src/components/errors/ErrorBoundary.tsx","webpack://quay-ui-plugin/./src/routes/RepositoryDetails/Tags/TagsList.tsx","webpack://quay-ui-plugin/./src/components/empty/Conditional.tsx","webpack://quay-ui-plugin/./src/routes/RepositoryDetails/Settings/ColumnNames.ts","webpack://quay-ui-plugin/./src/hooks/UseRepositoryPermissions.ts","webpack://quay-ui-plugin/./src/routes/RepositoryDetails/Settings/DeleteRepository.tsx","webpack://quay-ui-plugin/./src/routes/RepositoryDetails/Types.ts","webpack://quay-ui-plugin/./src/components/Table/Menu.tsx","webpack://quay-ui-plugin/./src/hooks/UseUpdateRepositoryPermissions.ts","webpack://quay-ui-plugin/./src/routes/RepositoryDetails/Settings/Types.ts","webpack://quay-ui-plugin/./src/routes/RepositoryDetails/Settings/PermissionsActionsChangePermissions.tsx","webpack://quay-ui-plugin/./src/routes/RepositoryDetails/Settings/PermissionsActionsDelete.tsx","webpack://quay-ui-plugin/./src/routes/RepositoryDetails/Settings/PermissionsToolbar.tsx","webpack://quay-ui-plugin/./src/routes/RepositoryDetails/Settings/PermissionsDropdown.tsx","webpack://quay-ui-plugin/./src/routes/RepositoryDetails/Settings/PermissionsKebab.tsx","webpack://quay-ui-plugin/./src/components/EntityIcon.tsx","webpack://quay-ui-plugin/./src/routes/RepositoryDetails/Settings/Permissions.tsx","webpack://quay-ui-plugin/./src/components/ReadonlySecret.tsx","webpack://quay-ui-plugin/./src/resources/NotificationResource.ts","webpack://quay-ui-plugin/./src/hooks/UseEvents.tsx","webpack://quay-ui-plugin/./src/hooks/UseNotificationMethods.ts","webpack://quay-ui-plugin/./src/hooks/UseNotifications.ts","webpack://quay-ui-plugin/./src/hooks/UseUpdateNotifications.ts","webpack://quay-ui-plugin/./src/routes/RepositoryDetails/Settings/NotificationsKebab.tsx","webpack://quay-ui-plugin/./src/routes/RepositoryDetails/Settings/NotificationsFilter.tsx","webpack://quay-ui-plugin/./src/routes/RepositoryDetails/Settings/NotificationsFilterChips.tsx","webpack://quay-ui-plugin/./src/routes/RepositoryDetails/Settings/NotificationsActions.tsx","webpack://quay-ui-plugin/./src/routes/RepositoryDetails/Settings/NotificationsToolbar.tsx","webpack://quay-ui-plugin/./src/routes/RepositoryDetails/Settings/Notifications.tsx","webpack://quay-ui-plugin/./src/resources/BillingResource.ts","webpack://quay-ui-plugin/./src/routes/RepositoryDetails/Settings/Visibility.tsx","webpack://quay-ui-plugin/./src/hooks/UseRepositoryVisibility.ts","webpack://quay-ui-plugin/./src/hooks/UseUpgradePlan.ts","webpack://quay-ui-plugin/./src/routes/RepositoryDetails/Settings/Settings.tsx","webpack://quay-ui-plugin/./src/hooks/UseEntities.ts","webpack://quay-ui-plugin/./src/components/EntitySearch.tsx","webpack://quay-ui-plugin/./src/routes/RepositoryDetails/Settings/PermissionsAddPermission.tsx","webpack://quay-ui-plugin/./src/routes/RepositoryDetails/Settings/NotificationsCreateNotification.css?f4e6","webpack://quay-ui-plugin/./src/resources/AuthorizedEmailResource.ts","webpack://quay-ui-plugin/./src/hooks/UseAuthorizedEmails.ts","webpack://quay-ui-plugin/./src/routes/RepositoryDetails/Settings/NotificationsCreateNotificationEmail.tsx","webpack://quay-ui-plugin/./src/routes/RepositoryDetails/Settings/NotificationsCreateNotificationFlowdock.tsx","webpack://quay-ui-plugin/./src/routes/RepositoryDetails/Settings/NotificationsCreateNotificationHipchat.tsx","webpack://quay-ui-plugin/./src/routes/RepositoryDetails/Settings/NotificationsCreateNotificationQuay.tsx","webpack://quay-ui-plugin/./src/routes/RepositoryDetails/Settings/NotificationsCreateNotificationSlack.tsx","webpack://quay-ui-plugin/./src/routes/RepositoryDetails/Settings/NotificationsCreateNotificationWebhook.tsx","webpack://quay-ui-plugin/./src/routes/RepositoryDetails/Settings/NotificationsCreateNotification.tsx","webpack://quay-ui-plugin/./src/routes/RepositoryDetails/RepositoryDetails.tsx","webpack://quay-ui-plugin/./src/hooks/UseRepository.ts","webpack://quay-ui-plugin/./src/routes/TagDetails/TagDetailsArchSelect.tsx","webpack://quay-ui-plugin/./src/routes/TagDetails/Details/Details.css?d340","webpack://quay-ui-plugin/./src/routes/TagDetails/Details/DetailsCopyTags.tsx","webpack://quay-ui-plugin/./src/components/labels/Labels.css?9eb2","webpack://quay-ui-plugin/./src/components/labels/Labels.tsx","webpack://quay-ui-plugin/./src/routes/TagDetails/Details/Details.tsx","webpack://quay-ui-plugin/./src/routes/TagDetails/SecurityReport/SecurityReportMetadataTable.tsx","webpack://quay-ui-plugin/./src/routes/TagDetails/SecurityReport/SecurityReportFilter.tsx","webpack://quay-ui-plugin/./src/routes/TagDetails/SecurityReport/SecurityReportTable.css?32e3","webpack://quay-ui-plugin/./src/routes/TagDetails/SecurityReport/SecurityReportTable.tsx","webpack://quay-ui-plugin/./src/routes/TagDetails/SecurityReport/SecurityReportChart.tsx","webpack://quay-ui-plugin/./src/routes/TagDetails/SecurityReport/SecurityReportScanStates.tsx","webpack://quay-ui-plugin/./src/routes/TagDetails/SecurityReport/SecurityReport.tsx","webpack://quay-ui-plugin/./src/routes/TagDetails/Packages/PackagesChart.tsx","webpack://quay-ui-plugin/./src/routes/TagDetails/Packages/PackagesFilter.tsx","webpack://quay-ui-plugin/./src/routes/TagDetails/Packages/PackagesTable.tsx","webpack://quay-ui-plugin/./src/routes/TagDetails/Packages/Packages.tsx","webpack://quay-ui-plugin/./src/routes/TagDetails/TagDetailsTabs.tsx","webpack://quay-ui-plugin/./src/routes/TagDetails/TagDetails.tsx","webpack://quay-ui-plugin/./src/routes/NavigationPath.tsx","webpack://quay-ui-plugin/./src/components/errors/404.tsx","webpack://quay-ui-plugin/./src/atoms/QuayConfigState.ts","webpack://quay-ui-plugin/./src/components/modals/CreateNewUser.tsx","webpack://quay-ui-plugin/./src/components/NewUserEmptyPage.tsx","webpack://quay-ui-plugin/./src/routes/PluginMain.tsx","webpack://quay-ui-plugin/./src/tests/fake-db/MockAxios.ts","webpack://quay-ui-plugin/./src/tests/fake-db/data/login/login.ts","webpack://quay-ui-plugin/./src/tests/fake-db/data/user/robots.ts","webpack://quay-ui-plugin/./src/tests/fake-db/data/user/user.ts","webpack://quay-ui-plugin/./src/tests/fake-db/data/repository/security.ts","webpack://quay-ui-plugin/./src/tests/fake-db/data/tag/tag.ts","webpack://quay-ui-plugin/./src/tests/fake-db/data/tag/labels.ts","webpack://quay-ui-plugin/./src/tests/fake-db/data/tag/manifest.ts","webpack://quay-ui-plugin/./src/tests/fake-db/data/repository/repository.ts","webpack://quay-ui-plugin/./src/tests/fake-db/data/config/config.ts","webpack://quay-ui-plugin/./src/tests/fake-db/data/config/logo.ts","webpack://quay-ui-plugin/./src/tests/fake-db/data/organization/members.ts","webpack://quay-ui-plugin/./src/tests/fake-db/data/organization/robots.ts","webpack://quay-ui-plugin/./src/tests/fake-db/data/organization/organization.ts","webpack://quay-ui-plugin/./src/tests/fake-db/ApiMock.ts"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".co-m-nav-title{margin-top:1.5rem;padding:0 1rem 0}@media(min-width: 500px){.co-m-nav-title{padding-left:1.5rem;padding-right:1.5rem}}@media(min-width: 768px){.co-m-nav-title--row{display:flex;flex-direction:row;justify-content:space-between}}.fas.fa-trash{font-size:var(--pf-global--icon--FontSize--lg);color:gray}.pf-c-button.pf-m-plain{--pf-c-button--disabled--BackgroundColor: transparent }.create-org-modal-slider{word-break:normal}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/routes/OrganizationsList/css/Organizations.scss\"],\"names\":[],\"mappings\":\"AAUA,gBACE,iBALqB,CAMrB,gBAAA,CACA,yBAHF,gBAII,mBARmB,CASnB,oBATmB,CAAA,CAYnB,yBADF,qBAEI,YAAA,CACA,kBAAA,CACA,6BAAA,CAAA,CAMN,cACE,8CAAA,CACA,UAAA,CAGF,wBACE,sDAAA,CAGF,yBACE,iBAAA\",\"sourcesContent\":[\"// .text-input-width {\\n//     --pf-c-form-control--Width: 60%;\\n// }\\n\\n$screen-sm: 768px;\\n$pf-global-gutter: 1rem;\\n$pf-global-gutter--md: 1.5rem;\\n\\n\\n// Page layout\\n.co-m-nav-title {\\n  margin-top: $pf-global-gutter--md;\\n  padding: 0 $pf-global-gutter 0;\\n  @media (min-width: 500px) {\\n    padding-left: $pf-global-gutter--md;\\n    padding-right: $pf-global-gutter--md;\\n  }\\n  &--row {\\n    @media (min-width: $screen-sm) {\\n      display: flex;\\n      flex-direction: row;\\n      justify-content: space-between;\\n    }\\n  }\\n}\\n\\n// Trash icon\\n.fas.fa-trash {\\n  font-size: var(--pf-global--icon--FontSize--lg);\\n  color: grey;\\n}\\n\\n.pf-c-button.pf-m-plain {\\n  --pf-c-button--disabled--BackgroundColor: transparent\\n}\\n\\n.create-org-modal-slider {\\n  word-break: normal;\\n}\\n\\n// search placeholder text color\\n// .pf-c-form-control {\\n//   --pf-c-form-control--placeholder--Color: #989898\\n// }\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".label-content {\\n    white-space: pre-line;\\n}\\n\\n.label {\\n    --pf-c-label--BorderRadius: 1em;\\n    margin-bottom: 3px;\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/components/labels/Labels.css\"],\"names\":[],\"mappings\":\"AAAA;IACI,qBAAqB;AACzB;;AAEA;IACI,+BAA+B;IAC/B,kBAAkB;AACtB\",\"sourcesContent\":[\".label-content {\\n    white-space: pre-line;\\n}\\n\\n.label {\\n    --pf-c-label--BorderRadius: 1em;\\n    margin-bottom: 3px;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".text-area-height {\\n    height: 210px !important;\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/routes/RepositoriesList/css/RobotAccount.css\"],\"names\":[],\"mappings\":\"AAAA;IACI,wBAAwB;AAC5B\",\"sourcesContent\":[\".text-area-height {\\n    height: 210px !important;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".create-notification-dropdown {\\n    width: 100%;\\n}\\n\\n.create-notification-dropdown button {\\n    width: 100%;\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/routes/RepositoryDetails/Settings/NotificationsCreateNotification.css\"],\"names\":[],\"mappings\":\"AAAA;IACI,WAAW;AACf;;AAEA;IACI,WAAW;AACf\",\"sourcesContent\":[\".create-notification-dropdown {\\n    width: 100%;\\n}\\n\\n.create-notification-dropdown button {\\n    width: 100%;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".delete-modal-readonly-alert {\\n    padding-bottom: 5px;\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/routes/RepositoryDetails/Tags/Tags.css\"],\"names\":[],\"mappings\":\"AAAA;IACI,mBAAmB;AACvB\",\"sourcesContent\":[\".delete-modal-readonly-alert {\\n    padding-bottom: 5px;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".fetch-tags-title {\\n    padding-bottom: 24px;\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/routes/TagDetails/Details/Details.css\"],\"names\":[],\"mappings\":\"AAAA;IACI,oBAAoB;AACxB\",\"sourcesContent\":[\".fetch-tags-title {\\n    padding-bottom: 24px;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".security-table-row > td > * {\\n    vertical-align: middle;\\n}\\n\\n.security-table-row > td > a > * {\\n    vertical-align: middle;\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/routes/TagDetails/SecurityReport/SecurityReportTable.css\"],\"names\":[],\"mappings\":\"AAAA;IACI,sBAAsB;AAC1B;;AAEA;IACI,sBAAsB;AAC1B\",\"sourcesContent\":[\".security-table-row > td > * {\\n    vertical-align: middle;\\n}\\n\\n.security-table-row > td > a > * {\\n    vertical-align: middle;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\n      import API from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./Organizations.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./Organizations.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","import {AxiosError} from 'axios';\n\n// Collects multiple error responses from a bulk operation\n// with error response being mapped to some key\nexport class BulkOperationError<T> extends Error {\n  responses: Map<string, T>;\n  constructor(message: string) {\n    super(message);\n    this.responses = new Map<string, T>();\n    Object.setPrototypeOf(this, BulkOperationError.prototype);\n  }\n  addError(key: string, error: T) {\n    this.responses.set(key, error);\n  }\n  getErrors() {\n    return this.responses;\n  }\n}\n\nexport class ResourceError extends Error {\n  error: Error;\n  resource: string;\n  constructor(message: string, resource: string, error: AxiosError) {\n    super(message);\n    this.resource = resource;\n    this.error = error;\n    Object.setPrototypeOf(this, ResourceError.prototype);\n  }\n}\n\nexport function throwIfError(responses: PromiseSettledResult<void>[]) {\n  // Aggregate failed responses\n  const errResponses = responses.filter(\n    (r) => r.status == 'rejected',\n  ) as PromiseRejectedResult[];\n\n  // If errors, collect and throw\n  if (errResponses.length > 0) {\n    const bulkDeleteError = new BulkOperationError<ResourceError>(\n      'error setting permissions',\n    );\n    for (const response of errResponses) {\n      const reason = response.reason as ResourceError;\n      bulkDeleteError.addError(reason.resource, reason);\n    }\n    throw bulkDeleteError;\n  }\n}\n\n// Convert error to human readble output\nexport function addDisplayError(message: string, error: Error | AxiosError) {\n  const errorDetails =\n    error instanceof AxiosError ? getErrorMessage(error) : error.message;\n  return message + ', ' + errorDetails + '.';\n}\n\ninterface ErrorResponse {\n  error_message?: string;\n}\n\n// Only handling the codes related to network errors. HTTP based errors\n// will be read from error.response.status. Axios codes left out of list:\n// ERR_BAD_OPTION_VALUE\n// ERR_BAD_OPTION\n// ERR_BAD_RESPONSE\n// ERR_BAD_REQUEST\n// ERR_DEPRECATED\nenum AxiosErrorCode {\n  ERR_FR_TOO_MANY_REDIRECTS = 'ERR_FR_TOO_MANY_REDIRECTS',\n  ERR_NETWORK = 'ERR_NETWORK',\n  ERR_CANCELED = 'ERR_CANCELED',\n  ECONNABORTED = 'ECONNABORTED',\n  ETIMEDOUT = 'ETIMEDOUT',\n}\n\nexport function getErrorMessage(error: AxiosError<ErrorResponse>) {\n  if (Object.values(AxiosErrorCode).includes(error.code as AxiosErrorCode)) {\n    return getNetworkError(error.code as AxiosErrorCode);\n  }\n\n  if (error.response.status) {\n    let message = `HTTP${error.response.status}`;\n    if (error.response.data?.error_message) {\n      message = message + ` - ${error.response.data?.error_message}`;\n    }\n    return message;\n  }\n\n  return 'unable to make request';\n}\n\nfunction getNetworkError(code: AxiosErrorCode) {\n  switch (code) {\n    case AxiosErrorCode.ERR_FR_TOO_MANY_REDIRECTS:\n      return 'too many redirects';\n    case AxiosErrorCode.ERR_NETWORK:\n      return 'connection cannot be made';\n    case AxiosErrorCode.ERR_CANCELED:\n      return 'request cancelled';\n    case AxiosErrorCode.ECONNABORTED:\n      return 'connection aborted';\n    case AxiosErrorCode.ETIMEDOUT:\n      return 'connection timed out';\n  }\n}\n\nexport function assertHttpCode(got: number, expected: number) {\n  if (expected !== got) {\n    throw new Error(`Unexpected HTTP status code: ${got}`);\n  }\n}\n\nexport function isErrorString(err: string) {\n  return typeof err === 'string' && err.length > 0;\n}\n","import axios from 'src/libs/axios';\nimport {assertHttpCode} from './ErrorHandling';\n\nconst signinApiUrl = '/api/v1/signin';\nconst signoutApiUrl = '/api/v1/signout';\nconst csrfTokenUrl = '/csrf_token';\n\ninterface AuthResource {\n  isLoggedIn: boolean;\n  csrfToken: string | null;\n  bearerToken: string | null;\n}\n\nexport const GlobalAuthState: AuthResource = {\n  isLoggedIn: false,\n  csrfToken: null,\n  bearerToken: null,\n};\n\nexport async function loginUser(username: string, password: string) {\n  const response = await axios.post(signinApiUrl, {\n    username: username,\n    password: password,\n  });\n  if (response.data == 'success') {\n    GlobalAuthState.isLoggedIn = true;\n    GlobalAuthState.csrfToken = undefined;\n  }\n  return response.data;\n}\n\nexport async function logoutUser() {\n  const response = await axios.post(signoutApiUrl);\n  assertHttpCode(response.status, 200);\n  GlobalAuthState.isLoggedIn = false;\n  GlobalAuthState.csrfToken = undefined;\n  return response.data;\n}\n\nexport async function getCsrfToken() {\n  const response = await axios.get(csrfTokenUrl);\n  assertHttpCode(response.status, 200);\n  GlobalAuthState.csrfToken = response.data.csrf_token;\n  return response.data;\n}\n\nexport async function getUser(username: string) {\n  const response = await axios.get(`api/v1/users/${username}`);\n  return response;\n}\n\nexport async function getOrganization(orgName: string) {\n  const response = await axios.get(`api/v1/organization/${orgName}`);\n  return response;\n}\n","// axios\nimport axios from 'axios';\nimport {GlobalAuthState} from 'src/resources/AuthResource';\n\nif (process.env.MOCK_API === 'true') {\n  require('src/tests/fake-db/ApiMock');\n}\n\naxios.defaults.withCredentials = true;\naxios.defaults.headers.common['X-Requested-With'] = 'XMLHttpRequest';\n\nexport async function getCsrfToken() {\n  if (process.env.MOCK_API === 'true') {\n    return 'test-csrf-token';\n  }\n  const response = await axios.get('/csrf_token');\n  GlobalAuthState.csrfToken = response.data.csrf_token;\n  return response.data;\n}\n\nconst axiosIns = axios.create();\naxiosIns.interceptors.request.use(async (config) => {\n  if (!GlobalAuthState.csrfToken) {\n    const r = await getCsrfToken();\n    GlobalAuthState.csrfToken = r.csrf_token;\n  }\n\n  if (!GlobalAuthState.bearerToken && window?.insights?.chrome?.auth) {\n    GlobalAuthState.bearerToken = await window.insights.chrome.auth.getToken();\n  }\n\n  if (config.headers && GlobalAuthState.csrfToken) {\n    config.headers['X-CSRF-Token'] = GlobalAuthState.csrfToken;\n  }\n\n  if (config.headers && GlobalAuthState.bearerToken) {\n    config.headers['Authorization'] = `Bearer ${GlobalAuthState.bearerToken}`;\n  }\n\n  return config;\n});\n\n// Catches errors thrown in axiosIns.interceptors.request.use\naxiosIns.interceptors.response.use(\n  (response) => {\n    return response;\n  },\n  async (error) => {\n    if (error.response?.status === 401) {\n      if (window?.insights?.chrome?.auth) {\n        // refresh token for plugin\n        GlobalAuthState.bearerToken =\n          await window.insights.chrome.auth.getToken();\n      } else {\n        // redirect to login page for standalone\n        window.location.href = '/signin';\n      }\n    }\n    throw error; // Rethrow error to be handled in components\n  },\n);\n\nexport default axiosIns;\n","import {AxiosError, AxiosResponse} from 'axios';\nimport axios from 'src/libs/axios';\nimport {assertHttpCode, BulkOperationError} from './ErrorHandling';\n\nexport interface TagsResponse {\n  page: number;\n  has_additional: boolean;\n  tags: Tag[];\n}\n\nexport interface Tag {\n  name: string;\n  is_manifest_list: boolean;\n  last_modified: string;\n  manifest_digest: string;\n  reversion: boolean;\n  size: number;\n  start_ts: number;\n  manifest_list: ManifestList;\n  expiration?: string;\n}\n\nexport interface ManifestList {\n  schemaVersion: number;\n  mediaType: string;\n  manifests: Manifest[];\n}\n\nexport interface Manifest {\n  mediaType: string;\n  size: number;\n  digest: string;\n  platform: Platform;\n  security: SecurityDetailsResponse;\n  layers: Layer[];\n}\n\nexport interface Layer {\n  size: number;\n}\n\nexport interface Platform {\n  architecture: string;\n  os: string;\n  features?: string[];\n  variant?: string;\n  'os.version'?: string;\n}\n\nexport interface LabelsResponse {\n  labels: Label[];\n}\n\nexport interface Label {\n  id: string;\n  key: string;\n  media_type: string;\n  source_type: string;\n  value: string;\n}\nexport interface ManifestByDigestResponse {\n  digest: string;\n  is_manifest_list: boolean;\n  manifest_data: string;\n  config_media_type?: any;\n  layers?: any;\n}\n\nexport interface SecurityDetailsResponse {\n  status: string;\n  data: Data;\n}\nexport interface Data {\n  Layer: Layer;\n}\nexport interface Layer {\n  Name: string;\n  ParentName: string;\n  NamespaceName: string;\n  IndexedByVersion: number;\n  Features: Feature[];\n}\nexport interface Feature {\n  Name: string;\n  VersionFormat: string;\n  NamespaceName: string;\n  AddedBy: string;\n  Version: string;\n  Vulnerabilities?: Vulnerability[];\n}\n\nexport interface Vulnerability {\n  Severity: VulnerabilitySeverity;\n  NamespaceName: string;\n  Link: string;\n  FixedBy: string;\n  Description: string;\n  Name: string;\n  Metadata: VulnerabilityMetadata;\n}\n\nexport interface VulnerabilityMetadata {\n  UpdatedBy: string;\n  RepoName: string;\n  RepoLink: string;\n  DistroName: string;\n  DistroVersion: string;\n  NVD: {\n    CVSSv3: {\n      Vectors: string;\n      Score: number;\n    };\n  };\n}\n\nexport enum VulnerabilitySeverity {\n  Critical = 'Critical',\n  High = 'High',\n  Medium = 'Medium',\n  Low = 'Low',\n  Negligible = 'Negligible',\n  None = 'None',\n  Unknown = 'Unknown',\n}\n\nexport const VulnerabilityOrder = {\n  [VulnerabilitySeverity.Critical]: 0,\n  [VulnerabilitySeverity.High]: 1,\n  [VulnerabilitySeverity.Medium]: 2,\n  [VulnerabilitySeverity.Low]: 3,\n  [VulnerabilitySeverity.Negligible]: 4,\n  [VulnerabilitySeverity.Unknown]: 5,\n};\n\nexport async function getTags(\n  org: string,\n  repo: string,\n  page: number,\n  limit = 100,\n  specificTag = null,\n) {\n  let path = `/api/v1/repository/${org}/${repo}/tag/?limit=${limit}&page=${page}&onlyActiveTags=true`;\n  if (specificTag) {\n    path = path.concat(`&specificTag=${specificTag}`);\n  }\n  const response: AxiosResponse<TagsResponse> = await axios.get(path);\n  assertHttpCode(response.status, 200);\n  return response.data;\n}\n\nexport async function getLabels(org: string, repo: string, digest: string) {\n  const response: AxiosResponse<LabelsResponse> = await axios.get(\n    `/api/v1/repository/${org}/${repo}/manifest/${digest}/labels`,\n  );\n  assertHttpCode(response.status, 200);\n  return response.data;\n}\n\ninterface TagLocation {\n  org: string;\n  repo: string;\n  tag: string;\n}\n\nexport async function bulkDeleteTags(tags: TagLocation[]) {\n  const responses = await Promise.allSettled(\n    tags.map((tag) => deleteTag(tag.org, tag.repo, tag.tag)),\n  );\n\n  // Filter failed responses\n  const errResponses = responses.filter(\n    (r) => r.status == 'rejected',\n  ) as PromiseRejectedResult[];\n\n  // If errors collect and throw\n  if (errResponses.length > 0) {\n    const bulkDeleteError = new BulkOperationError<TagDeleteError>(\n      'error deleting tags',\n    );\n    for (const response of errResponses) {\n      const reason = response.reason as TagDeleteError;\n      bulkDeleteError.addError(reason.tag, reason);\n    }\n    throw bulkDeleteError;\n  }\n}\n\nexport class TagDeleteError extends Error {\n  error: Error;\n  tag: string;\n  constructor(message: string, tag: string, error: AxiosError) {\n    super(message);\n    this.tag = tag;\n    this.error = error;\n    Object.setPrototypeOf(this, TagDeleteError.prototype);\n  }\n}\n\nexport async function deleteTag(org: string, repo: string, tag: string) {\n  try {\n    const response: AxiosResponse = await axios.delete(\n      `/api/v1/repository/${org}/${repo}/tag/${tag}`,\n    );\n    assertHttpCode(response.status, 204);\n  } catch (err) {\n    throw new TagDeleteError(\n      'failed to delete tag',\n      `${org}/${repo}:${tag}`,\n      err,\n    );\n  }\n}\n\nexport async function getManifestByDigest(\n  org: string,\n  repo: string,\n  digest: string,\n) {\n  const response: AxiosResponse<ManifestByDigestResponse> = await axios.get(\n    `/api/v1/repository/${org}/${repo}/manifest/${digest}`,\n  );\n  assertHttpCode(response.status, 200);\n  return response.data;\n}\n\nexport async function getSecurityDetails(\n  org: string,\n  repo: string,\n  digest: string,\n) {\n  const response: AxiosResponse<SecurityDetailsResponse> = await axios.get(\n    `/api/v1/repository/${org}/${repo}/manifest/${digest}/security?vulnerabilities=true`,\n  );\n  assertHttpCode(response.status, 200);\n  return response.data;\n}\n","import {VulnerabilitySeverity} from 'src/resources/TagResource';\n\nexport function getSeverityColor(severity: VulnerabilitySeverity) {\n  switch (severity) {\n    case VulnerabilitySeverity.Critical:\n      return '#7D1007';\n    case VulnerabilitySeverity.High:\n      return '#C9190B';\n    case VulnerabilitySeverity.Medium:\n      return '#EC7A08';\n    case VulnerabilitySeverity.Low:\n      return '#F0AB00';\n    case VulnerabilitySeverity.None:\n      return '#3E8635';\n    default:\n      return '#8A8D90';\n  }\n}\n\nexport function formatDate(date: string | number) {\n  if (date == -1) {\n    return 'N/A';\n  }\n\n  const adjustedDate = typeof date === 'number' ? date * 1000 : date;\n  return new Date(adjustedDate).toLocaleString('en-US', {\n    timeZone: Intl.DateTimeFormat().resolvedOptions().timeZone,\n    timeStyle: 'short',\n    dateStyle: 'medium',\n  });\n}\n\nexport function formatSize(sizeInBytes: number) {\n  if (!sizeInBytes) {\n    // null or undefined\n    return 'N/A';\n  }\n\n  const i = Math.floor(Math.log(sizeInBytes) / Math.log(1024));\n  return (\n    (sizeInBytes / Math.pow(1024, i)).toFixed(2) +\n    ' ' +\n    ['B', 'kB', 'MB', 'GB', 'TB'][i]\n  );\n}\n\nexport function isValidEmail(email: string): boolean {\n  const regex = /\\S+@\\S+\\.\\S+/;\n  return regex.test(email);\n}\n\nexport function parseRepoNameFromUrl(url: string): string {\n  //url is in the format of <prefix>/repository/<org>/<repo>\n  //or <prefix>/repository/<org>/<repo>/tag/<tag>\n\n  const urlParts = url.split('/');\n  const repoKeywordIndex = urlParts.indexOf('repository');\n  if (repoKeywordIndex === -1) {\n    return '';\n  }\n\n  return urlParts[repoKeywordIndex + 2];\n}\n\nexport function parseOrgNameFromUrl(url: string): string {\n  //url is in the format of <prefix>/repository/<org>/<repo>\n  //or <prefix>/repository/<org>/<repo>/tag/<tag>\n  const urlParts = url.split('/');\n  const repoKeywordIndex = urlParts.indexOf('repository');\n  if (repoKeywordIndex === -1) {\n    return '';\n  }\n  return urlParts[repoKeywordIndex + 1];\n}\n\nexport function parseTagNameFromUrl(url: string): string {\n  //url is in the format of <prefix>/repository/<org>/<repo>\n  //or <prefix>/repository/<org>/<repo>/tag/<tag>\n\n  const urlParts = url.split('/');\n  const repoKeywordIndex = urlParts.indexOf('repository');\n  const tagKeywordIndex = urlParts.indexOf('tag');\n\n  if (repoKeywordIndex === -1) {\n    return '';\n  }\n\n  if (tagKeywordIndex === -1) {\n    return '';\n  }\n\n  return urlParts[tagKeywordIndex + 1];\n}\n","import {Alert, AlertActionCloseButton} from '@patternfly/react-core';\nimport {isErrorString} from 'src/resources/ErrorHandling';\n\nexport default function FormError(props: FormErrorProps) {\n  if (!isErrorString(props.message)) {\n    return null;\n  }\n  return (\n    <Alert\n      id=\"form-error-alert\"\n      isInline\n      actionClose={<AlertActionCloseButton onClose={() => props.setErr('')} />}\n      variant=\"danger\"\n      title={props.message}\n    />\n  );\n}\n\ninterface FormErrorProps {\n  message: string;\n  setErr: (tag: string) => void;\n}\n","import {AxiosError, AxiosResponse} from 'axios';\nimport axios from 'src/libs/axios';\nimport {assertHttpCode, BulkOperationError} from './ErrorHandling';\n\nexport interface IAvatar {\n  name: string;\n  hash: string;\n  color: string;\n  kind: string;\n}\n\nexport interface IOrganization {\n  name: string;\n  avatar?: IAvatar;\n  can_create_repo?: boolean;\n  public?: boolean;\n  is_org_admin?: boolean;\n  preferred_namespace?: boolean;\n  teams?: string[];\n}\n\nexport async function fetchOrg(orgname: string, signal: AbortSignal) {\n  const getOrgUrl = `/api/v1/organization/${orgname}`;\n  // TODO: Add return type\n  const response: AxiosResponse = await axios.get(getOrgUrl, {signal});\n  assertHttpCode(response.status, 200);\n  return response.data as IOrganization;\n}\n\nexport interface SuperUserOrganizations {\n  organizations: IOrganization[];\n}\n\nexport async function fetchOrgsAsSuperUser() {\n  const superUserOrgsUrl = `/api/v1/superuser/organizations/`;\n  const response: AxiosResponse<SuperUserOrganizations> = await axios.get(\n    superUserOrgsUrl,\n  );\n  assertHttpCode(response.status, 200);\n  return response.data?.organizations;\n}\n\nexport class OrgDeleteError extends Error {\n  error: AxiosError;\n  org: string;\n  constructor(message: string, org: string, error: AxiosError) {\n    super(message);\n    this.org = org;\n    this.error = error;\n    Object.setPrototypeOf(this, OrgDeleteError.prototype);\n  }\n}\n\nexport async function deleteOrg(orgname: string, isSuperUser = false) {\n  try {\n    const deleteApiUrl = isSuperUser\n      ? `/api/v1/superuser/organizations/${orgname}`\n      : `/api/v1/organization/${orgname}`;\n    // TODO: Add return type\n    const response: AxiosResponse = await axios.delete(deleteApiUrl);\n    assertHttpCode(response.status, 204);\n    return response.data;\n  } catch (err) {\n    throw new OrgDeleteError('failed to delete org ', orgname, err);\n  }\n}\n\nexport async function bulkDeleteOrganizations(\n  orgs: string[],\n  isSuperUser = false,\n) {\n  const responses = await Promise.allSettled(\n    orgs.map((org) => deleteOrg(org, isSuperUser)),\n  );\n\n  // Aggregate failed responses\n  const errResponses = responses.filter(\n    (r) => r.status == 'rejected',\n  ) as PromiseRejectedResult[];\n\n  // If errors, collect and throw\n  if (errResponses.length > 0) {\n    const bulkDeleteError = new BulkOperationError<OrgDeleteError>(\n      'error deleting orgs',\n    );\n    for (const response of errResponses) {\n      const reason = response.reason as OrgDeleteError;\n      bulkDeleteError.addError(reason.org, reason);\n    }\n    throw bulkDeleteError;\n  }\n\n  return responses;\n}\n\ninterface CreateOrgRequest {\n  name: string;\n  email?: string;\n}\n\nexport async function createOrg(name: string, email?: string) {\n  const createOrgUrl = `/api/v1/organization/`;\n  const reqBody: CreateOrgRequest = {name: name};\n  if (email) {\n    reqBody.email = email;\n  }\n  const response = await axios.post(createOrgUrl, reqBody);\n  assertHttpCode(response.status, 201);\n  return response.data;\n}\n","import {\n  Modal,\n  ModalVariant,\n  Button,\n  Form,\n  FormGroup,\n  TextInput,\n} from '@patternfly/react-core';\nimport './css/Organizations.scss';\nimport {isValidEmail} from 'src/libs/utils';\nimport {useState} from 'react';\nimport FormError from 'src/components/errors/FormError';\nimport {addDisplayError} from 'src/resources/ErrorHandling';\nimport {useCreateOrganization} from 'src/hooks/UseCreateOrganization';\n\ninterface Validation {\n  message: string;\n  isValid: boolean;\n  type: 'default' | 'error' | 'warning';\n}\n\nconst defaultMessage: Validation = {\n  message:\n    'This will also be the namespace for your repositories. Must be alphanumeric, all lowercase, at least 2 characters long and at most 255 characters long',\n  isValid: true,\n  type: 'default',\n};\n\nexport const CreateOrganizationModal = (\n  props: CreateOrganizationModalProps,\n): JSX.Element => {\n  const [organizationName, setOrganizationName] = useState('');\n  const [organizationEmail, setOrganizationEmail] = useState('');\n  const [invalidEmailFlag, setInvalidEmailFlag] = useState(false);\n  const [validation, setValidation] = useState<Validation>(defaultMessage);\n  const [err, setErr] = useState<string>();\n\n  const {createOrganization} = useCreateOrganization({\n    onSuccess: () => props.handleModalToggle(),\n    onError: (err) => {\n      setErr(addDisplayError('Unable to create organization', err));\n    },\n  });\n\n  const handleNameInputChange = (value: any) => {\n    const regex = /^([a-z0-9]+(?:[._-][a-z0-9]+)*)$/;\n    if (!regex.test(value) || value.length >= 256 || value.length < 2) {\n      setValidation({\n        message:\n          'Must be alphanumeric, all lowercase, at least 2 characters long and at most 255 characters long',\n        isValid: false,\n        type: 'error',\n      });\n    } else if (value.length > 30 || value.length < 4) {\n      setValidation({\n        message:\n          'Namespaces less than 4 or more than 30 characters are only compatible with Docker 1.6+',\n        isValid: true,\n        type: 'warning',\n      });\n    } else if (value.includes('.') || value.includes('-')) {\n      setValidation({\n        message:\n          'Namespaces with dashes or dots are only compatible with Docker 1.9+',\n        isValid: true,\n        type: 'warning',\n      });\n    } else {\n      setValidation(defaultMessage);\n    }\n    setOrganizationName(value);\n  };\n\n  const handleEmailInputChange = (value: any) => {\n    setOrganizationEmail(value);\n  };\n\n  const createOrganizationHandler = async () => {\n    await createOrganization(organizationName, organizationEmail);\n  };\n\n  const onInputBlur = () => {\n    if (organizationEmail.length !== 0) {\n      isValidEmail(organizationEmail)\n        ? setInvalidEmailFlag(false)\n        : setInvalidEmailFlag(true);\n    } else {\n      return;\n    }\n  };\n\n  return (\n    <Modal\n      title=\"Create Organization\"\n      variant={ModalVariant.large}\n      isOpen={props.isModalOpen}\n      onClose={props.handleModalToggle}\n      actions={[\n        <Button\n          id=\"create-org-confirm\"\n          key=\"confirm\"\n          variant=\"primary\"\n          onClick={createOrganizationHandler}\n          form=\"modal-with-form-form\"\n          isDisabled={\n            invalidEmailFlag || !organizationName || !validation.isValid\n          }\n        >\n          Create\n        </Button>,\n        <Button\n          id=\"create-org-cancel\"\n          key=\"cancel\"\n          variant=\"link\"\n          onClick={props.handleModalToggle}\n        >\n          Cancel\n        </Button>,\n      ]}\n    >\n      <FormError message={err} setErr={setErr} />\n      <Form id=\"create-org-modal\" isWidthLimited>\n        <FormGroup\n          isInline\n          label=\"Organization Name\"\n          isRequired\n          fieldId=\"create-org-name\"\n          helperText={validation.message}\n          helperTextInvalid={validation.message}\n          validated={validation.type}\n        >\n          <TextInput\n            isRequired\n            type=\"text\"\n            id=\"create-org-name-input\"\n            value={organizationName}\n            onChange={handleNameInputChange}\n            validated={validation.type}\n          />\n        </FormGroup>\n        <FormGroup\n          label=\"Organization Email\"\n          fieldId=\"create-org-email\"\n          helperText=\"This address must be different from your account's email\"\n          helperTextInvalid={'Enter a valid email: email@provider.com'}\n          validated={invalidEmailFlag ? 'error' : 'default'}\n        >\n          <TextInput\n            type=\"email\"\n            id=\"create-org-email-input\"\n            name=\"create-org-email-input\"\n            value={organizationEmail}\n            onChange={handleEmailInputChange}\n            validated={invalidEmailFlag ? 'error' : 'default'}\n            onBlur={onInputBlur}\n          />\n        </FormGroup>\n        <br />\n      </Form>\n    </Modal>\n  );\n};\n\ntype CreateOrganizationModalProps = {\n  isModalOpen: boolean;\n  handleModalToggle?: () => void;\n};\n","import {useMutation, useQueryClient} from '@tanstack/react-query';\nimport {createOrg} from 'src/resources/OrganizationResource';\nexport function useCreateOrganization({onSuccess, onError}) {\n  const queryClient = useQueryClient();\n\n  const createOrganizationMutator = useMutation(\n    async ({name, email}: {name: string; email: string}) => {\n      return createOrg(name, email);\n    },\n    {\n      onSuccess: () => {\n        onSuccess();\n        queryClient.invalidateQueries(['user']);\n      },\n      onError: (err) => {\n        onError(err);\n      },\n    },\n  );\n\n  return {\n    createOrganization: async (name: string, email: string) =>\n      createOrganizationMutator.mutate({name, email}),\n  };\n}\n","const ColumnNames = {\n  name: 'Name',\n  repoCount: 'Repo Count',\n  teamsCount: 'Teams',\n  membersCount: 'Members',\n  robotsCount: 'Robots',\n  lastModified: 'Last Modified',\n};\n\nexport default ColumnNames;\n","import {atom} from 'recoil';\nimport {IOrganization} from 'src/resources/OrganizationResource';\nimport ColumnNames from 'src/routes/OrganizationsList/ColumnNames';\nimport {SearchState} from 'src/components/toolbar/SearchTypes';\n\nexport const CurrentUsernameState = atom({\n  key: 'currentUsernameState',\n  default: '',\n});\n\nexport const selectedOrgsState = atom<IOrganization[]>({\n  key: 'selectedOrgsState',\n  default: [],\n});\n\nexport const searchOrgsState = atom<SearchState>({\n  key: 'searchOrgsState',\n  default: {\n    query: '',\n    field: ColumnNames.name,\n  },\n});\n","import {fetchOrg, IAvatar} from './OrganizationResource';\nimport axios from 'src/libs/axios';\nimport {assertHttpCode} from './ErrorHandling';\n\nexport interface IMember {\n  name: string;\n  kind: string;\n  teams: ITeam[];\n  repositories: string[];\n}\n\nexport interface ITeam {\n  name: string;\n  avatar: IAvatar;\n}\n\nexport async function fetchAllMembers(orgnames: string[], signal: AbortSignal) {\n  return await Promise.all(\n    orgnames.map((org) => fetchMembersForOrg(org, signal)),\n  );\n}\n\nexport async function fetchMembersForOrg(\n  orgname: string,\n  signal: AbortSignal,\n): Promise<IMember[]> {\n  const getMembersUrl = `/api/v1/organization/${orgname}/members`;\n  const response = await axios.get(getMembersUrl, {signal});\n  assertHttpCode(response.status, 200);\n  return response.data?.members;\n}\n","import {AxiosError, AxiosResponse} from 'axios';\nimport axios from 'src/libs/axios';\nimport {assertHttpCode, BulkOperationError} from './ErrorHandling';\n\nexport interface IRobot {\n  name: string;\n  created: string;\n  last_accessed: string;\n  teams: string[];\n  repositories: string[];\n  description: string;\n}\n\nexport interface IRobotRepoPerms {\n  name: string;\n  permission: string;\n  last_modified: string;\n}\n\nexport interface IRobotTeamAvatar {\n  color: string;\n  hash: string;\n  kind: string;\n  name: string;\n}\n\nexport interface IRobotTeam {\n  avatar: IRobotTeamAvatar;\n  can_view: boolean;\n  is_synced: boolean;\n  member_count: number;\n  name: string;\n  repo_count: 0;\n  role: string;\n}\n\nexport interface IRepoPerm {\n  reponame: string;\n  permission: string;\n}\n\nexport interface IRobotToken {\n  name: string;\n  created: string;\n  last_accessed: string;\n  description: string;\n  token: string;\n  unstructured_metadata: object;\n}\n\nexport async function fetchAllRobots(orgnames: string[], signal: AbortSignal) {\n  return await Promise.all(\n    orgnames.map((org) => fetchRobotsForNamespace(org, false, signal)),\n  );\n}\n\nexport class RobotDeleteError extends Error {\n  error: AxiosError;\n  robotName: string;\n  constructor(message: string, robotName: string, error: AxiosError) {\n    super(message);\n    this.robotName = robotName;\n    this.error = error;\n    Object.setPrototypeOf(this, RobotDeleteError.prototype);\n  }\n}\n\nexport async function fetchRobotsForNamespace(\n  orgname: string,\n  isUser = false,\n  signal: AbortSignal,\n): Promise<IRobot[]> {\n  const userOrOrgPath = isUser ? 'user' : `organization/${orgname}`;\n  const getRobotsUrl = `/api/v1/${userOrOrgPath}/robots?permissions=true&token=false`;\n  const response: AxiosResponse = await axios.get(getRobotsUrl, {signal});\n  assertHttpCode(response.status, 200);\n  return response.data?.robots;\n}\n\nexport async function addDefaultPermsForRobot(\n  orgname: string,\n  robotname: string,\n  permission: string,\n  isUser = false,\n): Promise<IRobot[]> {\n  const robotNameWithOrg = `${orgname}+${robotname}`;\n  const updatePermsUrl = `/api/v1/organization/${orgname}/prototypes`;\n  const delegate = {\n    name: robotNameWithOrg,\n    kind: 'user',\n    is_robot: true,\n  };\n  const payload = {delegate: delegate, role: permission.toLowerCase()};\n  const response: AxiosResponse = await axios.post(updatePermsUrl, payload);\n  assertHttpCode(response.status, 200);\n  return response.data;\n}\n\nexport async function updateRepoPermsForRobot(\n  orgname: string,\n  robotname: string,\n  reponame: string,\n  permission: string,\n  isUser = false,\n): Promise<IRobot[]> {\n  const robotNameWithOrg = `${orgname}+${robotname}`;\n  const updatePermsUrl = `/api/v1/repository/${orgname}/${reponame}/permissions/user/${robotNameWithOrg}`;\n  const payload = {role: permission.toLowerCase()};\n  const response: AxiosResponse = await axios.put(updatePermsUrl, payload);\n  assertHttpCode(response.status, 200);\n  return response.data;\n}\n\nexport async function bulkUpdateRepoPermsForRobot(\n  orgname: string,\n  robotname: string,\n  repoPerms: IRepoPerm[],\n) {\n  const responses = await Promise.allSettled(\n    repoPerms.map((repoPerm) =>\n      updateRepoPermsForRobot(\n        orgname,\n        robotname,\n        repoPerm.reponame,\n        repoPerm.permission,\n      ),\n    ),\n  );\n\n  // Aggregate failed responses\n  const errResponses = responses.filter(\n    (r) => r.status == 'rejected',\n  ) as PromiseRejectedResult[];\n\n  // If errors, collect and throw\n  if (errResponses.length > 0) {\n    const bulkDeleteError = new BulkOperationError(\n      'error deleting repository permissions',\n    );\n    for (const response of errResponses) {\n      const reason = response.reason;\n      bulkDeleteError.addError(reason.repository_name, reason);\n    }\n    throw bulkDeleteError;\n  }\n\n  return {response: responses, robotname: robotname};\n}\n\nexport async function deleteRepoPermsForRobot(\n  orgname: string,\n  robotname: string,\n  reponame: string,\n  isUser = false,\n) {\n  const robotNameWithOrg = `${orgname}+${robotname}`;\n  const deletePermsUrl = `/api/v1/repository/${orgname}/${reponame}/permissions/user/${robotNameWithOrg}`;\n  const response: AxiosResponse = await axios.delete(deletePermsUrl);\n  assertHttpCode(response.status, 204);\n  return response.data;\n}\n\nexport async function bulkDeleteRepoPermsForRobot(\n  orgname: string,\n  robotname: string,\n  repoNames: string[],\n) {\n  const responses = await Promise.allSettled(\n    repoNames.map((repoName) =>\n      deleteRepoPermsForRobot(orgname, robotname, repoName),\n    ),\n  );\n\n  // Aggregate failed responses\n  const errResponses = responses.filter(\n    (r) => r.status == 'rejected',\n  ) as PromiseRejectedResult[];\n\n  // If errors, collect and throw\n  if (errResponses.length > 0) {\n    const bulkDeleteError = new BulkOperationError(\n      'error deleting repository permissions',\n    );\n    for (const response of errResponses) {\n      const reason = response.reason;\n      bulkDeleteError.addError(reason.repository_name, reason);\n    }\n    throw bulkDeleteError;\n  }\n\n  return {response: responses, robotname: robotname};\n}\n\nexport async function createNewRobotForNamespace(\n  orgname: string,\n  robotname: string,\n  description: string,\n  isUser = false,\n  reposToUpdate: IRobotRepoPerms[],\n  selectedTeams: IRobotTeam[],\n  robotDefaultPerm: string,\n) {\n  const namespacePath = isUser ? 'user' : `organization/${orgname}`;\n  const createOrgRobotsUrl = `/api/v1/${namespacePath}/robots/${robotname}`;\n  const payload = {description: description};\n  const response: AxiosResponse = await axios.put(createOrgRobotsUrl, payload);\n  assertHttpCode(response.status, 201);\n  return {\n    robotname: robotname,\n    isUser: isUser,\n    reposToUpdate: reposToUpdate,\n    selectedTeams: selectedTeams,\n    robotDefaultPerm: robotDefaultPerm,\n  };\n}\n\nexport async function deleteRobotAccount(orgname: string, robotname: string) {\n  try {\n    const robot = robotname.replace(orgname + '+', '');\n    const deleteUrl = `/api/v1/organization/${orgname}/robots/${robot}`;\n    const response: AxiosResponse = await axios.delete(deleteUrl);\n    assertHttpCode(response.status, 204);\n    return response.data;\n  } catch (err) {\n    throw new RobotDeleteError(\n      'failed to delete robot account ',\n      robotname,\n      err,\n    );\n  }\n}\n\nexport async function bulkDeleteRobotAccounts(\n  orgname: string,\n  robotaccounts: string[],\n) {\n  const responses = await Promise.allSettled(\n    robotaccounts.map((robot) => deleteRobotAccount(orgname, robot)),\n  );\n\n  // Aggregate failed responses\n  const errResponses = responses.filter(\n    (r) => r.status == 'rejected',\n  ) as PromiseRejectedResult[];\n\n  // If errors, collect and throw\n  if (errResponses.length > 0) {\n    const bulkDeleteError = new BulkOperationError(\n      'error deleting robot accounts',\n    );\n    for (const response of errResponses) {\n      const reason = response.reason;\n      bulkDeleteError.addError(reason.robot, reason);\n    }\n    throw bulkDeleteError;\n  }\n\n  return responses;\n}\n\nexport async function fetchRobotPermissionsForNamespace(\n  orgName: string,\n  robotName: string,\n  isUser = false,\n  signal: AbortSignal,\n) {\n  const robot = robotName.replace(orgName + '+', '');\n  const userOrOrgPath = isUser ? 'user' : `organization/${orgName}`;\n  const getRobotPermsUrl = `/api/v1/${userOrOrgPath}/robots/${robot}/permissions`;\n  const response: AxiosResponse = await axios.get(getRobotPermsUrl, {signal});\n  assertHttpCode(response.status, 200);\n  return response.data?.permissions;\n}\n\nexport async function fetchRobotAccountToken(\n  orgName: string,\n  robotName: string,\n  isUser = false,\n  signal: AbortSignal,\n) {\n  const robot = robotName.replace(orgName + '+', '');\n  const userOrOrgPath = isUser ? 'user' : `organization/${orgName}`;\n  const getRobotTokenUrl = `/api/v1/${userOrOrgPath}/robots/${robot}`;\n  const response: AxiosResponse = await axios.get(getRobotTokenUrl, {signal});\n  assertHttpCode(response.status, 200);\n  return response.data;\n}\n\nexport async function regenerateRobotToken(\n  orgName: string,\n  robotName: string,\n  isUser = false,\n): Promise<IRobot[]> {\n  const robot = robotName.replace(orgName + '+', '');\n  const updatePermsUrl = `/api/v1/organization/${orgName}/robots/${robot}/regenerate`;\n  const response: AxiosResponse = await axios.post(updatePermsUrl, {});\n  assertHttpCode(response.status, 200);\n  return response.data;\n}\n","import {AxiosError, AxiosResponse} from 'axios';\nimport axios from 'src/libs/axios';\nimport {\n  assertHttpCode,\n  BulkOperationError,\n  ResourceError,\n  throwIfError,\n} from './ErrorHandling';\nimport {IAvatar} from './OrganizationResource';\n\nexport interface IRepository {\n  namespace: string;\n  name: string;\n  description?: string;\n  is_public?: boolean;\n  kind?: string;\n  state?: string;\n  size?: number;\n  last_modified?: number;\n  popularity?: number;\n  is_starred?: boolean;\n  quota_report?: IQuotaReport;\n}\n\nexport interface RepositoryCreationResponse {\n  namespace: string;\n  name: string;\n  kind: string;\n}\n\nexport interface IQuotaReport {\n  quota_bytes: number;\n  configured_quota: number;\n}\n\nexport async function fetchAllRepos(\n  namespaces: string[],\n  flatten = false,\n  signal: AbortSignal,\n  next_page_token = null,\n): Promise<IRepository[] | IRepository[][]> {\n  const namespacedRepos = await Promise.all(\n    namespaces.map((ns) => {\n      return fetchRepositoriesForNamespace(ns, signal, next_page_token);\n    }),\n  );\n\n  // Flatten responses to a single list of all repositories\n  if (flatten) {\n    return namespacedRepos.reduce(\n      (allRepos, namespacedRepos) => allRepos.concat(namespacedRepos),\n      [],\n    );\n  } else {\n    return namespacedRepos;\n  }\n}\n\nexport async function fetchRepositoriesForNamespace(\n  ns: string,\n  signal: AbortSignal,\n  next_page_token: string = null,\n): Promise<IRepository[]> {\n  const url = next_page_token\n    ? `/api/v1/repository?next_page=${next_page_token}&last_modified=true&namespace=${ns}&public=true`\n    : `/api/v1/repository?last_modified=true&namespace=${ns}&public=true`;\n  const response: AxiosResponse = await axios.get(url, {signal});\n  assertHttpCode(response.status, 200);\n\n  const next_page = response.data?.next_page;\n  const repos = response.data?.repositories as IRepository[];\n\n  if (next_page) {\n    const resp = await fetchRepositoriesForNamespace(ns, signal, next_page);\n    return repos.concat(resp);\n  }\n  return repos as IRepository[];\n}\n\nexport async function fetchRepositories() {\n  // TODO: Add return type to AxiosResponse\n  const response: AxiosResponse = await axios.get(\n    `/api/v1/repository?last_modified=true&public=true`,\n  );\n  assertHttpCode(response.status, 200);\n  return response.data?.repositories as IRepository[];\n}\n\nexport interface RepositoryDetails {\n  can_admin: boolean;\n  can_write: boolean;\n  description: string | null;\n  is_free_account: boolean;\n  is_organization: boolean;\n  is_public: boolean;\n  is_starred: boolean;\n  kind: string | null;\n  name: string | null;\n  namespace: string | null;\n  state: string | null;\n  status_token: string | null;\n  tag_expiration_s: number | null;\n  trust_enabled: boolean;\n}\n\nexport async function fetchRepositoryDetails(org: string, repo: string) {\n  const response: AxiosResponse<RepositoryDetails> = await axios.get(\n    `/api/v1/repository/${org}/${repo}?includeStats=false&includeTags=false`,\n  );\n  assertHttpCode(response.status, 200);\n  return response.data;\n}\n\nexport async function createNewRepository(\n  namespace: string,\n  repository: string,\n  visibility: string,\n  description: string,\n  repo_kind: string,\n) {\n  const newRepositoryApiUrl = `/api/v1/repository`;\n  const response: AxiosResponse<RepositoryCreationResponse> = await axios.post(\n    newRepositoryApiUrl,\n    {\n      namespace,\n      repository,\n      visibility,\n      description,\n      repo_kind,\n    },\n  );\n  assertHttpCode(response.status, 201);\n  return response.data;\n}\n\nexport async function setRepositoryVisibility(\n  namespace: string,\n  repositoryName: string,\n  visibility: string,\n) {\n  // TODO: Add return type to AxiosResponse\n  const api = `/api/v1/repository/${namespace}/${repositoryName}/changevisibility`;\n  const response: AxiosResponse = await axios.post(api, {\n    visibility,\n  });\n  assertHttpCode(response.status, 200);\n  return response.data;\n}\n\nexport async function bulkDeleteRepositories(repos: IRepository[]) {\n  const responses = await Promise.allSettled(\n    repos.map((repo) => deleteRepository(repo.namespace, repo.name)),\n  );\n\n  // Aggregate failed responses\n  const errResponses = responses.filter(\n    (r) => r.status == 'rejected',\n  ) as PromiseRejectedResult[];\n\n  // If errors, collect and throw\n  if (errResponses.length > 0) {\n    const bulkDeleteError = new BulkOperationError<RepoDeleteError>(\n      'error deleting tags',\n    );\n    for (const response of errResponses) {\n      const reason = response.reason as RepoDeleteError;\n      bulkDeleteError.addError(reason.repo, reason);\n    }\n    throw bulkDeleteError;\n  }\n}\n\nexport interface RepoPermissionsResponse {\n  permissions: Record<string, RepoMemberPermissions>;\n}\n\nexport interface RepoMemberPermissions {\n  role: RepoRole;\n  name: string;\n  avatar: IAvatar;\n  is_robot?: boolean;\n  is_org_member?: boolean;\n}\n\nexport async function fetchUserRepoPermissions(org: string, repo: string) {\n  const response: AxiosResponse<RepoPermissionsResponse> = await axios.get(\n    `/api/v1/repository/${org}/${repo}/permissions/user/`,\n  );\n  return response.data.permissions;\n}\n\nexport async function fetchTeamRepoPermissions(org: string, repo: string) {\n  const response: AxiosResponse<RepoPermissionsResponse> = await axios.get(\n    `/api/v1/repository/${org}/${repo}/permissions/team/`,\n  );\n  return response.data.permissions;\n}\n\nexport interface RepoMember {\n  org: string;\n  repo: string;\n  name: string;\n  type: MemberType;\n  role: RepoRole;\n}\n\nexport enum RepoRole {\n  read = 'read',\n  write = 'write',\n  admin = 'admin',\n}\n\nexport enum MemberType {\n  user = 'user',\n  robot = 'robot',\n  team = 'team',\n}\n\nexport async function setRepoPermissions(role: RepoMember, newRole: RepoRole) {\n  const type = role.type == MemberType.robot ? MemberType.user : role.type;\n  try {\n    await axios.put(\n      `/api/v1/repository/${role.org}/${role.repo}/permissions/${type}/${role.name}`,\n      {role: newRole},\n    );\n  } catch (err) {\n    throw new ResourceError(\n      'failed to set repository permissions',\n      role.name,\n      err,\n    );\n  }\n}\n\nexport async function bulkSetRepoPermissions(\n  roles: RepoMember[],\n  newRole: RepoRole,\n) {\n  const responses = await Promise.allSettled(\n    roles.map((role) => setRepoPermissions(role, newRole)),\n  );\n  throwIfError(responses);\n}\n\nexport async function bulkDeleteRepoPermissions(roles: RepoMember[]) {\n  const responses = await Promise.allSettled(\n    roles.map((role) => deleteRepoPermissions(role)),\n  );\n  throwIfError(responses);\n}\n\nexport async function deleteRepoPermissions(role: RepoMember) {\n  const roleType = role.type == MemberType.robot ? MemberType.user : role.type;\n  try {\n    await axios.delete(\n      `/api/v1/repository/${role.org}/${role.repo}/permissions/${roleType}/${role.name}`,\n    );\n  } catch (err) {\n    throw new ResourceError(\n      'failed to set repository permissions',\n      role.name,\n      err,\n    );\n  }\n}\n\nexport class RepoDeleteError extends Error {\n  error: Error;\n  repo: string;\n  constructor(message: string, repo: string, error: AxiosError) {\n    super(message);\n    this.repo = repo;\n    this.error = error;\n    Object.setPrototypeOf(this, RepoDeleteError.prototype);\n  }\n}\n\n// Not returning response from deleting repository for now as\n// it's not required but may want to add it in the future.\nexport async function deleteRepository(ns: string, name: string) {\n  try {\n    const response: AxiosResponse = await axios.delete(\n      `/api/v1/repository/${ns}/${name}`,\n    );\n    assertHttpCode(response.status, 204);\n  } catch (err) {\n    throw new RepoDeleteError(\n      'failed to delete repository',\n      `${ns}/${name}`,\n      err,\n    );\n  }\n}\n","import {AxiosResponse} from 'axios';\nimport axios from 'src/libs/axios';\nimport {assertHttpCode} from './ErrorHandling';\nimport {IAvatar, IOrganization} from './OrganizationResource';\nimport {MemberType} from './RepositoryResource';\n\nexport interface IUserResource {\n  anonymous: boolean;\n  username: string;\n  avatar: IAvatar;\n  can_create_repo: boolean;\n  is_me: boolean;\n  verified: true;\n  email: string;\n  logins: [\n    {\n      service: string;\n      service_identifier: string;\n      metadata: {\n        service_username: string;\n      };\n    },\n  ];\n  invoice_email: boolean;\n  invoice_email_address: string;\n  preferred_namespace: boolean;\n  tag_expiration_s: number;\n  prompts: [];\n  super_user: boolean;\n  company: string;\n  family_name: string;\n  given_name: string;\n  location: string;\n  is_free_account: boolean;\n  has_password_set: boolean;\n  organizations: IOrganization[];\n}\n\nexport async function fetchUser() {\n  const response: AxiosResponse<IUserResource> = await axios.get(\n    '/api/v1/user/',\n  );\n  assertHttpCode(response.status, 200);\n  return response.data;\n}\n\nexport interface AllUsers {\n  users: IUserResource[];\n}\n\nexport async function fetchUsersAsSuperUser() {\n  const superUserOrgsUrl = `/api/v1/superuser/users/`;\n  const response: AxiosResponse<AllUsers> = await axios.get(superUserOrgsUrl);\n  assertHttpCode(response.status, 200);\n  return response.data?.users;\n}\n\nexport interface Entity {\n  avatar: IAvatar;\n  is_org_member: boolean;\n  name: string;\n  kind: string;\n  is_robot?: boolean;\n}\n\ninterface EntitiesResponse {\n  results: Entity[];\n}\n\nexport function getMemberType(entity: Entity) {\n  if (entity.kind == MemberType.team) {\n    return MemberType.team;\n  } else if (entity.kind == MemberType.user && entity.is_robot) {\n    return MemberType.robot;\n  } else if (entity.kind == MemberType.user) {\n    return MemberType.user;\n  }\n}\n\nexport async function fetchEntities(org: string, search: string) {\n  // Handles the case of robot accounts, API doesn't recognize anything before the + sign\n  if (search.indexOf('+') > -1) {\n    const splitSearchTerm = search.split('+');\n    search = splitSearchTerm.length > 1 ? splitSearchTerm[1] : '';\n  }\n  const response: AxiosResponse<EntitiesResponse> = await axios.get(\n    `/api/v1/entities/${search}?namespace=${org}&includeTeams=true`,\n  );\n  assertHttpCode(response.status, 200);\n  return response.data?.results;\n}\n\nexport async function updateUser(username: string) {\n  const response: AxiosResponse<IUserResource> = await axios.put(\n    'api/v1/user/', {username: username}\n  );\n  assertHttpCode(response.status, 200);\n  return response.data;\n}\n","// import { getBackendUrl } from '../utils/httputils';\n\nimport {AxiosResponse} from 'axios';\nimport axios from '../libs/axios';\nimport {assertHttpCode} from './ErrorHandling';\n\nexport async function fetchQuayConfig() {\n  // TODO: Add response type to AxiosResponse\n  const response: AxiosResponse = await axios.get('/config');\n  assertHttpCode(response.status, 200);\n  return response.data;\n}\n","import {fetchQuayConfig} from 'src/resources/QuayConfig';\nimport {useQuery} from '@tanstack/react-query';\n\nexport function useQuayConfig() {\n  const {\n    data: config,\n    isLoading: configIsLoading,\n    error,\n  } = useQuery(['config'], fetchQuayConfig, {\n    staleTime: Infinity,\n  });\n\n  return config;\n}\n","import {fetchUser} from 'src/resources/UserResource';\nimport {useQuery} from '@tanstack/react-query';\nimport {useQuayConfig} from './UseQuayConfig';\n\nexport function useCurrentUser() {\n  const config = useQuayConfig();\n  const {\n    data: user,\n    isLoading: loading,\n    error,\n  } = useQuery(['user'], fetchUser, {\n    staleTime: Infinity,\n  });\n\n  const isSuperUser =\n    config?.features?.SUPERUSERS_FULL_ACCESS && user?.super_user;\n\n  return {user, loading, error, isSuperUser};\n}\n","export const RepositoryListColumnNames = {\n  name: 'Name',\n  visibility: 'Visibility',\n  size: 'Size',\n  lastModified: 'Last Modified',\n};\n\nexport const RobotAccountColumnNames = {\n  robotAccountName: 'Robot account name',\n  teams: 'Teams',\n  repositories: 'Repositories',\n  created: 'Created',\n  lastAccessed: 'Last accessed',\n};\n","import {useState} from 'react';\nimport {\n  fetchAllRepos,\n  fetchRepositoriesForNamespace,\n} from 'src/resources/RepositoryResource';\nimport {useQuery} from '@tanstack/react-query';\nimport {useCurrentUser} from './UseCurrentUser';\nimport {SearchState} from 'src/components/toolbar/SearchTypes';\nimport {RepositoryListColumnNames as ColumnNames} from 'src/routes/RepositoriesList/ColumnNames';\n\nexport function useRepositories(organization?: string) {\n  const {user} = useCurrentUser();\n\n  // Keep state of current search in this hook\n  const [page, setPage] = useState(1);\n  const [perPage, setPerPage] = useState(10);\n  const [search, setSearch] = useState<SearchState>({\n    field: ColumnNames.name,\n    query: '',\n  });\n  const [currentOrganization, setCurrentOrganization] = useState(organization);\n\n  const listOfOrgNames: string[] = currentOrganization\n    ? [currentOrganization]\n    : user?.organizations.map((org) => org.name).concat(user.username);\n\n  const {\n    data: repos,\n    error,\n    isLoading: loading,\n    isPlaceholderData,\n  } = useQuery({\n    queryKey: ['organization', organization || 'all', 'repositories', page],\n    keepPreviousData: true,\n    placeholderData: [],\n    queryFn: ({signal}) => {\n      return currentOrganization\n        ? fetchRepositoriesForNamespace(currentOrganization, signal)\n        : fetchAllRepos(listOfOrgNames, true, signal);\n    },\n  });\n\n  return {\n    // Data\n    repos: repos,\n\n    // Fetching State\n    loading: loading || isPlaceholderData || !listOfOrgNames,\n    error,\n\n    // Search Query State\n    search,\n    setSearch,\n    page,\n    setPage,\n    perPage,\n    setPerPage,\n    organization,\n    setCurrentOrganization,\n\n    // Useful Metadata\n    totalResults: repos.length,\n  };\n}\n","import {Td} from '@patternfly/react-table';\nimport {Skeleton} from '@patternfly/react-core';\nimport './css/Organizations.scss';\nimport {Link} from 'react-router-dom';\nimport {fetchOrg} from 'src/resources/OrganizationResource';\nimport {\n  fetchRepositoriesForNamespace,\n  IRepository,\n} from 'src/resources/RepositoryResource';\nimport {fetchMembersForOrg} from 'src/resources/MembersResource';\nimport {fetchRobotsForNamespace} from 'src/resources/RobotsResource';\nimport {formatDate} from 'src/libs/utils';\nimport ColumnNames from './ColumnNames';\nimport {OrganizationsTableItem} from './OrganizationsList';\nimport {useQuery, useQueryClient} from '@tanstack/react-query';\nimport {useRepositories} from 'src/hooks/UseRepositories';\n\ninterface CountProps {\n  count: string | number;\n}\n\ninterface RepoLastModifiedDateProps {\n  lastModifiedDate: number;\n}\n\nfunction Count(props: CountProps) {\n  return <>{props.count !== null ? props.count : <Skeleton width=\"100%\" />}</>;\n}\n\nfunction RepoLastModifiedDate(props: RepoLastModifiedDateProps) {\n  return (\n    <>\n      {props.lastModifiedDate !== 0 ? (\n        formatDate(props.lastModifiedDate)\n      ) : (\n        <Skeleton width=\"100%\" />\n      )}\n    </>\n  );\n}\n\n// Get and assemble data from multiple endpoints to show in Org table\n// Only necessary because current API structure does not return all required data\nexport default function OrgTableData(props: OrganizationsTableItem) {\n  // const queryClient = useQueryClient();\n  // useEffect(() => {\n  //   return () => {\n  //     queryClient.cancelQueries(['organization', props.name]);\n  //     queryClient.cancelQueries(['organization', props.name, 'members']);\n  //     queryClient.cancelQueries(['organization', props.name, 'robots']);\n  //     queryClient.cancelQueries(['organization', props.name, 'repositories']);\n  //   };\n  // }, [props.name]);\n  // Get organization\n  const {data: organization} = useQuery(\n    ['organization', props.name],\n    ({signal}) => fetchOrg(props.name, signal),\n    {enabled: !props.isUser},\n  );\n\n  // Get members\n  const {data: members} = useQuery(\n    ['organization', props.name, 'members'],\n    ({signal}) => fetchMembersForOrg(props.name, signal),\n    {placeholderData: props.isUser ? [] : undefined},\n  );\n  const memberCount = props.isUser ? 0 : members ? members.length : null;\n\n  // Get robots\n  const {data: robots} = useQuery(\n    ['organization', props.name, 'robots'],\n    ({signal}) => fetchRobotsForNamespace(props.name, false, signal),\n  );\n  const robotCount = robots ? robots.length : null;\n\n  // Get repositories\n  const {repos: repositories, totalResults: repoCount} = useRepositories(\n    props.name,\n  );\n\n  const getLastModifiedRepoTime = (repos: IRepository[]) => {\n    // get the repo with the most recent last modified\n    if (!repos || !repos.length) {\n      return -1;\n    }\n\n    const recentRepo = repos.reduce((prev, curr) =>\n      prev.last_modified < curr.last_modified ? curr : prev,\n    );\n    return recentRepo.last_modified || -1;\n  };\n  const lastModifiedDate = getLastModifiedRepoTime(repositories);\n\n  let teamCountVal: string;\n  if (!props.isUser) {\n    const {data: teams} = useQuery(\n      ['organization', props.name, 'teams'],\n      () => organization?.teams || [],\n    );\n    teamCountVal = organization?.teams\n      ? Object.keys(organization?.teams)?.length.toString()\n      : '0';\n  } else {\n    teamCountVal = 'N/A';\n  }\n\n  return (\n    <>\n      <Td dataLabel={ColumnNames.name}>\n        <Link to={props.name}>{props.name}</Link>\n      </Td>\n      <Td dataLabel={ColumnNames.repoCount}>\n        <Count count={repoCount}></Count>\n      </Td>\n      <Td dataLabel={ColumnNames.teamsCount}>\n        <Count count={teamCountVal}></Count>\n      </Td>\n      <Td dataLabel={ColumnNames.membersCount}>\n        <Count count={memberCount}></Count>\n      </Td>\n      <Td dataLabel={ColumnNames.robotsCount}>\n        <Count count={robotCount}></Count>\n      </Td>\n      <Td dataLabel={ColumnNames.lastModified}>\n        <RepoLastModifiedDate\n          lastModifiedDate={lastModifiedDate}\n        ></RepoLastModifiedDate>\n      </Td>\n    </>\n  );\n}\n","import {\n  Pagination,\n  ToolbarItem,\n  PaginationVariant,\n} from '@patternfly/react-core';\n\nexport const ToolbarPagination = (props: ToolbarPaginationProps) => {\n  return (\n    <ToolbarItem variant=\"pagination\">\n      <Pagination\n        perPageComponent=\"button\"\n        itemCount={props.total || props.itemsList.length}\n        perPage={props.perPage}\n        id={props.id ? props.id : 'toolbar-pagination'}\n        page={props.page}\n        onSetPage={(_event, pageNumber) => props.setPage(pageNumber)}\n        onPerPageSelect={(_event, perPageNumber) => {\n          props.setPage(1);\n          props.setPerPage(perPageNumber);\n        }}\n        widgetId=\"pagination-options-menu-top\"\n        variant={\n          props.bottom ? PaginationVariant.bottom : PaginationVariant.top\n        }\n      />\n    </ToolbarItem>\n  );\n};\n\ntype ToolbarPaginationProps = {\n  itemsList: any[];\n  perPage: number;\n  page: number;\n  setPage: (pageNumber: number) => void;\n  setPerPage: (perPageNumber: number) => void;\n  bottom?: boolean;\n  id?: string;\n  total?: number;\n};\n","import {\n  Button,\n  Modal,\n  ModalVariant,\n  PageSection,\n  PageSectionVariants,\n  TextInput,\n  Toolbar,\n  ToolbarContent,\n  ToolbarItem,\n} from '@patternfly/react-core';\nimport {\n  TableComposable,\n  Tbody,\n  Td,\n  Th,\n  Thead,\n  Tr,\n} from '@patternfly/react-table';\nimport {useEffect, useState} from 'react';\nimport {ToolbarPagination} from 'src/components/toolbar/ToolbarPagination';\n\nexport const BulkDeleteModalTemplate = <T,>(\n  props: BulkDeleteModalTemplateProps<T>,\n): JSX.Element => {\n  const [itemsMarkedForDelete, setItemsMarkedForDelete] = useState<T[]>(\n    props.selectedItems,\n  );\n\n  const colNames = Object.keys(props.mapOfColNamesToTableData);\n\n  const [confirmDeletionInput, setConfirmDeletionInput] = useState<string>('');\n\n  const [searchInput, setSearchInput] = useState<string>('');\n\n  const [bulkModalPerPage, setBulkModalPerPage] = useState<number>(10);\n  const [bulkModalPage, setBulkModalPage] = useState<number>(1);\n\n  const paginatedBulkItemsList = itemsMarkedForDelete.slice(\n    bulkModalPage * bulkModalPerPage - bulkModalPerPage,\n    bulkModalPage * bulkModalPerPage - bulkModalPerPage + bulkModalPerPage,\n  );\n\n  const onSearch = (value: string) => {\n    setSearchInput(value);\n    if (value === '') {\n      setItemsMarkedForDelete(props.selectedItems);\n    } else {\n      /* Note: This search filter assumes that the search is always based on the 1st column,\n         hence we do \"colNames[0]\" */\n      const filteredTableRow = props.selectedItems.filter((item) =>\n        item[props.mapOfColNamesToTableData[colNames[0]].label]\n          ?.toLowerCase()\n          .includes(value.toLowerCase()),\n      );\n      setItemsMarkedForDelete(filteredTableRow);\n    }\n  };\n\n  const bulkDelete = async () => {\n    if (confirmDeletionInput === 'confirm') {\n      await props.handleBulkDeletion(props.selectedItems);\n    }\n  };\n\n  useEffect(() => {\n    setItemsMarkedForDelete(props.selectedItems);\n  }, []);\n\n  /* Function that transforms a given cell value with the transformation function if present\n  else returns the default cell value */\n  const applyTransformFuncIfGiven = (item, name) =>\n    props.mapOfColNamesToTableData[name].transformFunc\n      ? props.mapOfColNamesToTableData[name].transformFunc(item)\n      : item[props.mapOfColNamesToTableData[name].label];\n\n  return (\n    <Modal\n      title={`Permanently delete ${props.resourceName}?`}\n      id=\"bulk-delete-modal\"\n      titleIconVariant=\"warning\"\n      aria-label={`Permanently delete ${props.resourceName}?`}\n      variant={ModalVariant.medium}\n      isOpen={props.isModalOpen}\n      onClose={props.handleModalToggle}\n      actions={[\n        <Button\n          key=\"delete\"\n          variant=\"danger\"\n          onClick={bulkDelete}\n          form=\"modal-with-form-form\"\n          isDisabled={confirmDeletionInput !== 'confirm'}\n        >\n          Delete\n        </Button>,\n        <Button\n          key=\"cancel\"\n          id=\"delete-org-cancel\"\n          variant=\"link\"\n          onClick={props.handleModalToggle}\n        >\n          Cancel\n        </Button>,\n      ]}\n    >\n      <span>\n        This action deletes all {props.resourceName} and cannot be recovered.\n      </span>\n      <PageSection variant={PageSectionVariants.light}>\n        <Toolbar>\n          <ToolbarContent>\n            <ToolbarItem>\n              <TextInput\n                isRequired\n                type=\"search\"\n                id=\"modal-with-form-form-name\"\n                name=\"search input\"\n                placeholder=\"Search\"\n                iconVariant=\"search\"\n                value={searchInput}\n                onChange={onSearch}\n              />\n            </ToolbarItem>\n            <ToolbarPagination\n              page={bulkModalPage}\n              perPage={bulkModalPerPage}\n              itemsList={itemsMarkedForDelete}\n              setPage={setBulkModalPage}\n              setPerPage={setBulkModalPerPage}\n            />\n          </ToolbarContent>\n        </Toolbar>\n        <TableComposable aria-label=\"Simple table\" variant=\"compact\">\n          <Thead>\n            <Tr>\n              {colNames.map((name, idx) => (\n                <Th key={idx}>{name}</Th>\n              ))}\n            </Tr>\n          </Thead>\n          <Tbody>\n            {paginatedBulkItemsList.map((item, idx) => (\n              <Tr key={idx}>\n                {colNames.map((name, index) => (\n                  <Td\n                    key={index}\n                    dataLabel={item[props.mapOfColNamesToTableData[name].label]}\n                  >\n                    {applyTransformFuncIfGiven(item, name)}\n                  </Td>\n                ))}\n              </Tr>\n            ))}\n          </Tbody>\n        </TableComposable>\n        <Toolbar>\n          <ToolbarPagination\n            page={bulkModalPage}\n            perPage={bulkModalPerPage}\n            itemsList={itemsMarkedForDelete}\n            setPage={setBulkModalPage}\n            setPerPage={setBulkModalPerPage}\n            bottom={true}\n          />\n        </Toolbar>\n        <p>\n          {' '}\n          Confirm deletion by typing <b>&quot;confirm&quot;</b> below:{' '}\n        </p>\n        <TextInput\n          id=\"delete-confirmation-input\"\n          value={confirmDeletionInput}\n          type=\"text\"\n          onChange={(value) => setConfirmDeletionInput(value)}\n          aria-label=\"text input example\"\n        />\n      </PageSection>\n    </Modal>\n  );\n};\n\ntype BulkDeleteModalTemplateProps<T> = {\n  mapOfColNamesToTableData: {\n    [key: string]: {label?: string; transformFunc?: (value) => any};\n  };\n  isModalOpen: boolean;\n  handleModalToggle?: () => void;\n  handleBulkDeletion: (items: T[]) => void;\n  selectedItems: T[];\n  resourceName: string;\n};\n","import {\n  Button,\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  PageSection,\n  PageSectionVariants,\n  Title,\n} from '@patternfly/react-core';\nimport {ExclamationTriangleIcon} from '@patternfly/react-icons';\n\nexport default function RequestError(props: RequestErrorProps) {\n  return (\n    <PageSection variant={PageSectionVariants.light}>\n      <EmptyState variant=\"full\">\n        <EmptyStateIcon icon={ExclamationTriangleIcon} />\n        <Title headingLevel=\"h1\" size=\"lg\">\n          Unable to complete request\n        </Title>\n        <EmptyStateBody>{props.message}</EmptyStateBody>\n        <Button title=\"Home\" onClick={() => window.location.reload()}>\n          Retry\n        </Button>\n      </EmptyState>\n    </PageSection>\n  );\n}\n\ninterface RequestErrorProps {\n  message: string;\n}\n","import {useState} from 'react';\nimport {\n  Dropdown,\n  DropdownToggle,\n  DropdownToggleCheckbox,\n  DropdownItem,\n  ToolbarItem,\n} from '@patternfly/react-core';\n\nexport function DropdownCheckbox(props: DropdownCheckboxProps) {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const deSelectAll = () => {\n    props.deSelectAll([]);\n    setIsOpen(false);\n  };\n\n  const selectPageItems = () => {\n    props.deSelectAll([]);\n    props.itemsPerPageList.map((value, index) =>\n      props.onItemSelect(value, index, true),\n    );\n    setIsOpen(false);\n  };\n\n  const selectAllItems = () => {\n    deSelectAll();\n    props.allItemsList.map((value, index) =>\n      props.onItemSelect(value, index, true),\n    );\n    setIsOpen(false);\n  };\n\n  const dropdownItems = [\n    <DropdownItem\n      key=\"select-none-action\"\n      component=\"button\"\n      onClick={deSelectAll}\n    >\n      Select none\n    </DropdownItem>,\n    <DropdownItem\n      key=\"select-page-items-action\"\n      component=\"button\"\n      onClick={selectPageItems}\n    >\n      Select page (\n      {props.allItemsList.length > props.itemsPerPageList.length\n        ? props.itemsPerPageList.length\n        : props.allItemsList.length}\n      )\n    </DropdownItem>,\n    <DropdownItem\n      key=\"select-all-items-action\"\n      component=\"button\"\n      onClick={selectAllItems}\n    >\n      Select all ({props.allItemsList.length})\n    </DropdownItem>,\n  ];\n\n  return (\n    <ToolbarItem variant=\"bulk-select\">\n      <Dropdown\n        toggle={\n          <DropdownToggle\n            splitButtonItems={[\n              <DropdownToggleCheckbox\n                id={props.id ? props.id : 'split-button-text-checkbox'}\n                key=\"split-checkbox\"\n                aria-label=\"Select all\"\n                isChecked={props.selectedItems.length > 0 ? true : false}\n                onChange={(checked) =>\n                  checked ? selectPageItems() : deSelectAll()\n                }\n              >\n                {props.selectedItems.length != 0\n                  ? props.selectedItems.length + ' selected'\n                  : ''}\n              </DropdownToggleCheckbox>,\n            ]}\n            id=\"toolbar-dropdown-checkbox\"\n            onToggle={() => setIsOpen(!isOpen)}\n          />\n        }\n        isOpen={isOpen}\n        dropdownItems={dropdownItems}\n      />\n    </ToolbarItem>\n  );\n}\n\ntype DropdownCheckboxProps = {\n  selectedItems: any[];\n  deSelectAll: (selectedList) => void;\n  allItemsList: any[];\n  itemsPerPageList: any[];\n  onItemSelect: (Item, rowIndex, isSelecting) => void;\n  id?: string;\n};\n","import {useState} from 'react';\nimport {\n  Dropdown,\n  DropdownToggle,\n  DropdownItem,\n  ToolbarItem,\n} from '@patternfly/react-core';\nimport {SetterOrUpdater} from 'recoil';\nimport {SearchState} from './SearchTypes';\n\nexport function SearchDropdown(props: SearchDropdownProps) {\n  if (props.items.length === 0) {\n    console.error(\n      'No dropdown items given to SearchDropdown. SearchDropdown expects non-empty list.',\n    );\n  }\n  const [isOpen, setIsOpen] = useState(false);\n\n  const onSelect = () => {\n    setIsOpen(false);\n    const element = document.getElementById('toolbar-dropdown-filter');\n    element.focus();\n  };\n\n  const onItemSelect = (item) => {\n    props.setSearchState((prev: SearchState) => ({...prev, field: item}));\n  };\n\n  const dropdownItems = props.items.map((item: string) => (\n    <DropdownItem\n      key={item}\n      onClick={() => {\n        onItemSelect(item);\n      }}\n    >\n      {item}\n    </DropdownItem>\n  ));\n\n  return (\n    <ToolbarItem spacer={{default: 'spacerNone'}}>\n      <Dropdown\n        onSelect={onSelect}\n        toggle={\n          <DropdownToggle\n            id=\"toolbar-dropdown-filter\"\n            onToggle={() => setIsOpen(!isOpen)}\n          >\n            {props.searchState.field}\n          </DropdownToggle>\n        }\n        isOpen={isOpen}\n        dropdownItems={dropdownItems}\n      />\n    </ToolbarItem>\n  );\n}\n\ninterface SearchDropdownProps {\n  items: string[];\n  searchState: SearchState;\n  setSearchState: SetterOrUpdater<SearchState>;\n}\n","import {TextInput, ToolbarItem} from '@patternfly/react-core';\nimport {SetterOrUpdater} from 'recoil';\nimport {SearchState} from './SearchTypes';\n\nexport function SearchInput(props: SearchInput) {\n  const setSearchState = (val) => {\n    props.onChange((prev: SearchState) => ({...prev, query: val.trim()}));\n  };\n\n  return (\n    <ToolbarItem>\n      <TextInput\n        isRequired\n        type=\"search\"\n        id={props.id ? props.id : 'toolbar-text-input'}\n        name=\"search input\"\n        placeholder={`Search by ${props.searchState.field}...`}\n        value={props.searchState.query}\n        onChange={setSearchState}\n      />\n    </ToolbarItem>\n  );\n}\n\ninterface SearchInput {\n  searchState: SearchState;\n  onChange: SetterOrUpdater<SearchState>;\n  id?: string;\n}\n","import {Button, ToolbarItem} from '@patternfly/react-core';\n\nexport function ToolbarButton(props: ToolbarButtonProps) {\n  return (\n    <ToolbarItem>\n      <Button\n        id={props.id}\n        variant=\"primary\"\n        onClick={() => props.setModalOpen(true)}\n      >\n        {props.buttonValue}\n      </Button>\n      {props.isModalOpen ? props.Modal : null}{' '}\n    </ToolbarItem>\n  );\n}\n\ntype ToolbarButtonProps = {\n  id: string;\n  buttonValue: string;\n  Modal: object;\n  isModalOpen: boolean;\n  setModalOpen: (open) => void;\n};\n","import {Dropdown, DropdownToggle, KebabToggle} from '@patternfly/react-core';\nimport * as React from 'react';\n\nexport function Kebab(props: KebabProps) {\n  const onToggle = () => {\n    props.setKebabOpen(!props.isKebabOpen);\n  };\n\n  const fetchToggle = () => {\n    if (!props.useActions) {\n      return <KebabToggle onToggle={onToggle} />;\n    }\n    return (\n      <DropdownToggle\n        onToggle={() => props.setKebabOpen(!props.isKebabOpen)}\n        id=\"toggle-id-6\"\n      >\n        Actions\n      </DropdownToggle>\n    );\n  };\n\n  return (\n    <Dropdown\n      onSelect={() => props.setKebabOpen(!props.isKebabOpen)}\n      toggle={fetchToggle()}\n      isOpen={props.isKebabOpen}\n      dropdownItems={props.kebabItems}\n      isPlain={!props.useActions}\n    />\n  );\n}\n\ntype KebabProps = {\n  isKebabOpen: boolean;\n  setKebabOpen: (open) => void;\n  kebabItems: React.ReactElement[];\n  useActions?: boolean;\n};\n","import {Toolbar, ToolbarContent, ToolbarItem} from '@patternfly/react-core';\nimport {DropdownCheckbox} from 'src/components/toolbar/DropdownCheckbox';\nimport {SearchDropdown} from 'src/components/toolbar/SearchDropdown';\nimport {SearchInput} from 'src/components/toolbar/SearchInput';\nimport {ToolbarButton} from 'src/components/toolbar/ToolbarButton';\nimport {Kebab} from 'src/components/toolbar/Kebab';\nimport {ToolbarPagination} from 'src/components/toolbar/ToolbarPagination';\nimport * as React from 'react';\nimport ColumnNames from './ColumnNames';\nimport {SearchState} from 'src/components/toolbar/SearchTypes';\n\nexport function OrganizationToolBar(props: OrganizationToolBarProps) {\n  return (\n    <Toolbar>\n      <ToolbarContent>\n        <DropdownCheckbox\n          selectedItems={props.selectedOrganization}\n          deSelectAll={props.setSelectedOrganization}\n          allItemsList={props.organizationsList}\n          itemsPerPageList={props.paginatedOrganizationsList}\n          onItemSelect={props.onSelectOrganization}\n        />\n        <SearchDropdown\n          items={[ColumnNames.name]}\n          searchState={props.search}\n          setSearchState={props.setSearch}\n        />\n        <SearchInput searchState={props.search} onChange={props.setSearch} />\n        <ToolbarButton\n          id=\"create-organization-button\"\n          buttonValue=\"Create Organization\"\n          Modal={props.createOrgModal}\n          isModalOpen={props.isOrganizationModalOpen}\n          setModalOpen={props.setOrganizationModalOpen}\n        />\n        <ToolbarItem>\n          {props.selectedOrganization?.length !== 0 ? (\n            <Kebab\n              isKebabOpen={props.isKebabOpen}\n              setKebabOpen={props.setKebabOpen}\n              kebabItems={props.kebabItems}\n              useActions={true}\n            />\n          ) : null}\n          {props.deleteKebabIsOpen ? props.deleteModal : null}\n        </ToolbarItem>\n        <ToolbarPagination\n          itemsList={props.organizationsList}\n          perPage={props.perPage}\n          page={props.page}\n          setPage={props.setPage}\n          setPerPage={props.setPerPage}\n        />\n      </ToolbarContent>\n    </Toolbar>\n  );\n}\n\ntype OrganizationToolBarProps = {\n  createOrgModal: object;\n  isOrganizationModalOpen: boolean;\n  setOrganizationModalOpen: (open) => void;\n  isKebabOpen: boolean;\n  setKebabOpen: (open) => void;\n  kebabItems: React.ReactElement[];\n  selectedOrganization: any[];\n  deleteKebabIsOpen: boolean;\n  deleteModal: object;\n  organizationsList: any[];\n  perPage: number;\n  page: number;\n  setPage: (pageNumber) => void;\n  setPerPage: (perPageNumber) => void;\n  total: number;\n  search: SearchState;\n  setSearch: (searchState) => void;\n  setSelectedOrganization: (selectedOrgList) => void;\n  paginatedOrganizationsList: any[];\n  onSelectOrganization: (Org, rowIndex, isSelecting) => void;\n};\n","import {\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  PageSection,\n  Title,\n} from '@patternfly/react-core';\nimport {SVGIconProps} from '@patternfly/react-icons/dist/js/createIcon';\n\nexport default function Empty(props: EmptyProps) {\n  return (\n    <PageSection>\n      <EmptyState variant=\"large\">\n        <EmptyStateIcon icon={props.icon} />\n        <Title headingLevel=\"h1\" size=\"lg\">\n          {props.title}\n        </Title>\n        <EmptyStateBody style={{paddingBottom: 20}}>\n          {props.body}\n        </EmptyStateBody>\n        {props.button}\n      </EmptyState>\n    </PageSection>\n  );\n}\n\ninterface EmptyProps {\n  icon: React.ComponentClass<SVGIconProps, any>;\n  title: string;\n  body: string;\n  button?: JSX.Element;\n}\n","import {atom} from 'recoil';\nimport {recoilPersist} from 'recoil-persist';\n\nconst {persistAtom} = recoilPersist();\n\nexport const BrowserHistoryState = atom({\n  key: 'browserHistoryState',\n  default: [],\n  effects_UNSTABLE: [persistAtom],\n});\n","import {\n  Breadcrumb,\n  BreadcrumbItem,\n  PageBreadcrumb,\n} from '@patternfly/react-core';\nimport {NavigationRoutes} from 'src/routes/NavigationPath';\nimport {Link, useParams, useLocation} from 'react-router-dom';\nimport React, {useEffect, useState} from 'react';\nimport useBreadcrumbs, {\n  BreadcrumbComponentType,\n} from 'use-react-router-breadcrumbs';\nimport {useRecoilState} from 'recoil';\nimport {BrowserHistoryState} from 'src/atoms/BrowserHistoryState';\n\nexport function QuayBreadcrumb() {\n  const [browserHistory, setBrowserHistoryState] =\n    useRecoilState(BrowserHistoryState);\n\n  const [breadcrumbItems, setBreadcrumbItems] = useState<QuayBreadcrumbItem[]>(\n    [],\n  );\n  const routerBreadcrumbs: BreadcrumbData[] = useBreadcrumbs(NavigationRoutes, {\n    disableDefaults: true,\n    excludePaths: ['/'],\n  });\n  const urlParams = useParams();\n\n  const resetBreadCrumbs = () => {\n    setBreadcrumbItems([]);\n    setBrowserHistoryState([]);\n  };\n\n  const fetchRepoName = (route) => {\n    const re = new RegExp(urlParams.organizationName + '/(.*)', 'i');\n    const result = route.match(re);\n    return result[1];\n  };\n\n  const buildBreadCrumbFromPrevRoute = (object) => {\n    const prevObj = {};\n    prevObj['pathname'] = object.match.pathname;\n    prevObj['title'] = fetchRepoName(prevObj['pathname']);\n    prevObj['active'] =\n      prevObj['pathname'].localeCompare(window.location.pathname) === 0;\n    return prevObj;\n  };\n\n  const buildFromRoute = () => {\n    const result = [];\n    const history = [];\n    let prevItem = null;\n\n    for (let i = 0; i < routerBreadcrumbs.length; i++) {\n      const newObj = {};\n      const object = routerBreadcrumbs[i];\n      newObj['pathname'] = object.match.pathname;\n      if (object.match.route.Component.type.name == 'RepositoryDetails') {\n        prevItem = object;\n        // Continuing till we find the last RepositoryDetails route for nested repo paths\n        continue;\n      } else {\n        newObj['title'] = object.match.pathname.split('/').slice(-1)[0];\n      }\n      newObj['active'] =\n        object.match.pathname.localeCompare(window.location.pathname) === 0;\n\n      if (prevItem) {\n        const prevObj = buildBreadCrumbFromPrevRoute(prevItem);\n        result.push(prevObj);\n        history.push(prevObj);\n        prevItem = null;\n      }\n\n      result.push(newObj);\n      history.push(newObj);\n    }\n\n    // If prevItem was not pushed in the for loop\n    if (prevItem) {\n      const prevObj = buildBreadCrumbFromPrevRoute(prevItem);\n      result.push(prevObj);\n      history.push(prevObj);\n      prevItem = null;\n    }\n\n    setBreadcrumbItems(result);\n    setBrowserHistoryState(history);\n  };\n\n  const currentBreadcrumbItem = () => {\n    const newItem = {};\n    const lastItem = routerBreadcrumbs[routerBreadcrumbs.length - 1];\n\n    newItem['pathname'] = lastItem.location.pathname;\n    // Form QuayBreadcrumbItem for the current path\n    if (lastItem.match.route.Component.type.name == 'RepositoryDetails') {\n      newItem['title'] = fetchRepoName(newItem['pathname']);\n    } else {\n      newItem['title'] = newItem['pathname'].split('/').slice(-1)[0];\n    }\n\n    newItem['active'] = true;\n    return newItem;\n  };\n\n  const buildFromBrowserHistory = () => {\n    const result = [];\n    const history = [];\n    const newItem = currentBreadcrumbItem();\n\n    for (const value of Array.from(browserHistory.values())) {\n      const newObj = {};\n      newObj['pathname'] = value['pathname'];\n      if (typeof value['title'] === 'string') {\n        newObj['title'] = value['title'];\n      } else if (value.title?.props?.children) {\n        newObj['title'] = value['title']['props']['children'];\n      }\n      newObj['active'] =\n        value['pathname'].localeCompare(window.location.pathname) === 0;\n      if (newItem['pathname'] == newObj['pathname']) {\n        newItem['title'] = newObj['title'];\n        break;\n      }\n      result.push(newObj);\n      history.push(newObj);\n    }\n    result.push(newItem);\n    history.push(newItem);\n    setBreadcrumbItems(result);\n    setBrowserHistoryState(history);\n  };\n\n  useEffect(() => {\n    // urlParams has atleast one item - {*: 'endpoint'}\n    // If size = 1, no params are defined in the url, so we reset breadcrumb history\n    if (Object.keys(urlParams).length <= 1) {\n      resetBreadCrumbs();\n      return;\n    }\n\n    if (browserHistory.length > 0) {\n      buildFromBrowserHistory();\n    } else {\n      buildFromRoute();\n    }\n  }, []);\n\n  return (\n    <div>\n      {breadcrumbItems.length > 0 ? (\n        <PageBreadcrumb>\n          <Breadcrumb>\n            {breadcrumbItems.map((object, i) => (\n              <BreadcrumbItem\n                render={(props) => (\n                  <Link\n                    to={object.pathname}\n                    className={object.active ? 'disabled-link' : ''}\n                  >\n                    {object.title}\n                  </Link>\n                )}\n                key={i}\n              />\n            ))}\n          </Breadcrumb>\n        </PageBreadcrumb>\n      ) : (\n        ''\n      )}\n    </div>\n  );\n}\n\ntype QuayBreadcrumbItem = {\n  pathname: string;\n  title: string;\n  active: boolean;\n};\n\ndeclare type Location = ReturnType<typeof useLocation>;\n\ntype BreadcrumbData = {\n  match: BreadcrumbMatch;\n  location: Location;\n  key: string;\n  breadcrumb: RouterBreadcrumbDetail | React.ReactElement | any;\n};\n\ntype BreadcrumbMatch = {\n  pathname: string;\n  route?: BreadcrumbsRoute;\n};\n\ntype BreadcrumbsRoute = {\n  breadcrumb?: BreadcrumbComponentType | any | null;\n  Component?: React.ReactElement | any;\n};\n\ntype RouterBreadcrumbDetail = {\n  props: RouterBreadcrumbPropsDetail;\n};\n\ntype RouterBreadcrumbPropsDetail = {\n  children: string;\n};\n","import React from 'react';\nimport {\n  EmptyState,\n  EmptyStateIcon,\n  EmptyStateBody,\n  EmptyStateSecondaryActions,\n  Title,\n  Spinner,\n  Bullseye,\n  PageSectionVariants,\n  PageSection,\n} from '@patternfly/react-core';\n\nexport function LoadingPage(props: {\n  title?: string | React.ReactNode;\n  message?: string | React.ReactNode;\n  primaryAction?: React.ReactNode;\n  secondaryActions?: React.ReactNode;\n}) {\n  return (\n    <PageSection variant={PageSectionVariants.light}>\n      <Bullseye>\n        <EmptyState>\n          <EmptyStateIcon variant=\"container\" component={Spinner} />\n          <div>\n            <Title size=\"lg\" headingLevel=\"h4\">\n              {props.title ?? 'Loading'}\n            </Title>\n            <EmptyStateBody>{props.message}</EmptyStateBody>\n          </div>\n          {props.primaryAction}\n          <EmptyStateSecondaryActions>\n            {props.secondaryActions}\n          </EmptyStateSecondaryActions>\n        </EmptyState>\n      </Bullseye>\n    </PageSection>\n  );\n}\n","import {Modal, ModalVariant} from '@patternfly/react-core';\nimport {ExclamationCircleIcon} from '@patternfly/react-icons';\n\nexport default function ErrorModal(props: ErrorModalProps) {\n  let err = props.error;\n  if (Array.isArray(err)) {\n    err = err.map((e) => (\n      <div key={e}>\n        <ExclamationCircleIcon color=\"red\" /> {e}\n        <br />\n      </div>\n    ));\n  }\n\n  return (\n    <Modal\n      variant={ModalVariant.small}\n      position=\"top\"\n      aria-label=\"error modal\"\n      title={props.title}\n      isOpen={props.error != null}\n      onClose={() => props.setError(null)}\n    >\n      {err}\n    </Modal>\n  );\n}\n\ninterface ErrorModalProps {\n  error: string | string[] | React.ReactNode;\n  setError: (err: any) => void;\n  title?: string;\n}\n","import {useEffect, useState} from 'react';\nimport {useRepositories} from 'src/hooks/UseRepositories';\n\nexport default function RepoCount(props: RepoCountProps) {\n  const [value, setValue] = useState<string>('Loading...');\n  const {totalResults} = useRepositories(props.name);\n\n  useEffect(() => {\n    (async () => {\n      try {\n        setValue(totalResults.toString());\n      } catch (err) {\n        setValue('Error');\n      }\n    })();\n  }, []);\n  return <>{value}</>;\n}\n\ninterface RepoCountProps {\n  name: string;\n}\n","import {fetchUsersAsSuperUser} from 'src/resources/UserResource';\nimport {\n  bulkDeleteOrganizations,\n  fetchOrgsAsSuperUser,\n} from 'src/resources/OrganizationResource';\nimport {useQuery, useMutation, useQueryClient} from '@tanstack/react-query';\nimport {useCurrentUser} from './UseCurrentUser';\nimport {createOrg} from 'src/resources/OrganizationResource';\nimport {useState} from 'react';\nimport {SearchState} from 'src/components/toolbar/SearchTypes';\nimport ColumnNames from 'src/routes/OrganizationsList/ColumnNames';\n\nexport function useOrganizations() {\n  // Get user and config data\n  const {isSuperUser, user, loading, error} = useCurrentUser();\n\n  // Keep state of current search in this hook\n  const [page, setPage] = useState(1);\n  const [perPage, setPerPage] = useState(10);\n  const [search, setSearch] = useState<SearchState>({\n    field: ColumnNames.name,\n    query: '',\n  });\n\n  // Get super user orgs\n  const {data: superUserOrganizations} = useQuery(\n    ['organization', 'superuser', 'organizations'],\n    fetchOrgsAsSuperUser,\n    {\n      enabled: isSuperUser,\n    },\n  );\n\n  // Get super user users\n  const {data: superUserUsers} = useQuery(\n    ['organization', 'superuser', 'users'],\n    fetchUsersAsSuperUser,\n    {\n      enabled: isSuperUser,\n    },\n  );\n\n  // Get org names\n  let orgnames: string[];\n  if (isSuperUser) {\n    orgnames = (superUserOrganizations || []).map((org) => org.name);\n  } else {\n    orgnames = (user?.organizations || []).map((org) => org.name);\n  }\n  // Get user names\n  let usernames: string[];\n  if (isSuperUser) {\n    usernames = (superUserUsers || [])\n      .map((user) => user.username)\n      .filter((x) => x);\n  } else {\n    usernames = [user.username];\n  }\n\n  const organizationsTableDetails = [] as {name: string; isUser: boolean}[];\n  for (const orgname of orgnames) {\n    organizationsTableDetails.push({\n      name: orgname,\n      isUser: false,\n    });\n  }\n  for (const username of usernames) {\n    organizationsTableDetails.push({\n      name: username,\n      isUser: true,\n    });\n  }\n\n  // Get query client for mutations\n  const queryClient = useQueryClient();\n\n  const createOrganizationMutator = useMutation(\n    async ({name, email}: {name: string; email: string}) => {\n      return createOrg(name, email);\n    },\n    {\n      onSuccess: () => {\n        queryClient.invalidateQueries(['user']);\n      },\n    },\n  );\n\n  const deleteOrganizationMutator = useMutation(\n    async (names: string[]) => {\n      return bulkDeleteOrganizations(names, isSuperUser);\n    },\n    {\n      onSuccess: () => {\n        queryClient.invalidateQueries(['user']);\n      },\n    },\n  );\n\n  return {\n    // Data\n    superUserOrganizations,\n    superUserUsers,\n    organizationsTableDetails,\n\n    // Fetching State\n    loading,\n    error,\n\n    // Search Query State\n    search,\n    setSearch,\n    page,\n    setPage,\n    perPage,\n    setPerPage,\n\n    // Useful Metadata\n    totalResults: organizationsTableDetails.length,\n\n    // Mutations\n    createOrganization: async (name: string, email: string) =>\n      createOrganizationMutator.mutate({name, email}),\n    deleteOrganizations: async (names: string[]) =>\n      deleteOrganizationMutator.mutate(names),\n    usernames,\n  };\n}\n","import {\n  TableComposable,\n  Thead,\n  Tr,\n  Th,\n  Tbody,\n  Td,\n} from '@patternfly/react-table';\nimport {\n  PageSection,\n  PageSectionVariants,\n  Title,\n  DropdownItem,\n  PanelFooter,\n} from '@patternfly/react-core';\nimport './css/Organizations.scss';\nimport {CreateOrganizationModal} from './CreateOrganizationModal';\nimport {useRecoilState, useRecoilValue} from 'recoil';\nimport {selectedOrgsState} from 'src/atoms/UserState';\nimport {useEffect, useState} from 'react';\nimport {IOrganization} from 'src/resources/OrganizationResource';\nimport OrgTableData from './OrganizationsListTableData';\nimport {BulkDeleteModalTemplate} from 'src/components/modals/BulkDeleteModalTemplate';\nimport RequestError from 'src/components/errors/RequestError';\nimport {OrganizationToolBar} from './OrganizationToolBar';\nimport {CubesIcon} from '@patternfly/react-icons';\nimport {ToolbarButton} from 'src/components/toolbar/ToolbarButton';\nimport Empty from 'src/components/empty/Empty';\nimport {QuayBreadcrumb} from 'src/components/breadcrumb/Breadcrumb';\nimport {LoadingPage} from 'src/components/LoadingPage';\nimport {addDisplayError, BulkOperationError} from 'src/resources/ErrorHandling';\nimport ErrorModal from 'src/components/errors/ErrorModal';\nimport {ToolbarPagination} from 'src/components/toolbar/ToolbarPagination';\nimport ColumnNames from './ColumnNames';\nimport RepoCount from 'src/components/Table/RepoCount';\nimport {useOrganizations} from 'src/hooks/UseOrganizations';\nimport {useDeleteOrganizations} from 'src/hooks/UseDeleteOrganizations';\nimport {Router} from 'react-router-dom';\n\nexport interface OrganizationsTableItem {\n  name: string;\n  isUser: boolean;\n}\n\nfunction OrgListHeader() {\n  return (\n    <>\n       <QuayBreadcrumb />\n      <PageSection variant={PageSectionVariants.light}>\n        <div className=\"co-m-nav-title--row\">\n          <Title headingLevel=\"h1\">Organizations</Title>\n        </div>\n      </PageSection>\n    </>\n  );\n}\n\nexport default function OrganizationsList() {\n  const [isOrganizationModalOpen, setOrganizationModalOpen] = useState(false);\n  const [selectedOrganization, setSelectedOrganization] =\n    useRecoilState(selectedOrgsState);\n  const [err, setErr] = useState<string[]>();\n  const [deleteModalIsOpen, setDeleteModalIsOpen] = useState(false);\n  const [isKebabOpen, setKebabOpen] = useState(false);\n  const [perPage, setPerPage] = useState<number>(10);\n  const [page, setPage] = useState<number>(1);\n\n  const {\n    organizationsTableDetails,\n    loading,\n    error,\n    totalResults,\n    search,\n    setSearch,\n  } = useOrganizations();\n\n  const filteredOrgs =\n    search.query !== ''\n      ? organizationsTableDetails?.filter((repo) =>\n          repo.name.includes(search.query),\n        )\n      : organizationsTableDetails;\n\n  const paginatedOrganizationsList = filteredOrgs?.slice(\n    page * perPage - perPage,\n    page * perPage - perPage + perPage,\n  );\n\n  const isOrgSelectable = (org) => org.name !== ''; // Arbitrary logic for this example\n\n  // Logic for handling row-wise checkbox selection in <Td>\n  const isOrganizationSelected = (ns: OrganizationsTableItem) =>\n    selectedOrganization.some((org) => org.name === ns.name);\n\n  const setOrganizationChecked = (\n    ns: OrganizationsTableItem,\n    isSelecting = true,\n  ) =>\n    setSelectedOrganization((prevSelected) => {\n      const otherSelectedOrganizationNames = prevSelected.filter(\n        (r) => r.name !== ns.name,\n      );\n      return isSelecting && isOrgSelectable(ns)\n        ? [...otherSelectedOrganizationNames, ns]\n        : otherSelectedOrganizationNames;\n    });\n\n  // To allow shift+click to select/deselect multiple rows\n  const [recentSelectedRowIndex, setRecentSelectedRowIndex] = useState<\n    number | null\n  >(null);\n  const [shifting, setShifting] = useState(false);\n\n  const onSelectOrganization = (\n    currentOrganization: OrganizationsTableItem,\n    rowIndex: number,\n    isSelecting: boolean,\n  ) => {\n    // If the user is shift + selecting the checkboxes, then all intermediate checkboxes should be selected\n    if (shifting && recentSelectedRowIndex !== null) {\n      const numberSelected = rowIndex - recentSelectedRowIndex;\n      const intermediateIndexes =\n        numberSelected > 0\n          ? Array.from(\n              new Array(numberSelected + 1),\n              (_x, i) => i + recentSelectedRowIndex,\n            )\n          : Array.from(\n              new Array(Math.abs(numberSelected) + 1),\n              (_x, i) => i + rowIndex,\n            );\n      intermediateIndexes.forEach((index) =>\n        setOrganizationChecked(organizationsTableDetails[index], isSelecting),\n      );\n    } else {\n      setOrganizationChecked(currentOrganization, isSelecting);\n    }\n    setRecentSelectedRowIndex(rowIndex);\n  };\n\n  const {deleteOrganizations} = useDeleteOrganizations({\n    onSuccess: () => {\n      setDeleteModalIsOpen(!deleteModalIsOpen);\n      setSelectedOrganization([]);\n    },\n    onError: (err) => {\n      console.error(err);\n      if (err instanceof BulkOperationError) {\n        const errMessages = [];\n        // TODO: Would like to use for .. of instead of foreach\n        // typescript complains saying we're using version prior to es6?\n        err.getErrors().forEach((error, org) => {\n          errMessages.push(\n            addDisplayError(`Failed to delete org ${org}`, error.error),\n          );\n        });\n        setErr(errMessages);\n      } else {\n        setErr([addDisplayError('Failed to delete orgs', err)]);\n      }\n      setDeleteModalIsOpen(!deleteModalIsOpen);\n      setSelectedOrganization([]);\n    },\n  });\n\n  const handleOrgDeletion = async () => {\n    const orgs = selectedOrganization.map((org) => org.name);\n    await deleteOrganizations(orgs);\n  };\n\n  const handleDeleteModalToggle = () => {\n    setKebabOpen(!isKebabOpen);\n    setDeleteModalIsOpen(!deleteModalIsOpen);\n  };\n\n  const kebabItems = [\n    <DropdownItem key=\"delete\" onClick={handleDeleteModalToggle}>\n      Delete\n    </DropdownItem>,\n  ];\n\n  /* Mapper object used to render bulk delete table\n    - keys are actual column names of the table\n    - value is an object type with a \"label\" which maps to the attributes of <T>\n      and an optional \"transformFunc\" which can be used to modify the value being displayed */\n  const mapOfColNamesToTableData = {\n    Organization: {label: 'name'},\n    'Repo Count': {\n      transformFunc: (org: IOrganization) => <RepoCount name={org.name} />,\n    },\n  };\n\n  const createOrgModal = (\n    <CreateOrganizationModal\n      isModalOpen={isOrganizationModalOpen}\n      handleModalToggle={() =>\n        setOrganizationModalOpen(!isOrganizationModalOpen)\n      }\n    />\n  );\n\n  const deleteModal = (\n    <BulkDeleteModalTemplate\n      mapOfColNamesToTableData={mapOfColNamesToTableData}\n      handleModalToggle={() => setDeleteModalIsOpen(!deleteModalIsOpen)}\n      handleBulkDeletion={handleOrgDeletion}\n      isModalOpen={deleteModalIsOpen}\n      selectedItems={organizationsTableDetails?.filter((org) =>\n        selectedOrganization.some(\n          (selectedOrg) => org.name === selectedOrg.name,\n        ),\n      )}\n      resourceName={'organizations'}\n    />\n  );\n  useEffect(() => {\n    const onKeyDown = (e: KeyboardEvent) => {\n      if (e.key === 'Shift') {\n        setShifting(true);\n      }\n    };\n    const onKeyUp = (e: KeyboardEvent) => {\n      if (e.key === 'Shift') {\n        setShifting(false);\n      }\n    };\n\n    document.addEventListener('keydown', onKeyDown);\n    document.addEventListener('keyup', onKeyUp);\n\n    return () => {\n      document.removeEventListener('keydown', onKeyDown);\n      document.removeEventListener('keyup', onKeyUp);\n    };\n  }, []);\n\n  // Return component Loading state\n  if (loading) {\n    return (\n      <>\n        <OrgListHeader />\n        <LoadingPage />\n      </>\n    );\n  }\n\n  // Return component Error state\n  if (error) {\n    return (\n      <>\n        <OrgListHeader />\n        <RequestError message={error as string} />\n      </>\n    );\n  }\n\n  // Return component Empty state\n  if (!loading && !organizationsTableDetails?.length) {\n    return (\n      <>\n        <OrgListHeader />\n        <Empty\n          icon={CubesIcon}\n          title=\"Collaborate and share projects across teams\"\n          body=\"Create a shared space of public and private repositories for your developers to collaborate in. Organizations make it easy to add and manage people and permissions\"\n          button={\n            <ToolbarButton\n              id=\"create-organization-button\"\n              buttonValue=\"Create Organization\"\n              Modal={createOrgModal}\n              isModalOpen={isOrganizationModalOpen}\n              setModalOpen={setOrganizationModalOpen}\n            />\n          }\n        />\n      </>\n    );\n  }\n\n  return (\n    <>\n      <OrgListHeader />\n      <ErrorModal title=\"Org deletion failed\" error={err} setError={setErr} />\n      <PageSection variant={PageSectionVariants.light}>\n        <OrganizationToolBar\n          search={search}\n          setSearch={setSearch}\n          total={totalResults}\n          createOrgModal={createOrgModal}\n          isOrganizationModalOpen={isOrganizationModalOpen}\n          setOrganizationModalOpen={setOrganizationModalOpen}\n          isKebabOpen={isKebabOpen}\n          setKebabOpen={setKebabOpen}\n          kebabItems={kebabItems}\n          selectedOrganization={selectedOrganization}\n          deleteKebabIsOpen={deleteModalIsOpen}\n          deleteModal={deleteModal}\n          organizationsList={filteredOrgs}\n          perPage={perPage}\n          page={page}\n          setPage={setPage}\n          setPerPage={setPerPage}\n          setSelectedOrganization={setSelectedOrganization}\n          paginatedOrganizationsList={paginatedOrganizationsList}\n          onSelectOrganization={onSelectOrganization}\n        />\n        <TableComposable aria-label=\"Selectable table\">\n          <Thead>\n            <Tr>\n              <Th />\n              <Th>{ColumnNames.name}</Th>\n              <Th>{ColumnNames.repoCount}</Th>\n              <Th>{ColumnNames.teamsCount}</Th>\n              <Th>{ColumnNames.membersCount}</Th>\n              <Th>{ColumnNames.robotsCount}</Th>\n              <Th>{ColumnNames.lastModified}</Th>\n            </Tr>\n          </Thead>\n          <Tbody>\n            {paginatedOrganizationsList?.map((org, rowIndex) => (\n              <Tr key={org.name}>\n                <Td\n                  select={{\n                    rowIndex,\n                    onSelect: (_event, isSelecting) =>\n                      onSelectOrganization(org, rowIndex, isSelecting),\n                    isSelected: isOrganizationSelected(org),\n                    disable: !isOrgSelectable(org),\n                  }}\n                />\n                <OrgTableData\n                  name={org.name}\n                  isUser={org.isUser}\n                ></OrgTableData>\n              </Tr>\n            ))}\n          </Tbody>\n        </TableComposable>\n        <PanelFooter>\n          <ToolbarPagination\n            itemsList={filteredOrgs}\n            perPage={perPage}\n            page={page}\n            setPage={setPage}\n            setPerPage={setPerPage}\n            bottom={true}\n          />\n        </PanelFooter>\n      </PageSection>\n    </>\n  );\n}\n","import {useMutation, useQueryClient} from '@tanstack/react-query';\nimport {bulkDeleteOrganizations} from 'src/resources/OrganizationResource';\n\nexport function useDeleteOrganizations({onSuccess, onError}) {\n  const queryClient = useQueryClient();\n\n  const deleteOrganizationsMutator = useMutation(\n    async (orgs: string[]) => {\n      await bulkDeleteOrganizations(orgs);\n    },\n    {\n      onSuccess: () => {\n        queryClient.invalidateQueries(['user']);\n        onSuccess();\n      },\n      onError: (err) => {\n        onError(err);\n      },\n    },\n  );\n\n  return {\n    // Mutations\n    deleteOrganizations: async (orgs: string[]) =>\n      deleteOrganizationsMutator.mutate(orgs),\n  };\n}\n","import {\n  Modal,\n  ModalVariant,\n  Button,\n  Form,\n  FormGroup,\n  TextInput,\n  Radio,\n  SelectVariant,\n  Select,\n  SelectOption,\n  Flex,\n  FlexItem,\n} from '@patternfly/react-core';\nimport {IRepository} from 'src/resources/RepositoryResource';\nimport {useRef, useState} from 'react';\nimport FormError from 'src/components/errors/FormError';\nimport {ExclamationCircleIcon} from '@patternfly/react-icons';\nimport {addDisplayError} from 'src/resources/ErrorHandling';\nimport {IOrganization} from 'src/resources/OrganizationResource';\nimport {useQuayConfig} from 'src/hooks/UseQuayConfig';\nimport {useCreateRepository} from 'src/hooks/UseCreateRepository';\n\nenum visibilityType {\n  PUBLIC = 'PUBLIC',\n  PRIVATE = 'PRIVATE',\n}\n\nexport default function CreateRepositoryModalTemplate(\n  props: CreateRepositoryModalTemplateProps,\n) {\n  if (!props.isModalOpen) {\n    return null;\n  }\n  const [err, setErr] = useState<string>();\n  const quayConfig = useQuayConfig();\n\n  const [currentOrganization, setCurrentOrganization] = useState({\n    // For org scoped view, the name is set current org and for Repository list view,\n    // the name is set to 1st value from the Namespace dropdown\n    name: props.orgName !== null ? props.orgName : null,\n    isDropdownOpen: false,\n  });\n\n  const {createRepository} = useCreateRepository({\n    onSuccess: () => {\n      props.handleModalToggle();\n    },\n    onError: (error) => {\n      setErr(addDisplayError('Unable to create repository', error));\n    },\n  });\n\n  const [validationState, setValidationState] = useState({\n    repoName: true,\n    namespace: true,\n  });\n\n  const [newRepository, setNewRepository] = useState({\n    name: '',\n    description: '',\n  });\n\n  const [repoVisibility, setrepoVisibility] = useState(visibilityType.PUBLIC);\n\n  const nameInputRef = useRef();\n\n  const handleNameInputChange = (value) => {\n    let regex = /^[a-z0-9][.a-z0-9_-]{0,254}$/;\n    if (quayConfig?.features.EXTENDED_REPOSITORY_NAMES) {\n      // Extended repostitory name regex: allows \"/\" in repo names\n      regex = /^(?=.{0,255}$)[a-z0-9][.a-z0-9_-]*(?:\\/[a-z0-9][.a-z0-9_-]*)*$/;\n    }\n    setValidationState({\n      ...validationState,\n      repoName: regex.test(value) && value.length < 256,\n    });\n    setNewRepository({...newRepository, name: value});\n  };\n\n  const handleRepoDescriptionChange = (value) => {\n    setNewRepository({...newRepository, description: value});\n  };\n\n  const validateInput = () => {\n    const validNamespace = !!currentOrganization.name;\n    const validRepo = !!newRepository.name;\n    setValidationState({repoName: validRepo, namespace: validNamespace});\n    return validNamespace && validRepo;\n  };\n\n  const createRepositoryHandler = async () => {\n    if (!validateInput()) {\n      return;\n    }\n    await createRepository({\n      namespace: currentOrganization.name,\n      repository: newRepository.name,\n      visibility: repoVisibility.toLowerCase(),\n      description: newRepository.description,\n      repo_kind: 'image',\n    });\n  };\n\n  const handleNamespaceSelection = (e, value) => {\n    setCurrentOrganization((prevState) => ({\n      name: value,\n      isDropdownOpen: !prevState.isDropdownOpen,\n    }));\n  };\n\n  // namespace list includes both the orgs list and the user namespace\n  const namespaceSelectionList = () => {\n    const userSelection = (\n      <SelectOption key={props.username} value={props.username}></SelectOption>\n    );\n    const orgsSelectionList = props.organizations.map((orgs, idx) => (\n      <SelectOption key={idx} value={orgs.name}></SelectOption>\n    ));\n\n    return [userSelection, ...orgsSelectionList];\n  };\n\n  return (\n    <Modal\n      title=\"Create repository\"\n      id=\"create-repository-modal\"\n      variant={ModalVariant.large}\n      isOpen={props.isModalOpen}\n      onClose={props.handleModalToggle}\n      actions={[\n        <Button\n          key=\"confirm\"\n          variant=\"primary\"\n          onClick={createRepositoryHandler}\n          form=\"modal-with-form-form\"\n          isDisabled={\n            !currentOrganization.name ||\n            !newRepository.name ||\n            !validationState.repoName\n          }\n        >\n          Create\n        </Button>,\n        <Button key=\"cancel\" variant=\"link\" onClick={props.handleModalToggle}>\n          Cancel\n        </Button>,\n      ]}\n    >\n      <FormError message={err} setErr={setErr} />\n      <Form id=\"modal-with-form-form\" maxWidth=\"765px\">\n        <Flex>\n          <FlexItem>\n            <FormGroup\n              isInline\n              label=\"Namespace\"\n              fieldId=\"modal-with-form-form-name\"\n              isRequired\n              helperTextInvalid=\"Select a namespace\"\n              helperTextInvalidIcon={<ExclamationCircleIcon />}\n              validated={validationState.namespace ? 'success' : 'error'}\n            >\n              <Flex>\n                <FlexItem>\n                  <Select\n                    variant={SelectVariant.single}\n                    aria-label=\"Select Input\"\n                    onToggle={() =>\n                      setCurrentOrganization((prevState) => ({\n                        ...prevState,\n                        isDropdownOpen: !prevState.isDropdownOpen,\n                      }))\n                    }\n                    onSelect={handleNamespaceSelection}\n                    isOpen={currentOrganization.isDropdownOpen}\n                    maxHeight=\"200px\"\n                    width=\"200px\"\n                    isDisabled={props.orgName !== null}\n                    placeholderText={'Select namespace'}\n                    selections={currentOrganization.name}\n                  >\n                    {namespaceSelectionList()}\n                  </Select>\n                </FlexItem>\n                <FlexItem> / </FlexItem>\n              </Flex>\n            </FormGroup>\n          </FlexItem>\n          <FlexItem>\n            <FormGroup\n              label=\"Repository name\"\n              isRequired\n              fieldId=\"modal-with-form-form-name\"\n              helperTextInvalid=\"Must contain only lowercase alphanumeric and _- characters. Max 255 characters.\"\n              helperTextInvalidIcon={<ExclamationCircleIcon />}\n              validated={validationState.repoName ? 'success' : 'error'}\n            >\n              <TextInput\n                isRequired\n                type=\"text\"\n                id=\"repository-name-input\"\n                value={newRepository.name}\n                onChange={handleNameInputChange}\n                ref={nameInputRef}\n                validated={validationState.repoName ? 'default' : 'error'}\n              />\n            </FormGroup>\n          </FlexItem>\n        </Flex>\n        <FormGroup\n          label=\"Repository description\"\n          fieldId=\"modal-with-form-form-email\"\n        >\n          <TextInput\n            type=\"text\"\n            id=\"repository-description-input\"\n            name=\"modal-with-form-form-name\"\n            value={newRepository.description}\n            onChange={handleRepoDescriptionChange}\n            ref={nameInputRef}\n          />\n        </FormGroup>\n        <FormGroup\n          label=\"Repository visibility\"\n          fieldId=\"modal-with-form-form-email\"\n        >\n          <Radio\n            isChecked={repoVisibility === visibilityType.PUBLIC}\n            name=\"Public\"\n            onChange={() => setrepoVisibility(visibilityType.PUBLIC)}\n            label=\"Public\"\n            id={visibilityType.PUBLIC}\n            value={visibilityType.PUBLIC}\n            description=\"Anyone can see and pull from this repository. You choose who can push.\"\n          />\n          <br />\n          <Radio\n            isChecked={repoVisibility === visibilityType.PRIVATE}\n            name=\"Private\"\n            onChange={() => setrepoVisibility(visibilityType.PRIVATE)}\n            label=\"Private\"\n            id={visibilityType.PRIVATE}\n            value={visibilityType.PRIVATE}\n            description=\"You choose who can see,pull and push from/to this repository.\"\n          />\n        </FormGroup>\n      </Form>\n    </Modal>\n  );\n}\n\ninterface CreateRepositoryModalTemplateProps {\n  isModalOpen: boolean;\n  handleModalToggle?: () => void;\n  orgName?: string;\n  updateListHandler: (value: IRepository) => void;\n  username: string;\n  organizations: IOrganization[];\n}\n","import {createNewRepository} from 'src/resources/RepositoryResource';\nimport {useMutation, useQueryClient} from '@tanstack/react-query';\n\ninterface createRepositoryParams {\n  namespace: string;\n  repository: string;\n  visibility: string;\n  description: string;\n  repo_kind: string;\n}\n\nexport function useCreateRepository({onError, onSuccess}) {\n  const queryClient = useQueryClient();\n\n  const createRepositoryMutator = useMutation(\n    async ({\n      namespace,\n      repository,\n      visibility,\n      description,\n      repo_kind,\n    }: createRepositoryParams) => {\n      return createNewRepository(\n        namespace,\n        repository,\n        visibility,\n        description,\n        repo_kind,\n      );\n    },\n    {\n      onSuccess: () => {\n        onSuccess();\n        queryClient.invalidateQueries();\n      },\n      onError: (err) => {\n        onError(err);\n      },\n    },\n  );\n\n  return {\n    createRepository: async (params: createRepositoryParams) =>\n      createRepositoryMutator.mutate(params),\n  };\n}\n","import {atom} from 'recoil';\nimport {SearchState} from 'src/components/toolbar/SearchTypes';\nimport {RepositoryListColumnNames} from 'src/routes/RepositoriesList/ColumnNames';\n\nexport const selectedReposState = atom({\n  key: 'selectedReposState',\n  default: [],\n});\n\nexport const searchRepoState = atom<SearchState>({\n  key: 'searchRepoState',\n  default: {\n    query: '',\n    field: RepositoryListColumnNames.name,\n  },\n});\n\nexport const refreshPageState = atom({\n  key: 'refreshRepoPageState',\n  default: 0,\n});\n\nexport const selectedReposPermissionState = atom({\n  key: 'selectedReposPermissionState',\n  default: [],\n});\n","import {setRepositoryVisibility} from 'src/resources/RepositoryResource';\nimport {Modal, ModalVariant, Button} from '@patternfly/react-core';\nimport {useState} from 'react';\nimport FormError from 'src/components/errors/FormError';\nimport {addDisplayError} from 'src/resources/ErrorHandling';\nimport {useQueryClient} from '@tanstack/react-query';\n\nexport function ConfirmationModal(props: ConfirmationModalProps) {\n  const [err, setErr] = useState<string>();\n\n  const queryClient = useQueryClient();\n  const changeVisibility = async () => {\n    const visibility = props.makePublic ? 'public' : 'private';\n    try {\n      // TODO: Could replace this with a 'bulkSetRepoVisibility'\n      // function in RepositoryResource in the future\n      await Promise.all(\n        props.selectedItems.map(async (item) => {\n          const [org, ...repoArray] = item.split('/');\n          const repo = repoArray.join('/');\n          await setRepositoryVisibility(org, repo, visibility);\n        }),\n      );\n      queryClient.invalidateQueries(['organization']);\n      props.toggleModal();\n      props.selectAllRepos(false);\n    } catch (error: any) {\n      console.error(error);\n      setErr(addDisplayError('Unable to change visibility', error));\n    }\n  };\n\n  const handleModalConfirm = async () => {\n    // This modal should never render if no items have been selected,\n    // that should be handled by the parent component. Leaving this check\n    // in anyway.\n    if (props.selectedItems.length > 0) {\n      await changeVisibility();\n    } else {\n      setErr('No items selected');\n    }\n  };\n\n  return (\n    <Modal\n      variant={ModalVariant.small}\n      title={props.title}\n      isOpen={props.modalOpen}\n      onClose={props.toggleModal}\n      actions={[\n        <Button key=\"confirm\" variant=\"primary\" onClick={handleModalConfirm}>\n          {props.buttonText}\n        </Button>,\n        <Button key=\"cancel\" variant=\"link\" onClick={props.toggleModal}>\n          Cancel\n        </Button>,\n      ]}\n    >\n      <FormError message={err} setErr={setErr} />\n      {props.description}\n    </Modal>\n  );\n}\n\ntype ConfirmationModalProps = {\n  title: string;\n  description: string;\n  modalOpen: boolean;\n  buttonText: string;\n  selectedItems: string[];\n  makePublic: boolean;\n  toggleModal: () => void;\n  selectAllRepos: (isSelecting) => void;\n};\n","import {Toolbar, ToolbarContent, ToolbarItem} from '@patternfly/react-core';\nimport {useRecoilState} from 'recoil';\nimport {DropdownCheckbox} from 'src/components/toolbar/DropdownCheckbox';\nimport {SearchDropdown} from 'src/components/toolbar/SearchDropdown';\nimport {SearchInput} from 'src/components/toolbar/SearchInput';\nimport {ToolbarButton} from 'src/components/toolbar/ToolbarButton';\nimport {Kebab} from 'src/components/toolbar/Kebab';\nimport {ConfirmationModal} from 'src/components/modals/ConfirmationModal';\nimport {ToolbarPagination} from 'src/components/toolbar/ToolbarPagination';\nimport {ReactElement} from 'react';\nimport {RepositoryListColumnNames as ColumnNames} from './ColumnNames';\nimport {SearchState} from 'src/components/toolbar/SearchTypes';\n\nexport function RepositoryToolBar(props: RepositoryToolBarProps) {\n  const fetchConfirmationModalText = () => {\n    if (props.selectedRepoNames.length == 1) {\n      return props.selectedRepoNames[0];\n    }\n    return props.selectedRepoNames.length;\n  };\n\n  const fetchMakePublicDescription = () => {\n    if (props.selectedRepoNames.length == 0) {\n      return 'Please select one/more repositories to change visibility.';\n    }\n    return (\n      'Update ' +\n      fetchConfirmationModalText() +\n      ' repositories visibility to be public so they are visible to all user, and may be pulled by all users.'\n    );\n  };\n\n  const fetchMakePrivateDescription = () => {\n    if (props.selectedRepoNames.length == 0) {\n      return 'Please select one/more repositories to change visibility.';\n    }\n    return (\n      'Update ' +\n      fetchConfirmationModalText() +\n      ' repositories visibility to be private so they are only visible to certain users, and only may be pulled by certain users.'\n    );\n  };\n\n  return (\n    <Toolbar>\n      <ToolbarContent>\n        <DropdownCheckbox\n          selectedItems={props.selectedRepoNames}\n          deSelectAll={props.setSelectedRepoNames}\n          allItemsList={props.repositoryList}\n          itemsPerPageList={props.paginatedRepositoryList}\n          onItemSelect={props.onSelectRepo}\n        />\n        <SearchDropdown\n          items={[ColumnNames.name]}\n          searchState={props.search}\n          setSearchState={props.setSearch}\n        />\n        <SearchInput searchState={props.search} onChange={props.setSearch} />\n        <ToolbarButton\n          id=\"create-repository-button\"\n          buttonValue=\"Create Repository\"\n          Modal={props.pageModal}\n          isModalOpen={props.isModalOpen}\n          setModalOpen={props.setModalOpen}\n        />\n        <ToolbarItem>\n          {props.selectedRepoNames?.length !== 0 ? (\n            <Kebab\n              isKebabOpen={props.isKebabOpen}\n              setKebabOpen={props.setKebabOpen}\n              kebabItems={props.kebabItems}\n              useActions={true}\n            />\n          ) : null}\n          {props.deleteKebabIsOpen ? props.deleteModal : null}\n        </ToolbarItem>\n        <ToolbarPagination\n          itemsList={props.repositoryList}\n          perPage={props.perPage}\n          page={props.page}\n          setPage={props.setPage}\n          setPerPage={props.setPerPage}\n          total={props.repositoryList.length}\n        />\n      </ToolbarContent>\n      <ConfirmationModal\n        title=\"Make repositories public\"\n        description={fetchMakePublicDescription()}\n        modalOpen={props.makePublicModalOpen}\n        selectedItems={props.selectedRepoNames}\n        toggleModal={props.toggleMakePublicClick}\n        buttonText=\"Make public\"\n        makePublic={true}\n        selectAllRepos={props.selectAllRepos}\n      />\n      <ConfirmationModal\n        title=\"Make repositories private\"\n        description={fetchMakePrivateDescription()}\n        modalOpen={props.makePrivateModalOpen}\n        toggleModal={props.toggleMakePrivateClick}\n        buttonText=\"Make private\"\n        selectedItems={props.selectedRepoNames}\n        makePublic={false}\n        selectAllRepos={props.selectAllRepos}\n      />\n    </Toolbar>\n  );\n}\n\ntype RepositoryToolBarProps = {\n  total: number;\n  currentOrg: string;\n  showPageButton: boolean;\n  buttonText: string;\n  pageModal: object;\n  isModalOpen: boolean;\n  setModalOpen: (open) => void;\n  isKebabOpen: boolean;\n  setKebabOpen: (open) => void;\n  kebabItems: ReactElement[];\n  selectedRepoNames: any[];\n  deleteModal: object;\n  deleteKebabIsOpen: boolean;\n  makePublicModalOpen: boolean;\n  toggleMakePublicClick: () => void;\n  makePrivateModalOpen: boolean;\n  toggleMakePrivateClick: () => void;\n  selectAllRepos: () => void;\n  repositoryList: any[];\n  perPage: number;\n  page: number;\n  setPage: (pageNumber) => void;\n  setPerPage: (perPageNumber) => void;\n  search: SearchState;\n  setSearch: (searchState) => void;\n  setSelectedRepoNames: (selectedRepoList) => void;\n  paginatedRepositoryList: any[];\n  onSelectRepo: (Repo, rowIndex, isSelecting) => void;\n};\n","import {useMutation, useQueryClient} from '@tanstack/react-query';\nimport {bulkDeleteRepositories} from 'src/resources/RepositoryResource';\nimport {IRepository} from 'src/resources/RepositoryResource';\n\nexport function useDeleteRepositories({onSuccess, onError}) {\n  const queryClient = useQueryClient();\n\n  const deleteRepositoriesMutator = useMutation(\n    async (repos: IRepository[]) => {\n      return bulkDeleteRepositories(repos);\n    },\n    {\n      onSuccess: () => {\n        queryClient.invalidateQueries(['organization']);\n        onSuccess();\n      },\n      onError: (err) => {\n        onError(err);\n      },\n    },\n  );\n\n  return {\n    // Mutations\n    deleteRepositories: async (repos: IRepository[]) =>\n      deleteRepositoriesMutator.mutate(repos),\n  };\n}\n","import {\n  DropdownItem,\n  PageSection,\n  PageSectionVariants,\n  Spinner,\n  Title,\n  PanelFooter,\n} from '@patternfly/react-core';\nimport {\n  TableComposable,\n  Thead,\n  Tr,\n  Th,\n  Tbody,\n  Td,\n} from '@patternfly/react-table';\nimport {useRecoilState} from 'recoil';\nimport {IRepository} from 'src/resources/RepositoryResource';\nimport {ReactElement, useState} from 'react';\nimport {Link, useLocation} from 'react-router-dom';\nimport CreateRepositoryModalTemplate from 'src/components/modals/CreateRepoModalTemplate';\nimport {getRepoDetailPath} from 'src/routes/NavigationPath';\nimport {selectedReposState} from 'src/atoms/RepositoryState';\nimport {formatDate, formatSize} from 'src/libs/utils';\nimport {BulkDeleteModalTemplate} from 'src/components/modals/BulkDeleteModalTemplate';\nimport {RepositoryToolBar} from 'src/routes/RepositoriesList/RepositoryToolBar';\nimport {\n  addDisplayError,\n  BulkOperationError,\n  isErrorString,\n} from 'src/resources/ErrorHandling';\nimport RequestError from 'src/components/errors/RequestError';\nimport Empty from 'src/components/empty/Empty';\nimport {CubesIcon} from '@patternfly/react-icons';\nimport {ToolbarButton} from 'src/components/toolbar/ToolbarButton';\nimport {QuayBreadcrumb} from 'src/components/breadcrumb/Breadcrumb';\nimport ErrorModal from 'src/components/errors/ErrorModal';\nimport {useQuayConfig} from 'src/hooks/UseQuayConfig';\nimport {ToolbarPagination} from 'src/components/toolbar/ToolbarPagination';\nimport {RepositoryListColumnNames} from './ColumnNames';\nimport {LoadingPage} from 'src/components/LoadingPage';\nimport {useCurrentUser} from 'src/hooks/UseCurrentUser';\nimport {useRepositories} from 'src/hooks/UseRepositories';\nimport {useDeleteRepositories} from 'src/hooks/UseDeleteRepositories';\n\ninterface RepoListHeaderProps {\n  shouldRender: boolean;\n}\nfunction RepoListHeader(props: RepoListHeaderProps) {\n  if (!props.shouldRender) {\n    return null;\n  }\n  return (\n    <>\n      <QuayBreadcrumb />\n      <PageSection variant={PageSectionVariants.light} hasShadowBottom>\n        <div className=\"co-m-nav-title--row\">\n          <Title headingLevel=\"h1\">Repositories</Title>\n        </div>\n      </PageSection>\n    </>\n  );\n}\n\nexport default function RepositoriesList(props: RepositoriesListProps) {\n  const currentOrg = props.organizationName;\n  const [isCreateRepoModalOpen, setCreateRepoModalOpen] = useState(false);\n  const [isKebabOpen, setKebabOpen] = useState(false);\n  const [makePublicModalOpen, setmakePublicModal] = useState(false);\n  const [makePrivateModalOpen, setmakePrivateModal] = useState(false);\n  const [err, setErr] = useState<string[]>();\n  const location = useLocation();\n\n  console.log('current route location', location.pathname);\n\n  const quayConfig = useQuayConfig();\n  const {user} = useCurrentUser();\n  const {\n    repos,\n    loading,\n    error,\n    setPerPage,\n    setPage,\n    search,\n    setSearch,\n    page,\n    perPage,\n    totalResults,\n  } = useRepositories(currentOrg);\n\n  repos?.sort((r1, r2) => {\n    return r1.last_modified > r2.last_modified ? -1 : 1;\n  });\n\n  const repositoryList: RepoListTableItem[] = repos?.map((repo) => {\n    return {\n      namespace: repo.namespace,\n      name: repo.name,\n      is_public: repo.is_public,\n      last_modified: repo.last_modified,\n      size: repo.quota_report?.quota_bytes,\n    } as RepoListTableItem;\n  });\n\n  // Filtering Repositories after applied filter\n  const filteredRepos =\n    search.query !== ''\n      ? repositoryList.filter((repo) => {\n          const repoName =\n            currentOrg == null ? `${repo.namespace}/${repo.name}` : repo.name;\n          return repoName.includes(search.query);\n        })\n      : repositoryList;\n\n  const paginatedRepositoryList = filteredRepos?.slice(\n    page * perPage - perPage,\n    page * perPage - perPage + perPage,\n  );\n\n  // Select related states\n  const [selectedRepoNames, setSelectedRepoNames] =\n    useRecoilState(selectedReposState);\n  const isRepoSelectable = (repo: IRepository) => repo.name !== ''; // Arbitrary logic for this example\n  const selectAllRepos = (isSelecting = true) =>\n    setSelectedRepoNames(\n      isSelecting ? filteredRepos.map((r) => r.namespace + '/' + r.name) : [],\n    );\n\n  const setRepoSelected = (repo: IRepository, isSelecting = true) =>\n    setSelectedRepoNames((prevSelected) => {\n      const otherSelectedRepoNames = prevSelected.filter(\n        (r) => r !== repo.namespace + '/' + repo.name,\n      );\n      return isSelecting && isRepoSelectable(repo)\n        ? [...otherSelectedRepoNames, repo.namespace + '/' + repo.name]\n        : otherSelectedRepoNames;\n    });\n\n  const isRepoSelected = (repo: IRepository) =>\n    selectedRepoNames.includes(repo.namespace + '/' + repo.name);\n\n  const onSelectRepo = (\n    repo: IRepository,\n    rowIndex: number,\n    isSelecting: boolean,\n  ) => {\n    setRepoSelected(repo, isSelecting);\n  };\n\n  const toggleMakePublicClick = () => {\n    setmakePublicModal(!makePublicModalOpen);\n  };\n\n  const toggleMakePrivateClick = () => {\n    setmakePrivateModal(!makePrivateModalOpen);\n  };\n\n  const [isDeleteModalOpen, setDeleteModalOpen] = useState(false);\n\n  const handleDeleteModalToggle = () => {\n    setKebabOpen(!isKebabOpen);\n    setDeleteModalOpen(!isDeleteModalOpen);\n  };\n\n  const {deleteRepositories} = useDeleteRepositories({\n    onSuccess: () => {\n      setSelectedRepoNames([]);\n      setDeleteModalOpen(!isDeleteModalOpen);\n    },\n    onError: (err) => {\n      if (err instanceof BulkOperationError) {\n        const errMessages = [];\n        // TODO: Would like to use for .. of instead of foreach\n        // typescript complains saying we're using version prior to es6?\n        err.getErrors().forEach((error, repo) => {\n          errMessages.push(\n            addDisplayError(`Failed to delete repository ${repo}`, error.error),\n          );\n        });\n        setErr(errMessages);\n      } else {\n        setErr([addDisplayError('Failed to delete repository', err)]);\n      }\n      setSelectedRepoNames([]);\n      setDeleteModalOpen(!isDeleteModalOpen);\n    },\n  });\n\n  const kebabItems: ReactElement[] = [\n    <DropdownItem key=\"delete\" onClick={handleDeleteModalToggle}>\n      Delete\n    </DropdownItem>,\n\n    <DropdownItem\n      key=\"make public\"\n      component=\"button\"\n      onClick={toggleMakePublicClick}\n    >\n      Make Public\n    </DropdownItem>,\n    <DropdownItem\n      key=\"make private\"\n      component=\"button\"\n      onClick={toggleMakePrivateClick}\n    >\n      Make Private\n    </DropdownItem>,\n  ];\n\n  /* Mapper object used to render bulk delete table\n    - keys are actual column names of the table\n    - value is an object type with a \"label\" which maps to the attributes of <T>\n      and an optional \"transformFunc\" which can be used to modify the value being displayed */\n  const mapOfColNamesToTableData = {\n    Repository: {\n      label: 'name',\n      transformFunc: (item: IRepository) => {\n        return `${item.namespace}/${item.name}`;\n      },\n    },\n    Visibility: {\n      label: 'is_public',\n      transformFunc: (item: IRepository) =>\n        item.is_public ? 'public' : 'private',\n    },\n    Size: {\n      label: 'size',\n      transformFunc: (item: IRepository) => formatSize(item.size),\n    },\n  };\n\n  const createRepoModal = (\n    <CreateRepositoryModalTemplate\n      isModalOpen={isCreateRepoModalOpen}\n      handleModalToggle={() => setCreateRepoModalOpen(!isCreateRepoModalOpen)}\n      orgName={currentOrg}\n      updateListHandler={() => null}\n      username={user.username}\n      organizations={user.organizations}\n    />\n  );\n\n  const deleteRepositoryModal = (\n    <BulkDeleteModalTemplate\n      mapOfColNamesToTableData={mapOfColNamesToTableData}\n      handleModalToggle={handleDeleteModalToggle}\n      handleBulkDeletion={deleteRepositories}\n      isModalOpen={isDeleteModalOpen}\n      selectedItems={repositoryList.filter((repo) =>\n        selectedRepoNames.some(\n          (selected) => repo.namespace + '/' + repo.name === selected,\n        ),\n      )}\n      resourceName={'repositories'}\n    />\n  );\n\n  // Return component Loading state\n  if (loading) {\n    return (\n      <>\n        <RepoListHeader shouldRender={currentOrg === null} />\n        <LoadingPage />\n      </>\n    );\n  }\n\n  // Return component Error state\n  if (isErrorString(error as any)) {\n    return (\n      <>\n        <RepoListHeader shouldRender={currentOrg === null} />\n        <RequestError message={error as any} />\n      </>\n    );\n  }\n\n  // Return component Empty state\n  if (!loading && !repositoryList?.length) {\n    return (\n      <Empty\n        icon={CubesIcon}\n        title=\"There are no viewable repositories\"\n        body=\"Either no repositories exist yet or you may not have permission to view any. If you have permission, try creating a new repository.\"\n        button={\n          <ToolbarButton\n            id=\"\"\n            buttonValue=\"Create Repository\"\n            Modal={createRepoModal}\n            isModalOpen={isCreateRepoModalOpen}\n            setModalOpen={setCreateRepoModalOpen}\n          />\n        }\n      />\n    );\n  }\n\n  return (\n    <>\n      <RepoListHeader shouldRender={currentOrg === null} />\n      <PageSection variant={PageSectionVariants.light}>\n        <ErrorModal title=\"Org deletion failed\" error={err} setError={setErr} />\n        <RepositoryToolBar\n          search={search}\n          setSearch={setSearch}\n          total={totalResults}\n          currentOrg={currentOrg}\n          pageModal={createRepoModal}\n          showPageButton={true}\n          buttonText=\"Create Repository\"\n          isModalOpen={isCreateRepoModalOpen}\n          setModalOpen={setCreateRepoModalOpen}\n          isKebabOpen={isKebabOpen}\n          setKebabOpen={setKebabOpen}\n          kebabItems={kebabItems}\n          selectedRepoNames={selectedRepoNames}\n          deleteModal={deleteRepositoryModal}\n          deleteKebabIsOpen={isDeleteModalOpen}\n          makePublicModalOpen={makePublicModalOpen}\n          toggleMakePublicClick={toggleMakePublicClick}\n          makePrivateModalOpen={makePrivateModalOpen}\n          toggleMakePrivateClick={toggleMakePrivateClick}\n          selectAllRepos={selectAllRepos}\n          repositoryList={filteredRepos}\n          perPage={perPage}\n          page={page}\n          setPage={setPage}\n          setPerPage={setPerPage}\n          setSelectedRepoNames={setSelectedRepoNames}\n          paginatedRepositoryList={paginatedRepositoryList}\n          onSelectRepo={onSelectRepo}\n        />\n        <TableComposable aria-label=\"Selectable table\">\n          <Thead>\n            <Tr>\n              <Th />\n              <Th>{RepositoryListColumnNames.name}</Th>\n              <Th>{RepositoryListColumnNames.visibility}</Th>\n              {quayConfig?.features.QUOTA_MANAGEMENT ? (\n                <Th>{RepositoryListColumnNames.size}</Th>\n              ) : (\n                <></>\n              )}\n              <Th>{RepositoryListColumnNames.lastModified}</Th>\n            </Tr>\n          </Thead>\n          <Tbody data-testid=\"repository-list-table\">\n            {repositoryList.length === 0 ? (\n              // Repo table loading icon\n              <Tr>\n                <Td>\n                  <Spinner size=\"lg\" />\n                </Td>\n              </Tr>\n            ) : (\n              paginatedRepositoryList.map((repo, rowIndex) => (\n                <Tr key={rowIndex}>\n                  <Td\n                    select={{\n                      rowIndex,\n                      onSelect: (_event, isSelecting) =>\n                        onSelectRepo(repo, rowIndex, isSelecting),\n                      isSelected: isRepoSelected(repo),\n                      disable: !isRepoSelectable(repo),\n                    }}\n                  />\n                  <Td dataLabel={RepositoryListColumnNames.name}>\n                    {currentOrg == null ? (\n                      <Link\n                        to={getRepoDetailPath(\n                          location.pathname,\n                          repo.namespace,\n                          repo.name,\n                        )}\n                      >\n                        {repo.namespace}/{repo.name}\n                      </Link>\n                    ) : (\n                      <Link\n                        to={getRepoDetailPath(\n                          location.pathname,\n                          repo.namespace,\n                          repo.name,\n                        )}\n                      >\n                        {repo.name}\n                      </Link>\n                    )}\n                  </Td>\n                  <Td dataLabel={RepositoryListColumnNames.visibility}>\n                    {repo.is_public ? 'public' : 'private'}\n                  </Td>\n                  {quayConfig?.features.QUOTA_MANAGEMENT ? (\n                    <Td dataLabel={RepositoryListColumnNames.size}>\n                      {' '}\n                      {formatSize(repo.size)}\n                    </Td>\n                  ) : (\n                    <></>\n                  )}\n                  <Td dataLabel={RepositoryListColumnNames.lastModified}>\n                    {formatDate(repo.last_modified)}\n                  </Td>\n                </Tr>\n              ))\n            )}\n          </Tbody>\n        </TableComposable>\n        <PanelFooter>\n          <ToolbarPagination\n            total={totalResults}\n            itemsList={filteredRepos}\n            perPage={perPage}\n            page={page}\n            setPage={setPage}\n            setPerPage={setPerPage}\n            bottom={true}\n          />\n        </PanelFooter>\n      </PageSection>\n    </>\n  );\n}\n\ninterface RepoListTableItem {\n  namespace: string;\n  name: string;\n  is_public: boolean;\n  size: number;\n  last_modified: number;\n}\n\ninterface RepositoriesListProps {\n  organizationName: string;\n}\n","import {useEffect, useState} from 'react';\nimport {\n  Tabs,\n  Tab,\n  TabTitleText,\n  Flex,\n  FlexItem,\n  FormGroup,\n  Form,\n  TextInput,\n  FormSelect,\n  FormSelectOption,\n  ActionGroup,\n  Button,\n} from '@patternfly/react-core';\nimport {useLocation} from 'react-router-dom';\nimport {useCurrentUser} from 'src/hooks/UseCurrentUser';\nimport {useOrganization} from 'src/hooks/UseOrganization';\n\nconst GeneralSettings = (props: GeneralSettingsProps) => {\n  const location = useLocation();\n  const organizationName = props.organizationName;\n\n  const {user} = useCurrentUser();\n  const {organization, isUserOrganization, loading} =\n    useOrganization(organizationName);\n\n  // Time Machine\n  const timeMachineOptions = ['1 week', '1 month', '1 year', 'Never'];\n  const [timeMachineFormValue, setTimeMachineFormValue] = useState(\n    timeMachineOptions[0],\n  );\n\n  // Email\n  const [emailFormValue, setEmailFormValue] = useState('');\n  useEffect(() => {\n    if (!loading && organization) {\n      setEmailFormValue((organization as any).email);\n    } else if (isUserOrganization) {\n      setEmailFormValue(user.email);\n    }\n  }, [loading, isUserOrganization]);\n\n  return (\n    <Form id=\"form-form\" maxWidth=\"70%\">\n      <FormGroup\n        isInline\n        label=\"Organization\"\n        fieldId=\"form-organization\"\n        helperText={'Orgnization names cannot be changed once set.'}\n      >\n        <TextInput\n          isDisabled\n          type=\"text\"\n          id=\"form-name\"\n          value={organizationName}\n        />\n      </FormGroup>\n\n      <FormGroup\n        isInline\n        label=\"Email\"\n        fieldId=\"form-email\"\n        helperText=\"The e-mail address associated with the organization.\"\n      >\n        <TextInput\n          type=\"email\"\n          id=\"modal-with-form-form-name\"\n          value={emailFormValue}\n          onChange={(val) => setEmailFormValue(val)}\n        />\n      </FormGroup>\n\n      <FormGroup\n        isInline\n        label=\"Time Machine\"\n        fieldId=\"form-time-machine\"\n        helperText=\"The amount of time, after a tag is deleted, that the tag is accessible in time machine before being garbage collected.\"\n      >\n        <FormSelect\n          placeholder=\"Time Machine\"\n          aria-label=\"Time Machine select\"\n          data-testid=\"arch-select\"\n          value={timeMachineFormValue}\n          onChange={(val) => setTimeMachineFormValue(val)}\n        >\n          {timeMachineOptions.map((option, index) => (\n            <FormSelectOption key={index} value={option} label={option} />\n          ))}\n        </FormSelect>\n      </FormGroup>\n\n      <ActionGroup>\n        <Flex\n          justifyContent={{default: 'justifyContentFlexEnd'}}\n          width={'100%'}\n        >\n          <Button variant=\"primary\">Save</Button>\n          <Button variant=\"link\">Cancel</Button>\n        </Flex>\n      </ActionGroup>\n    </Form>\n  );\n};\n\n// const BillingInformation = () => {\n//   return <h1>Hello</h1>;\n// };\n\nexport default function Settings(props: SettingsProps) {\n  const [activeTabIndex, setActiveTabIndex] = useState(0);\n\n  const handleTabClick = (event, tabIndex) => {\n    setActiveTabIndex(tabIndex);\n  };\n\n  const tabs = [\n    {\n      name: 'General Settings',\n      id: 'generalsettings',\n      content: <GeneralSettings organizationName={props.organizationName} />,\n    },\n    // {\n    //   name: 'Billing Information',\n    //   id: 'billinginformation',\n    //   content: <BillingInformation />,\n    // },\n  ];\n\n  return (\n    <Flex flexWrap={{default: 'nowrap'}}>\n      <FlexItem>\n        <Tabs\n          activeKey={activeTabIndex}\n          onSelect={handleTabClick}\n          isVertical\n          aria-label=\"Tabs in the vertical example\"\n          role=\"region\"\n        >\n          {tabs.map((tab, tabIndex) => (\n            <Tab\n              key={tab.id}\n              eventKey={tabIndex}\n              title={<TabTitleText>{tab.name}</TabTitleText>}\n            />\n          ))}\n        </Tabs>\n      </FlexItem>\n\n      <FlexItem\n        alignSelf={{default: 'alignSelfCenter'}}\n        style={{padding: '20px'}}\n      >\n        {tabs.at(activeTabIndex).content}\n      </FlexItem>\n    </Flex>\n  );\n}\n\ntype SettingsProps = {\n  organizationName: string;\n};\n\ntype GeneralSettingsProps = {\n  organizationName: string;\n};\n","import {fetchOrg} from 'src/resources/OrganizationResource';\nimport {useQuery} from '@tanstack/react-query';\nimport {useOrganizations} from './UseOrganizations';\nimport {IOrganization} from 'src/resources/OrganizationResource';\n\nexport function useOrganization(name: string) {\n  // Get usernames\n  const {usernames} = useOrganizations();\n  const isUserOrganization = usernames.includes(name);\n\n  // Get organization\n  const {\n    data: organization,\n    isLoading,\n    error,\n  } = useQuery(['organization', name], ({signal}) => fetchOrg(name, signal), {\n    enabled: !isUserOrganization,\n    placeholderData: (): IOrganization[] => new Array(10).fill({}),\n  });\n\n  return {\n    isUserOrganization,\n    error,\n    loading: isLoading,\n    organization,\n  };\n}\n","import {atom} from 'recoil';\nimport {SearchState} from '../components/toolbar/SearchTypes';\nimport {RobotAccountColumnNames} from 'src/routes/RepositoriesList/ColumnNames';\n\nexport const selectedRobotAccountsState = atom({\n  key: 'selectedRobotAccountsState',\n  default: [],\n});\n\nexport const searchRobotAccountState = atom<SearchState>({\n  key: 'searchRobotAccountState',\n  default: {\n    query: '',\n    field: RobotAccountColumnNames.robotAccountName,\n  },\n});\n\nexport const selectedRobotDefaultPermission = atom({\n  key: 'selectedRobotDefaultPermission',\n  default: '',\n});\n\nexport const selectedRobotReposState = atom({\n  key: 'selectedRobotReposState',\n  default: [],\n});\n\nexport const selectedRobotReposPermissionState = atom({\n  key: 'selectedRobotReposPermissionState',\n  default: [],\n});\n","import React from 'react';\nimport {SearchInput, ToolbarItem} from '@patternfly/react-core';\nimport {SearchState} from './SearchTypes';\nimport {SetterOrUpdater} from 'recoil';\n\nexport function FilterInput(props: FilterInputProps) {\n  const setSearchState = (val: string) => {\n    props.onChange((prev: SearchState) => ({...prev, query: val.trim()}));\n  };\n\n  return (\n    <ToolbarItem variant=\"search-filter\">\n      <SearchInput\n        placeholder=\"Search\"\n        value={props.searchState.query}\n        onChange={setSearchState}\n        onClear={() => setSearchState('')}\n        id={props.id}\n      />\n    </ToolbarItem>\n  );\n}\n\ninterface FilterInputProps {\n  searchState: SearchState;\n  onChange: SetterOrUpdater<SearchState>;\n  id?: string;\n}\n","import {\n  ToggleGroup,\n  ToggleGroupItem,\n  ToggleGroupItemProps,\n  ToolbarItem,\n} from '@patternfly/react-core';\nimport React from 'react';\n\ntype TableModeType = 'Expand' | 'Collapse';\n\nexport function ExpandCollapseButton(props: ExpandCollapseButtonProps) {\n  const [tableMode, setTableMode] = React.useState<TableModeType>('Collapse');\n  const onTableModeChange: ToggleGroupItemProps['onChange'] = (\n    _isSelected,\n    event,\n  ) => {\n    const id = event.currentTarget.id;\n    setTableMode(id as TableModeType);\n    if (id == 'Expand') {\n      props.expandTable();\n    } else if (id == 'Collapse') {\n      props.collapseTable();\n    }\n  };\n\n  return (\n    <ToolbarItem>\n      <ToggleGroup\n        aria-label=\"Default with single selectable\"\n        id=\"expand-collapse-tab\"\n      >\n        <ToggleGroupItem\n          text=\"Expand\"\n          buttonId=\"Expand\"\n          isSelected={tableMode === 'Expand'}\n          onChange={onTableModeChange}\n          id=\"expand-tab\"\n        />\n        <ToggleGroupItem\n          text=\"Collapse\"\n          buttonId=\"Collapse\"\n          isSelected={tableMode === 'Collapse'}\n          onChange={onTableModeChange}\n          id=\"collapse-tab\"\n        />\n      </ToggleGroup>\n    </ToolbarItem>\n  );\n}\n\ntype ExpandCollapseButtonProps = {\n  expandTable: () => void;\n  collapseTable: () => void;\n};\n","import {Button} from '@patternfly/react-core';\nimport {TrashIcon} from '@patternfly/react-icons';\n\nexport function BulkDelete(props: BulkDeleteProps) {\n  return (\n    <Button\n      variant=\"plain\"\n      aria-label=\"Action\"\n      onClick={() => props.setClicked(true)}\n    >\n      <TrashIcon color=\"#6a6e73\" />\n    </Button>\n  );\n}\n\ntype BulkDeleteProps = {\n  setClicked: (boolean) => void;\n};\n","import {Toolbar, ToolbarContent} from '@patternfly/react-core';\nimport {DropdownCheckbox} from 'src/components/toolbar/DropdownCheckbox';\nimport {IRobot} from 'src/resources/RobotsResource';\nimport {useRecoilState} from 'recoil';\nimport {searchRobotAccountState} from 'src/atoms/RobotAccountState';\nimport {FilterInput} from 'src/components/toolbar/FilterInput';\nimport {ToolbarButton} from 'src/components/toolbar/ToolbarButton';\nimport {Kebab} from 'src/components/toolbar/Kebab';\nimport React, {ReactElement} from 'react';\nimport {ToolbarPagination} from 'src/components/toolbar/ToolbarPagination';\nimport {ExpandCollapseButton} from 'src/components/toolbar/ExpandCollapseButton';\nimport {BulkDelete} from 'src/components/toolbar/BulkDelete';\n\nexport function RobotAccountsToolBar(props: RobotAccountsToolBarProps) {\n  const [search, setSearch] = useRecoilState(searchRobotAccountState);\n\n  return (\n    <Toolbar>\n      <ToolbarContent>\n        <DropdownCheckbox\n          selectedItems={props.selectedItems}\n          deSelectAll={props.setSelectedRobotAccounts}\n          allItemsList={props.allItemsList}\n          itemsPerPageList={props.itemsPerPageList}\n          onItemSelect={props.onItemSelect}\n          id=\"robot-account-dropdown-checkbox\"\n        />\n        <FilterInput\n          searchState={search}\n          onChange={setSearch}\n          id=\"robot-account-search\"\n        />\n        <ToolbarButton\n          id=\"create-robot-account-btn\"\n          buttonValue={props.buttonText}\n          Modal={props.pageModal}\n          isModalOpen={props.isModalOpen}\n          setModalOpen={props.setModalOpen}\n        />\n        <ExpandCollapseButton\n          expandTable={props.expandTable}\n          collapseTable={props.collapseTable}\n        />\n        {props.selectedItems.length > 0 ? (\n          <BulkDelete setClicked={props.setDeleteModalOpen} />\n        ) : null}\n        {props.deleteKebabIsOpen ? props.deleteModal() : null}\n        <ToolbarPagination\n          itemsList={props.allItemsList}\n          perPage={props.perPage}\n          page={props.page}\n          setPage={props.setPage}\n          setPerPage={props.setPerPage}\n          total={props.total}\n        />\n      </ToolbarContent>\n    </Toolbar>\n  );\n}\n\ntype RobotAccountsToolBarProps = {\n  selectedItems: IRobot[];\n  allItemsList: IRobot[];\n  itemsPerPageList: IRobot[];\n  setSelectedRobotAccounts: (selectedRobotAccounts) => void;\n  onItemSelect: (Item, rowIndex, isSelecting) => void;\n  buttonText: string;\n  pageModal: object;\n  isModalOpen: boolean;\n  setModalOpen: (open) => void;\n  isKebabOpen: boolean;\n  setKebabOpen: (open) => void;\n  kebabItems: ReactElement[];\n  deleteModal: () => object;\n  deleteKebabIsOpen: boolean;\n  setDeleteModalOpen: (open) => void;\n  perPage: number;\n  page: number;\n  setPage: (pageNumber) => void;\n  setPerPage: (perPageNumber) => void;\n  total: number;\n  expandTable: () => void;\n  collapseTable: () => void;\n};\n","import {Form, FormGroup, TextInput} from '@patternfly/react-core';\nimport ExclamationCircleIcon from '@patternfly/react-icons/dist/esm/icons/exclamation-circle-icon';\nimport {useEffect, useState} from 'react';\n\ntype validate = 'success' | 'error' | 'default';\n\nexport default function NameAndDescription(props: NameAndDescriptionProps) {\n  const [validatedName, setValidatedName] = useState<validate>('default');\n  const [nameHelperText, setNameHelperText] = useState(props.nameHelperText);\n\n  const handleNameChange = (robotName: string) => {\n    props.setName(robotName);\n    setNameHelperText('Validating...');\n  };\n\n  useEffect(() => {\n    if (props.name == '') {\n      setValidatedName('default');\n      setNameHelperText(props.nameHelperText);\n      return;\n    }\n    if (props.validateName()) {\n      setValidatedName('success');\n    } else {\n      setValidatedName('error');\n    }\n    setNameHelperText(props.nameHelperText);\n  }, [props.name]);\n\n  return (\n    <Form>\n      <FormGroup\n        label={props.nameLabel}\n        fieldId=\"form-name\"\n        isRequired\n        helperText={nameHelperText}\n        helperTextInvalid={nameHelperText}\n        validated={validatedName}\n        helperTextInvalidIcon={<ExclamationCircleIcon />}\n      >\n        <TextInput\n          isRequired\n          type=\"text\"\n          id=\"robot-wizard-form-name\"\n          name=\"form-name\"\n          value={props.name}\n          onChange={handleNameChange}\n          validated={validatedName}\n        />\n      </FormGroup>\n      <FormGroup\n        label={props.descriptionLabel}\n        fieldId=\"form-description\"\n        helperText={props.helperText}\n      >\n        <TextInput\n          type=\"text\"\n          id=\"robot-wizard-form-description\"\n          name=\"form-description\"\n          value={props.description}\n          onChange={(robotDescription: string) =>\n            props.setDescription(robotDescription)\n          }\n        />\n      </FormGroup>\n    </Form>\n  );\n}\n\ninterface NameAndDescriptionProps {\n  name: string;\n  setName: (robotName) => void;\n  description: string;\n  setDescription: (robotDescription) => void;\n  nameLabel: string;\n  descriptionLabel: string;\n  helperText: string;\n  nameHelperText: string;\n  validateName: () => boolean;\n}\n","import {AxiosResponse} from 'axios';\nimport axios from 'src/libs/axios';\nimport {assertHttpCode} from './ErrorHandling';\n\nexport async function createNewTeamForNamespac(\n  namespace: string,\n  name: string,\n  description: string,\n) {\n  const createTeamUrl = `/api/v1/organization/${namespace}/team/${name}`;\n  const payload = {name: name, role: 'member', description: description};\n  const response: AxiosResponse = await axios.put(createTeamUrl, payload);\n  assertHttpCode(response.status, 200);\n  return response.data?.name;\n}\n\nexport async function updateTeamForRobot(\n  namespace: string,\n  teamName: string,\n  robotName: string,\n) {\n  const robotNameWithOrg = `${namespace}+${robotName}`;\n  const createTeamUrl = `/api/v1/organization/${namespace}/team/${teamName}/members/${robotNameWithOrg}`;\n  const response: AxiosResponse = await axios.put(createTeamUrl, {});\n  assertHttpCode(response.status, 200);\n  return response.data?.name;\n}\n","import {useState} from 'react';\nimport {useMutation, useQuery, useQueryClient} from '@tanstack/react-query';\nimport {\n  addDefaultPermsForRobot,\n  createNewRobotForNamespace,\n  fetchRobotsForNamespace,\n  updateRepoPermsForRobot,\n  IRobotRepoPerms,\n  IRobotTeam,\n} from 'src/resources/RobotsResource';\nimport {updateTeamForRobot} from 'src/resources/TeamResources';\n\nexport function useRobotAccounts({name, onSuccess, onError}) {\n  const [page, setPage] = useState(1);\n  const [perPage, setPerPage] = useState(10);\n  const [namespace, setNamespace] = useState(name);\n\n  const {\n    data: robotAccountsForOrg,\n    isLoading: loading,\n    error,\n  } = useQuery(\n    ['Namespace', namespace, 'robots'],\n    ({signal}) => fetchRobotsForNamespace(namespace, false, signal),\n    {\n      placeholderData: [],\n      onSuccess: () => {\n        onSuccess();\n      },\n      onError: (err) => {\n        onError(err);\n      },\n    },\n  );\n\n  const queryClient = useQueryClient();\n\n  const createRobotAccountMutator = useMutation(\n    async ({\n      namespace,\n      robotname,\n      description,\n      isUser,\n      reposToUpdate,\n      selectedTeams,\n      robotDefaultPerm,\n    }: createNewRobotForNamespaceParams) => {\n      return createNewRobotForNamespace(\n        namespace,\n        robotname,\n        description,\n        isUser,\n        reposToUpdate,\n        selectedTeams,\n        robotDefaultPerm,\n      );\n    },\n    {\n      onSuccess: (result) => {\n        if (result.reposToUpdate) {\n          Promise.allSettled(\n            result.reposToUpdate.map((repo) =>\n              updateRepoPermsForRobot(\n                namespace,\n                result.robotname,\n                repo.name,\n                repo.permission,\n                result.isUser,\n              ),\n            ),\n          );\n        }\n\n        if (result.selectedTeams) {\n          Promise.allSettled(\n            result.selectedTeams.map((team) =>\n              updateTeamForRobot(namespace, team.name, result.robotname),\n            ),\n          );\n        }\n\n        if (result.robotDefaultPerm && result.robotDefaultPerm != 'None') {\n          addDefaultPermsForRobot(\n            namespace,\n            result.robotname,\n            result.robotDefaultPerm,\n          );\n        }\n\n        queryClient.invalidateQueries(['Namespace', namespace, 'robots']);\n      },\n    },\n  );\n\n  const addDefaultPermsForRobotMutator = useMutation(\n    async ({\n      namespace,\n      robotname,\n      permission,\n    }: addDefaultPermsForRobotParams) => {\n      return addDefaultPermsForRobot(namespace, robotname, permission);\n    },\n    {\n      onSuccess: () => {\n        queryClient.invalidateQueries(['Namespace', namespace, 'robots']);\n      },\n    },\n  );\n\n  const updateRepoPermsForRobotMutator = useMutation(\n    async ({\n      namespace,\n      robotname,\n      reponame,\n      permission,\n      isUser,\n    }: updateRobotRepoPermsParams) => {\n      return updateRepoPermsForRobot(\n        namespace,\n        robotname,\n        reponame,\n        permission,\n        isUser,\n      );\n    },\n    {\n      onSuccess: () => {\n        queryClient.invalidateQueries(['Namespace', namespace, 'robots']);\n      },\n    },\n  );\n\n  const updateTeamsForRobotMutator = useMutation(\n    async ({namespace, teamname, robotname}: updateTeamsForRobotParams) => {\n      return updateTeamForRobot(namespace, teamname, robotname);\n    },\n    {\n      onSuccess: () => {\n        queryClient.invalidateQueries(['organization', namespace, 'teams']);\n      },\n    },\n  );\n\n  return {\n    robotAccountsForOrg: robotAccountsForOrg,\n    loading: loading,\n    error,\n    setPage,\n    setPerPage,\n    page,\n    perPage,\n    setNamespace,\n    namespace,\n    createNewRobot: async (params: createNewRobotForNamespaceParams) =>\n      createRobotAccountMutator.mutate(params),\n    updateRepoPermsForRobot: async (params: updateRobotRepoPermsParams) =>\n      updateRepoPermsForRobotMutator.mutate(params),\n    updateTeamsForRobot: async (params: updateTeamsForRobotParams) =>\n      updateTeamsForRobotMutator.mutate(params),\n    addDefaultPermsForRobot: async (params: addDefaultPermsForRobotParams) =>\n      addDefaultPermsForRobotMutator.mutate(params),\n  };\n}\n\ninterface createNewRobotForNamespaceParams {\n  namespace: string;\n  robotname: string;\n  description: string;\n  isUser?: boolean;\n  reposToUpdate: IRobotRepoPerms[];\n  selectedTeams: IRobotTeam[];\n  robotDefaultPerm: string;\n}\n\ninterface updateRobotRepoPermsParams {\n  namespace: string;\n  robotname: string;\n  reponame: string;\n  permission: string;\n  isUser?: boolean;\n}\n\ninterface updateTeamsForRobotParams {\n  namespace: string;\n  teamname: string;\n  robotname: string;\n}\n\ninterface addDefaultPermsForRobotParams {\n  namespace: string;\n  robotname: string;\n  permission: string;\n}\n","import {\n  Button,\n  WizardContextConsumer,\n  WizardFooter,\n} from '@patternfly/react-core';\n\nexport default function Footer(props: FooterProps) {\n  if (props.isDrawerExpanded) {\n    return null;\n  }\n  return (\n    <WizardFooter>\n      <WizardContextConsumer>\n        {({\n          activeStep,\n          goToStepByName,\n          goToStepById,\n          onNext,\n          onBack,\n          onClose,\n        }) => {\n          return (\n            <>\n              {activeStep.name != 'Review and Finish' ? (\n                <Button variant=\"primary\" type=\"submit\" onClick={onNext}>\n                  Next\n                </Button>\n              ) : null}\n              {activeStep.name != 'Robot name and description' ? (\n                <Button variant=\"secondary\" type=\"submit\" onClick={onBack}>\n                  Back\n                </Button>\n              ) : (\n                ''\n              )}\n              {activeStep.name == 'Robot name and description' ||\n              activeStep.name == 'Review and Finish' ? (\n                <Button\n                  isDisabled={!props.isDataValid()}\n                  variant=\"secondary\"\n                  onClick={props.onSubmit}\n                  id=\"create-robot-submit\"\n                >\n                  Review and Finish\n                </Button>\n              ) : null}\n              <Button variant=\"link\" onClick={onClose} id=\"create-robot-cancel\">\n                Cancel\n              </Button>\n            </>\n          );\n        }}\n      </WizardContextConsumer>\n    </WizardFooter>\n  );\n}\n\ninterface FooterProps {\n  onSubmit: () => void;\n  isDrawerExpanded: boolean;\n  isDataValid: () => boolean;\n}\n","import {\n  Drawer,\n  DrawerPanelContent,\n  DrawerContent,\n  DrawerHead,\n  DrawerActions,\n  DrawerCloseButton,\n  DrawerColorVariant,\n} from '@patternfly/react-core';\nimport React from 'react';\n\nexport default function ToggleDrawer(props: ToggleDrawerProps) {\n  const drawerRef = React.useRef<HTMLDivElement>();\n\n  const onExpand = () => {\n    drawerRef.current && drawerRef.current.focus();\n  };\n\n  const onCloseClick = () => {\n    props.setIsExpanded(false);\n  };\n\n  const panelContent = (\n    <DrawerPanelContent\n      id=\"right-resize-panel\"\n      colorVariant={DrawerColorVariant.light200}\n      className=\"drawer-styling \"\n    >\n      <DrawerHead>\n        <span tabIndex={props.isExpanded ? 0 : -1} ref={drawerRef}>\n          {props.drawerpanelContent}\n        </span>\n        <DrawerActions>\n          <DrawerCloseButton onClick={onCloseClick} />\n        </DrawerActions>\n      </DrawerHead>\n    </DrawerPanelContent>\n  );\n\n  return (\n    <>\n      <Drawer\n        isExpanded={props.isExpanded}\n        onExpand={onExpand}\n        position=\"right\"\n      >\n        <DrawerContent\n          colorVariant={DrawerColorVariant.default}\n          panelContent={panelContent}\n        ></DrawerContent>\n      </Drawer>\n    </>\n  );\n}\n\ninterface ToggleDrawerProps {\n  isExpanded: boolean;\n  setIsExpanded: (boolean) => void;\n  drawerpanelContent: JSX.Element;\n}\n","import {atom} from 'recoil';\nimport {SearchState} from '../components/toolbar/SearchTypes';\n\nexport const selectedTeamsState = atom({\n  key: 'selectedTeamsState',\n  default: [],\n});\n\nexport const searchTeamState = atom<SearchState>({\n  key: 'searchTeamState',\n  default: {\n    query: '',\n    field: 'name',\n  },\n});\n","import React from 'react';\nimport {\n  SearchInput,\n  ToolbarItem,\n  Dropdown,\n  DropdownToggle,\n} from '@patternfly/react-core';\nimport {SearchState} from './SearchTypes';\nimport {SetterOrUpdater} from 'recoil';\n\nexport function FilterWithDropdown(props: FilterWithDropdownProps) {\n  const setSearchState = (val: string) => {\n    props.onChange((prev: SearchState) => ({...prev, query: val.trim()}));\n  };\n  const [isOpen, setIsOpen] = React.useState(false);\n\n  const onSelect = () => {\n    setIsOpen(false);\n  };\n\n  return (\n    <ToolbarItem variant=\"search-filter\">\n      <Dropdown\n        onSelect={onSelect}\n        toggle={\n          <DropdownToggle\n            splitButtonItems={[\n              <SearchInput\n                key=\"filter-with-dropdown\"\n                placeholder={props.searchInputText}\n                value={props.searchState.query}\n                onChange={setSearchState}\n                onClear={() => setSearchState('')}\n                className=\"no-padding\"\n              />,\n            ]}\n            onToggle={(isOpen: boolean) => setIsOpen(isOpen)}\n            id=\"toggle-split-button\"\n          />\n        }\n        isOpen={isOpen}\n        dropdownItems={props.dropdownItems}\n      />\n    </ToolbarItem>\n  );\n}\n\ninterface FilterWithDropdownProps {\n  searchState: SearchState;\n  onChange: SetterOrUpdater<SearchState>;\n  dropdownItems: any[];\n  searchInputText: string;\n}\n","import {\n  TableComposable,\n  Tbody,\n  Td,\n  Th,\n  Thead,\n  Tr,\n} from '@patternfly/react-table';\nimport {\n  PageSection,\n  PanelFooter,\n  ToggleGroup,\n  ToggleGroupItem,\n  ToggleGroupItemProps,\n  Toolbar,\n  ToolbarContent,\n  ToolbarItem,\n} from '@patternfly/react-core';\nimport {ToolbarPagination} from 'src/components/toolbar/ToolbarPagination';\nimport {useRecoilState} from 'recoil';\nimport {searchTeamState} from 'src/atoms/TeamState';\nimport React, {useEffect, useState} from 'react';\nimport {DropdownCheckbox} from 'src/components/toolbar/DropdownCheckbox';\nimport {FilterWithDropdown} from 'src/components/toolbar/FilterWithDropdown';\nimport {formatDate} from 'src/libs/utils';\nimport {FilterInput} from 'src/components/toolbar/FilterInput';\n\nconst ColumnNames = {\n  name: 'Team',\n  role: 'Role',\n  members: 'Members',\n  lastUpdated: 'Last Updated',\n};\n\ntype TableModeType = 'All' | 'Selected';\n\nexport default function TeamView(props: TeamViewProps) {\n  const [tableMode, setTableMode] = useState<TableModeType>('All');\n  const [page, setPage] = useState(1);\n  const [perPage, setPerPage] = useState(10);\n  const [tableItems, setTableItems] = useState([]);\n  const [search, setSearch] = useRecoilState(searchTeamState);\n  const [searchInputText, setSearchInputText] = useState('Search, create team');\n\n  useEffect(() => {\n    if (tableMode == 'All') {\n      setTableItems(props.items);\n    } else if (tableMode == 'Selected') {\n      setTableItems(props.selectedTeams);\n    }\n    if (props.searchInputText) {\n      setSearchInputText(props.searchInputText);\n    }\n  });\n\n  const filteredItems =\n    search.query !== ''\n      ? tableItems?.filter((item) => {\n          const Itemname = item.name;\n          return Itemname.includes(search.query);\n        })\n      : tableItems;\n\n  const paginatedItems = filteredItems?.slice(\n    page * perPage - perPage,\n    page * perPage - perPage + perPage,\n  );\n\n  const onTableModeChange: ToggleGroupItemProps['onChange'] = (\n    _isSelected,\n    event,\n  ) => {\n    const id = event.currentTarget.id;\n    setTableMode(id as TableModeType);\n  };\n\n  const setItemSelected = (item, isSelecting = true) => {\n    props.setSelectedTeams((prevSelected) => {\n      const otherSelectedItems = prevSelected.filter(\n        (r) => r.name !== item.name,\n      );\n      return isSelecting ? [...otherSelectedItems, item] : otherSelectedItems;\n    });\n  };\n\n  // Logic for handling row-wise checkbox selection in <Td>\n  const isItemSelected = (item) => props.selectedTeams?.includes(item);\n\n  const onSelectItem = (item, rowIndex: number, isSelecting: boolean) => {\n    setItemSelected(item, isSelecting);\n  };\n\n  return (\n    <PageSection>\n      <Toolbar>\n        <ToolbarContent>\n          {props.showCheckbox ? (\n            <DropdownCheckbox\n              selectedItems={props.selectedTeams}\n              deSelectAll={props.setSelectedTeams}\n              allItemsList={props.items}\n              itemsPerPageList={paginatedItems}\n              onItemSelect={onSelectItem}\n            />\n          ) : null}\n          {props.filterWithDropdown ? (\n            <FilterWithDropdown\n              searchState={search}\n              onChange={setSearch}\n              dropdownItems={props.dropdownItems}\n              searchInputText={searchInputText}\n            />\n          ) : (\n            <FilterInput searchState={search} onChange={setSearch} />\n          )}\n          {props.showCheckbox ? (\n            <ToolbarItem>\n              <ToggleGroup aria-label=\"Default with single selectable\">\n                <ToggleGroupItem\n                  text=\"All\"\n                  buttonId=\"All\"\n                  isSelected={tableMode === 'All'}\n                  onChange={onTableModeChange}\n                />\n                <ToggleGroupItem\n                  text=\"Selected\"\n                  buttonId=\"Selected\"\n                  isSelected={tableMode === 'Selected'}\n                  onChange={onTableModeChange}\n                />\n              </ToggleGroup>\n            </ToolbarItem>\n          ) : null}\n          <ToolbarPagination\n            itemsList={filteredItems}\n            perPage={perPage}\n            page={page}\n            setPage={setPage}\n            setPerPage={setPerPage}\n            total={filteredItems.length}\n          />\n        </ToolbarContent>\n      </Toolbar>\n      <TableComposable aria-label=\"Selectable table\">\n        <Thead>\n          <Tr>\n            {props.showCheckbox ? <Th /> : null}\n            <Th>{ColumnNames.name}</Th>\n            <Th>{ColumnNames.role}</Th>\n            <Th>{ColumnNames.members}</Th>\n            <Th>{ColumnNames.lastUpdated}</Th>\n          </Tr>\n        </Thead>\n        {paginatedItems.map((team, rowIndex) => {\n          return (\n            <Tbody key={team.name}>\n              <Tr>\n                {props.showCheckbox ? (\n                  <Td\n                    select={{\n                      rowIndex,\n                      onSelect: (_event, isSelecting) =>\n                        onSelectItem(team, rowIndex, isSelecting),\n                      isSelected: isItemSelected(team),\n                    }}\n                  />\n                ) : null}\n                <Td dataLabel={ColumnNames.name}>{team.name}</Td>\n                <Td dataLabel={ColumnNames.role}>{team.role}</Td>\n                <Td dataLabel={ColumnNames.members}>\n                  {team.member_count > 1\n                    ? team.member_count + ' Members'\n                    : team.member_count + ' Member'}\n                </Td>\n                <Td dataLabel={ColumnNames.lastUpdated}>\n                  {team.last_updated ? formatDate(team.last_updated) : 'Never'}\n                </Td>\n              </Tr>\n            </Tbody>\n          );\n        })}\n      </TableComposable>\n      <PanelFooter>\n        <ToolbarPagination\n          itemsList={filteredItems}\n          perPage={perPage}\n          page={page}\n          setPage={setPage}\n          setPerPage={setPerPage}\n          bottom={true}\n          total={filteredItems.length}\n        />\n      </PanelFooter>\n    </PageSection>\n  );\n}\n\ninterface TeamViewProps {\n  items: any[];\n  selectedTeams?: any[];\n  setSelectedTeams?: (teams) => void;\n  dropdownItems?: any[];\n  showCheckbox: boolean;\n  showToggleGroup: boolean;\n  searchInputText?: string;\n  filterWithDropdown: boolean;\n}\n","import {\n  TableComposable,\n  Tbody,\n  Td,\n  Th,\n  Thead,\n  Tr,\n} from '@patternfly/react-table';\nimport {\n  PageSection,\n  PanelFooter,\n  ToggleGroup,\n  ToggleGroupItem,\n  ToggleGroupItemProps,\n  Toolbar,\n  ToolbarContent,\n  ToolbarItem,\n  DropdownItem,\n  Button,\n  Text,\n  TextVariants,\n  TextContent,\n} from '@patternfly/react-core';\nimport React, {useEffect, useState} from 'react';\nimport {DesktopIcon} from '@patternfly/react-icons';\nimport ToggleDrawer from 'src/components/ToggleDrawer';\nimport NameAndDescription from 'src/components/modals/robotAccountWizard/NameAndDescription';\nimport {useTeams} from 'src/hooks/useTeams';\nimport {addDisplayError} from 'src/resources/ErrorHandling';\nimport TeamView from './TeamView';\n\nexport default function AddToTeam(props: AddToTeamProps) {\n  const [newTeamName, setNewTeamName] = useState('');\n  const [newTeamDescription, setNewTeamDescription] = useState('');\n  const [err, setErr] = useState<string>();\n\n  const {createNewTeamHook} = useTeams(props.namespace);\n\n  const createNewTeam = () => {\n    props.setDrawerExpanded(true);\n  };\n\n  const dropdownItems = [\n    <DropdownItem\n      key=\"separated action\"\n      component=\"button\"\n      icon={<DesktopIcon />}\n      onClick={createNewTeam}\n    >\n      Create new team\n    </DropdownItem>,\n  ];\n\n  const validateTeamName = () => {\n    return /^[a-z][a-z0-9_]{1,254}$/.test(newTeamName);\n  };\n\n  const onCreateNewTeam = async () => {\n    try {\n      await createNewTeamHook({\n        namespace: props.namespace,\n        name: newTeamName,\n        description: newTeamDescription,\n      }).then(function () {\n        setNewTeamName('');\n        setNewTeamDescription('');\n        props.setDrawerExpanded(false);\n      });\n    } catch (error) {\n      console.error(error);\n      setErr(addDisplayError('Unable to create team', error));\n    }\n  };\n\n  const DrawerPanelContent = (\n    <>\n      <NameAndDescription\n        name={newTeamName}\n        setName={setNewTeamName}\n        description={newTeamDescription}\n        setDescription={setNewTeamDescription}\n        nameLabel=\"Provide a name for your new team account:\"\n        descriptionLabel=\"Provide an optional description for your new team account:\"\n        helperText=\"Enter a description to provide extra information to your teammates about this new team account. Max length: 255\"\n        nameHelperText=\"Choose a name to inform your teammates about this new account. Must match ^[a-z][a-z0-9_]{1,254}$.\"\n        validateName={validateTeamName}\n      />\n      <div className=\"drawer-footer\">\n        <Button\n          variant=\"primary\"\n          onClick={onCreateNewTeam}\n          isDisabled={!validateTeamName()}\n        >\n          Add team account\n        </Button>\n        <Button variant=\"link\" onClick={() => props.setDrawerExpanded(false)}>\n          Cancel\n        </Button>\n      </div>\n    </>\n  );\n\n  if (props.isDrawerExpanded) {\n    return (\n      <ToggleDrawer\n        isExpanded={props.isDrawerExpanded}\n        setIsExpanded={props.setDrawerExpanded}\n        drawerpanelContent={DrawerPanelContent}\n      />\n    );\n  }\n\n  return (\n    <>\n      <TextContent>\n        <Text component={TextVariants.h1}>Add to team (optional)</Text>\n      </TextContent>\n      <TeamView\n        items={props.items}\n        selectedTeams={props.selectedTeams}\n        setSelectedTeams={props.setSelectedTeams}\n        showCheckbox={true}\n        dropdownItems={dropdownItems}\n        showToggleGroup={true}\n        filterWithDropdown={true}\n      />\n    </>\n  );\n}\n\ninterface AddToTeamProps {\n  items: any[];\n  namespace: string;\n  isDrawerExpanded: boolean;\n  setDrawerExpanded?: (boolean) => void;\n  selectedTeams?: any[];\n  setSelectedTeams?: (teams) => void;\n}\n","import {useMutation, useQuery, useQueryClient} from '@tanstack/react-query';\nimport {createNewTeamForNamespac} from 'src/resources/TeamResources';\nimport {useState} from 'react';\n\nexport function useTeams(ns) {\n  const [namespace, setNamespace] = useState(ns);\n  const queryClient = useQueryClient();\n\n  const createTeamMutator = useMutation(\n    async ({namespace, name, description}: createNewTeamForNamespaceParams) => {\n      return createNewTeamForNamespac(namespace, name, description);\n    },\n    {\n      onSuccess: () => {\n        queryClient.invalidateQueries(['organization', namespace, 'teams']);\n      },\n    },\n  );\n\n  return {\n    createNewTeamHook: async (params: createNewTeamForNamespaceParams) =>\n      createTeamMutator.mutate(params),\n  };\n}\n\ninterface createNewTeamForNamespaceParams {\n  namespace: string;\n  name: string;\n  description: string;\n}\n","import {useEffect, useState} from 'react';\nimport {Dropdown, DropdownItem, DropdownToggle} from '@patternfly/react-core';\nimport * as React from 'react';\n\nconst defaultSelectedVal = 'Read';\nconst defaultUnSelectedVal = 'None';\n\nexport function DropdownWithDescription(props: DropdownWithDescriptionProps) {\n  const [isOpen, setIsOpen] = useState(false);\n  const [dropdownToggle, setDropdownToggle] = useState('');\n\n  const dropdownOnSelect = (name, userEntry) => {\n    if (!props.wizarStep) {\n      props.setUserEntry(userEntry);\n      if (name == defaultUnSelectedVal) {\n        props.OnRowSelect(props.repo, props?.rowIndex, false);\n      } else if (name != defaultUnSelectedVal && !props?.isItemSelected) {\n        props.OnRowSelect(props.repo, props?.rowIndex, true);\n      }\n    }\n    setDropdownToggle(name);\n    props.onSelect(name, props?.repo);\n    setIsOpen(false);\n  };\n\n  useEffect(() => {\n    if (props.wizarStep) {\n      if (props.selectedVal) {\n        dropdownOnSelect(props.selectedVal, true);\n      }\n      return;\n    }\n    if (\n      props?.isItemSelected &&\n      (!props.selectedVal || props.selectedVal == 'None')\n    ) {\n      dropdownOnSelect(defaultSelectedVal, props?.isUserEntry || false);\n    } else if (!props?.isItemSelected) {\n      dropdownOnSelect(defaultUnSelectedVal, props?.isUserEntry || false);\n    }\n    if (props.selectedVal && props.selectedVal != dropdownToggle) {\n      dropdownOnSelect(props.selectedVal, props?.isUserEntry || false);\n    }\n  }, [props?.isItemSelected, props.selectedVal]);\n\n  return (\n    <Dropdown\n      onSelect={() => setIsOpen(false)}\n      toggle={\n        <DropdownToggle\n          id=\"toggle-descriptions\"\n          onToggle={(isOpen) => setIsOpen(isOpen)}\n        >\n          {dropdownToggle}\n        </DropdownToggle>\n      }\n      isOpen={isOpen}\n      dropdownItems={props.dropdownItems.map((item) => (\n        <DropdownItem\n          key={item.name}\n          description={item.description}\n          onClick={() => dropdownOnSelect(item.name, true)}\n        >\n          {item.name}\n        </DropdownItem>\n      ))}\n    />\n  );\n}\n\ninterface DropdownWithDescriptionProps {\n  dropdownItems: any[];\n  onSelect: (item, repo) => void;\n  selectedVal: string;\n  wizarStep: boolean;\n  isItemSelected?: boolean;\n  OnRowSelect?: (item, rowIndex, isSelecting) => void;\n  repo?: Record<string, unknown>;\n  rowIndex?: number;\n  isUserEntry?: boolean;\n  setUserEntry?: (userEntry) => void;\n}\n","import {useRecoilState, useRecoilCallback} from 'recoil';\nimport {\n  searchRepoState,\n  selectedReposPermissionState,\n} from 'src/atoms/RepositoryState';\nimport React, {useEffect, useState} from 'react';\nimport {\n  PageSection,\n  PanelFooter,\n  Text,\n  TextContent,\n  TextVariants,\n  ToggleGroup,\n  ToggleGroupItem,\n  ToggleGroupItemProps,\n  Toolbar,\n  ToolbarContent,\n  ToolbarItem,\n} from '@patternfly/react-core';\nimport {DropdownCheckbox} from 'src/components/toolbar/DropdownCheckbox';\nimport {FilterInput} from 'src/components/toolbar/FilterInput';\nimport {ToolbarPagination} from 'src/components/toolbar/ToolbarPagination';\nimport {\n  TableComposable,\n  Tbody,\n  Td,\n  Th,\n  Thead,\n  Tr,\n} from '@patternfly/react-table';\nimport {DropdownWithDescription} from 'src/components/toolbar/DropdownWithDescription';\nimport {IRepository} from 'src/resources/RepositoryResource';\nimport {formatDate} from 'src/libs/utils';\nimport _ from 'lodash';\n\nconst ColumnNames = {\n  name: 'Repository',\n  permissions: 'Permissions',\n  lastUpdated: 'Last Updated',\n};\n\ntype TableModeType = 'All' | 'Selected';\n\nexport default function AddToRepository(props: AddToRepositoryProps) {\n  const [tableMode, setTableMode] = useState<TableModeType>('All');\n  const [page, setPage] = useState(1);\n  const [perPage, setPerPage] = useState(10);\n  const [tableItems, setTableItems] = useState([]);\n  const [search, setSearch] = useRecoilState(searchRepoState);\n  const [robotRepoPermsMapping, setRobotRepoPermsMapping] = useState({});\n  const [isUserEntry, setUserEntry] = useState(false);\n  const [updatedRepoPerms, setUpdatedRepoPerms] = useState({});\n\n  props.repos.sort((r1, r2) => {\n    return r1.last_modified > r2.last_modified ? -1 : 1;\n  });\n\n  const onTableModeChange: ToggleGroupItemProps['onChange'] = (\n    _isSelected,\n    event,\n  ) => {\n    const id = event.currentTarget.id;\n    setTableMode(id as TableModeType);\n    if (id == 'All') {\n      setTableItems(props.repos);\n    } else if (id == 'Selected') {\n      const selectedItems = [];\n      props.repos.map(function (repo) {\n        if (props.selectedRepos.includes(repo.name)) {\n          selectedItems.push(repo);\n        }\n      });\n      setTableItems(selectedItems);\n    }\n  };\n\n  const setItemSelected = (item, isSelecting = true) => {\n    props.setSelectedRepos((prevSelected) => {\n      const otherSelectedItems = prevSelected.filter((r) => r !== item.name);\n      return isSelecting\n        ? [...otherSelectedItems, item.name]\n        : otherSelectedItems;\n    });\n  };\n\n  const isItemSelected = (item) => props.selectedRepos.includes(item.name);\n\n  const onSelectItem = (item, rowIndex: number, isSelecting: boolean) => {\n    setItemSelected(item, isSelecting);\n  };\n\n  useEffect(() => {\n    if (tableMode == 'All') {\n      setTableItems(props.repos);\n    }\n    updateTable();\n  }, [props.robotPermissions]);\n\n  const updateTable = () => {\n    if (!props.robotPermissions) {\n      return;\n    }\n    const temp = {};\n    props.robotPermissions?.map(function (repoPerm) {\n      const repo = repoPerm.repository.name;\n      const permission =\n        repoPerm.role.charAt(0).toUpperCase() + repoPerm.role.slice(1);\n      const newItems = {\n        ...temp,\n        [repo]: permission,\n      };\n      setItemSelected({name: repo}, true);\n      setRobotRepoPermsMapping(newItems);\n      setUpdatedRepoPerms(Object.assign({}, newItems));\n      temp[repo] = permission;\n    });\n  };\n\n  const filteredItems =\n    search.query !== ''\n      ? tableItems.filter((item) => {\n          const Itemname = item.name;\n          return Itemname.includes(search.query);\n        })\n      : tableItems;\n\n  const paginatedItems = filteredItems?.slice(\n    page * perPage - perPage,\n    page * perPage - perPage + perPage,\n  );\n\n  const updateRepoPerms = (permission, repo) => {\n    if (props.wizardStep) {\n      props.setSelectedRepoPerms(\n        props.selectedRepoPerms.filter((item) => item.name !== repo.name),\n      );\n      if (permission == 'None') {\n        return;\n      }\n\n      props.setSelectedRepoPerms((prevSelected) => {\n        const newPerms = {\n          name: repo.name,\n          permission: permission,\n          last_modified: repo?.last_modified,\n        };\n        return [...prevSelected, newPerms];\n      });\n    } else {\n      const tempItem = updatedRepoPerms;\n      delete tempItem[repo.name];\n      setUpdatedRepoPerms(tempItem);\n      if (permission == 'None') {\n        return;\n      }\n      tempItem[repo.name] = permission;\n      setUpdatedRepoPerms(tempItem);\n      updateRobotAccountsList();\n    }\n  };\n\n  const fetchRepoPermission = (repo) => {\n    if (!props.wizardStep && updatedRepoPerms[repo.name] != null) {\n      return updatedRepoPerms[repo.name];\n    }\n\n    for (const repoPerm of props.selectedRepoPerms) {\n      if (repoPerm.name == repo.name) {\n        return repoPerm.permission;\n      }\n    }\n    return 'None';\n  };\n\n  const updateRobotAccountsList = () => {\n    if (\n      !props.wizardStep &&\n      !_.isEqual(updatedRepoPerms, robotRepoPermsMapping)\n    ) {\n      setTimeout(() => props.setShowRepoModalSave(true), 0);\n      setTimeout(() => props.setPrevRepoPerms(robotRepoPermsMapping), 0);\n      setTimeout(() => props.setNewRepoPerms(updatedRepoPerms), 0);\n    }\n\n    if (\n      !props.wizardStep &&\n      _.isEqual(updatedRepoPerms, robotRepoPermsMapping)\n    ) {\n      setTimeout(() => props.setShowRepoModalSave(false), 0);\n    }\n  };\n\n  updateRobotAccountsList();\n\n  return (\n    <>\n      <TextContent>\n        <Text component={TextVariants.h1}>Add to repository (optional)</Text>\n      </TextContent>\n      <PageSection>\n        <Toolbar>\n          <ToolbarContent>\n            <DropdownCheckbox\n              selectedItems={props.selectedRepos}\n              deSelectAll={props.setSelectedRepos}\n              allItemsList={props.repos}\n              itemsPerPageList={paginatedItems}\n              onItemSelect={onSelectItem}\n            />\n            <FilterInput searchState={search} onChange={setSearch} />\n            <ToolbarItem>\n              <ToggleGroup aria-label=\"Default with single selectable\">\n                <ToggleGroupItem\n                  text=\"All\"\n                  buttonId=\"All\"\n                  isSelected={tableMode === 'All'}\n                  onChange={onTableModeChange}\n                />\n                <ToggleGroupItem\n                  text=\"Selected\"\n                  buttonId=\"Selected\"\n                  isSelected={tableMode === 'Selected'}\n                  onChange={onTableModeChange}\n                />\n              </ToggleGroup>\n            </ToolbarItem>\n            <ToolbarPagination\n              itemsList={filteredItems}\n              perPage={perPage}\n              page={page}\n              setPage={setPage}\n              setPerPage={setPerPage}\n              total={filteredItems.length}\n            />\n          </ToolbarContent>\n        </Toolbar>\n        <TableComposable aria-label=\"Selectable table\">\n          <Thead>\n            <Tr>\n              <Th />\n              <Th>{ColumnNames.name}</Th>\n              <Th>{ColumnNames.permissions}</Th>\n              <Th>{ColumnNames.lastUpdated}</Th>\n            </Tr>\n          </Thead>\n          {paginatedItems.map((repo, rowIndex) => {\n            return (\n              <Tbody key={rowIndex}>\n                <Tr>\n                  <Td\n                    select={{\n                      rowIndex,\n                      onSelect: (_event, isSelecting) =>\n                        onSelectItem(repo, rowIndex, isSelecting),\n                      isSelected: isItemSelected(repo),\n                    }}\n                  />\n                  <Td dataLabel={ColumnNames.name}>{repo.name}</Td>\n                  <Td dataLabel={ColumnNames.permissions}>\n                    <DropdownWithDescription\n                      dropdownItems={props.dropdownItems}\n                      selectedVal={fetchRepoPermission(repo)}\n                      onSelect={updateRepoPerms}\n                      repo={repo}\n                      isItemSelected={isItemSelected(repo)}\n                      OnRowSelect={onSelectItem}\n                      rowIndex={rowIndex}\n                      setUserEntry={setUserEntry}\n                      isUserEntry={isUserEntry}\n                      wizarStep={false}\n                    />\n                  </Td>\n                  <Td dataLabel={ColumnNames.lastUpdated}>\n                    {repo.last_modified\n                      ? formatDate(repo.last_modified)\n                      : 'Never'}\n                  </Td>\n                </Tr>\n              </Tbody>\n            );\n          })}\n        </TableComposable>\n        <PanelFooter>\n          <ToolbarPagination\n            itemsList={filteredItems}\n            perPage={perPage}\n            page={page}\n            setPage={setPage}\n            setPerPage={setPerPage}\n            bottom={true}\n            total={filteredItems.length}\n          />\n        </PanelFooter>\n      </PageSection>\n    </>\n  );\n}\n\ninterface AddToRepositoryProps {\n  namespace: string;\n  dropdownItems: any[];\n  selectedRepos?: any[];\n  repos: IRepository[];\n  setSelectedRepos: (repos) => void;\n  selectedRepoPerms: any[];\n  setSelectedRepoPerms: (repoPerm) => void;\n  robotPermissions?: any[];\n  wizardStep: boolean;\n  robotName?: string;\n  fetchingRobotPerms?: boolean;\n  setPrevRepoPerms?: (preVal) => void;\n  setNewRepoPerms?: (newVal) => void;\n  setShowRepoModalSave?: (boolean) => void;\n}\n","import {\n  TextContent,\n  Text,\n  TextVariants,\n  TextInput,\n  FormGroup,\n  Form,\n} from '@patternfly/react-core';\nimport React from 'react';\nimport {DropdownWithDescription} from 'src/components/toolbar/DropdownWithDescription';\n\nexport default function DefaultPermissions(props: DefaultPermissionsProps) {\n  const updateDefaultPermission = (permission, repo) => {\n    props.setRobotdefaultPerm(permission);\n  };\n\n  return (\n    <>\n      <TextContent>\n        <Text component={TextVariants.h1}>Default permissions (Optional)</Text>\n        <Text component={TextVariants.p}>\n          The Default permissions panel defines permissions that should be\n          granted automatically to a repository when it is created, in addition\n          to the default of the repository&apos;s creator.\n          <br />\n          Permissions are assigned based on the user who created the repository.\n        </Text>\n        <Text component={TextVariants.p}>\n          Note: Permissions added here do not automatically get added to\n          existing repositories.\n        </Text>\n\n        <Form>\n          <FormGroup\n            label=\"Applied To\"\n            fieldId=\"robot-name\"\n            isRequired\n            disabled\n            className=\"fit-content\"\n          >\n            <TextInput\n              value={props.robotName}\n              type=\"text\"\n              aria-label=\"robot-name-value\"\n              isDisabled\n            />\n          </FormGroup>\n          <FormGroup label=\"Permission\" fieldId=\"robot-permission\" isRequired />\n        </Form>\n      </TextContent>\n      <DropdownWithDescription\n        dropdownItems={props.repoPermissions}\n        onSelect={updateDefaultPermission}\n        selectedVal={props.robotDefaultPerm || 'None'}\n        wizarStep={true}\n      />\n    </>\n  );\n}\n\ninterface DefaultPermissionsProps {\n  robotName: string;\n  repoPermissions: any[];\n  robotDefaultPerm: string;\n  setRobotdefaultPerm: (perm) => void;\n}\n","import {\n  TextContent,\n  Text,\n  TextVariants,\n  TextInput,\n  FormGroup,\n  Form,\n  Dropdown,\n  DropdownToggle,\n  ToggleGroup,\n  ToggleGroupItem,\n  ToggleGroupItemProps,\n} from '@patternfly/react-core';\nimport {TableComposable, Tbody, Td, Tr} from '@patternfly/react-table';\nimport React, {useState} from 'react';\n\ntype TableModeType = 'Teams' | 'Repositories' | 'Default-permissions';\n\nconst TeamColumnNames = {\n  name: 'Team',\n  role: 'Role',\n  members: 'Members',\n  lastUpdated: 'Last Updated',\n};\n\nconst RepoColumnNames = {\n  name: 'Repository',\n  permissions: 'Permissions',\n  lastUpdated: 'Last Updated',\n};\n\nexport default function ReviewAndFinish(props: ReviewAndFinishProps) {\n  const [tableMode, setTableMode] = useState<TableModeType>('Teams');\n\n  const onTableModeChange: ToggleGroupItemProps['onChange'] = (\n    _isSelected,\n    event,\n  ) => {\n    const id = event.currentTarget.id;\n    setTableMode(id as TableModeType);\n  };\n\n  const fetchTableItems = () => {\n    if (tableMode == 'Teams') {\n      return fetchSelectedTeams();\n    } else if (tableMode == 'Repositories') {\n      return fetchSelectedRepos();\n    } else if (tableMode == 'Default-permissions') {\n      return fetchDefaultPerms();\n    }\n  };\n\n  const fetchSelectedTeams = () => {\n    return (\n      <TableComposable aria-label=\"Selectable table\">\n        <Tbody>\n          {props.selectedTeams.map((team, rowIndex) => (\n            <Tr key={team.name}>\n              <Td\n                select={{\n                  rowIndex,\n                  isSelected: true,\n                  disable: true,\n                }}\n              />\n              <Td dataLabel={TeamColumnNames.name}>{team.name}</Td>\n              <Td dataLabel={TeamColumnNames.role}>{team.role}</Td>\n              <Td dataLabel={TeamColumnNames.members}>\n                {team.member_count > 1\n                  ? team.member_count + ' Members'\n                  : team.member_count + ' Member'}\n              </Td>\n              <Td dataLabel={TeamColumnNames.lastUpdated}>\n                {team.last_updated ? team.last_updated : 'Never'}\n              </Td>\n            </Tr>\n          ))}\n        </Tbody>\n      </TableComposable>\n    );\n  };\n\n  const fetchSelectedRepos = () => {\n    return (\n      <TableComposable aria-label=\"Selectable table\">\n        <Tbody>\n          {props.selectedRepos.map((repo, rowIndex) => (\n            <Tr key={repo.name}>\n              <Td\n                select={{\n                  rowIndex,\n                  isSelected: true,\n                  disable: true,\n                }}\n              />\n              <Td dataLabel={RepoColumnNames.name}>{repo.name}</Td>\n              <Td dataLabel={RepoColumnNames.permissions}>\n                <Dropdown\n                  toggle={\n                    <DropdownToggle id=\"toggle-disabled\" isDisabled>\n                      {repo.permission}\n                    </DropdownToggle>\n                  }\n                />\n              </Td>\n              <Td dataLabel={RepoColumnNames.lastUpdated}>\n                {repo.last_modified ? repo.last_modified : 'Never'}\n              </Td>\n            </Tr>\n          ))}\n        </Tbody>\n      </TableComposable>\n    );\n  };\n\n  const fetchDefaultPerms = () => {\n    if (props.robotdefaultPerm == 'None') {\n      return;\n    }\n    return (\n      <>\n        <Form>\n          <FormGroup\n            label=\"Applied To\"\n            fieldId=\"robot-name\"\n            isRequired\n            disabled\n            className=\"fit-content\"\n          >\n            <TextInput\n              value={props.robotName}\n              type=\"text\"\n              aria-label=\"robot-name-value\"\n              isDisabled\n            />\n          </FormGroup>\n          <FormGroup label=\"Permission\" fieldId=\"robot-permission\" isRequired />\n          <Dropdown\n            toggle={\n              <DropdownToggle id=\"toggle-disabled\" isDisabled>\n                {props.robotdefaultPerm}\n              </DropdownToggle>\n            }\n          />\n        </Form>\n      </>\n    );\n  };\n\n  return (\n    <>\n      <TextContent>\n        <Text component={TextVariants.h1}>Review and finish</Text>\n      </TextContent>\n      <Form>\n        <FormGroup\n          label=\"Provide a name for your robot account:\"\n          fieldId=\"robot-name\"\n          isRequired\n          disabled\n        >\n          <TextInput\n            value={props.robotName}\n            type=\"text\"\n            aria-label=\"robot-name-value\"\n            isDisabled\n            className=\"fit-content\"\n          />\n        </FormGroup>\n        <FormGroup\n          label=\"Provide an optional description for your robot account:\"\n          fieldId=\"robot-description\"\n          isRequired\n          disabled\n          className=\"fit-content\"\n        >\n          <TextInput\n            value={props.robotDescription}\n            type=\"text\"\n            aria-label=\"robot-description\"\n            isDisabled\n          />\n        </FormGroup>\n\n        <ToggleGroup aria-label=\"Default with single selectable\">\n          <ToggleGroupItem\n            text=\"Teams\"\n            buttonId=\"Teams\"\n            isSelected={tableMode === 'Teams'}\n            onChange={onTableModeChange}\n          />\n          <ToggleGroupItem\n            text=\"Repositories\"\n            buttonId=\"Repositories\"\n            isSelected={tableMode === 'Repositories'}\n            onChange={onTableModeChange}\n          />\n          <ToggleGroupItem\n            text=\"Default permissions\"\n            buttonId=\"Default-permissions\"\n            isSelected={tableMode === 'Default-permissions'}\n            onChange={onTableModeChange}\n          />\n        </ToggleGroup>\n      </Form>\n      {fetchTableItems()}\n    </>\n  );\n}\n\ninterface ReviewAndFinishProps {\n  robotName: string;\n  robotDescription: string;\n  selectedTeams: any[];\n  selectedRepos: any[];\n  robotdefaultPerm: string;\n}\n","import {\n  Modal,\n  ModalVariant,\n  Text,\n  TextContent,\n  TextVariants,\n  Wizard,\n} from '@patternfly/react-core';\nimport React, {useState} from 'react';\nimport NameAndDescription from './robotAccountWizard/NameAndDescription';\nimport {useRobotAccounts} from 'src/hooks/useRobotAccounts';\n\nimport Footer from './robotAccountWizard/Footer';\nimport AddToTeam from './robotAccountWizard/AddToTeam';\nimport AddToRepository from './robotAccountWizard/AddToRepository';\nimport {addDisplayError} from 'src/resources/ErrorHandling';\nimport DefaultPermissions from './robotAccountWizard/DefaultPermissions';\nimport ReviewAndFinish from './robotAccountWizard/ReviewAndFinish';\nimport {useRecoilState} from 'recoil';\nimport {selectedTeamsState} from 'src/atoms/TeamState';\nimport {\n  selectedRobotDefaultPermission,\n  selectedRobotReposState,\n  selectedRobotReposPermissionState,\n} from 'src/atoms/RobotAccountState';\nimport {useRepositories} from 'src/hooks/UseRepositories';\n\nexport default function CreateRobotAccountModal(\n  props: CreateRobotAccountModalProps,\n) {\n  if (!props.isModalOpen) {\n    return null;\n  }\n\n  // Fetching repos\n  const {repos: repos, totalResults: repoCount} = useRepositories(\n    props.namespace,\n  );\n\n  const [robotName, setRobotName] = useState('');\n  const [robotDescription, setrobotDescription] = useState('');\n  const [err, setErr] = useState<string>();\n  const [selectedRepoPerms, setSelectedRepoPerms] = useRecoilState(\n    selectedRobotReposPermissionState,\n  );\n  const [selectedTeams, setSelectedTeams] = useRecoilState(selectedTeamsState);\n  const [selectedRepos, setSelectedRepos] = useRecoilState(\n    selectedRobotReposState,\n  );\n  const [robotDefaultPerm, setRobotdefaultPerm] = useRecoilState(\n    selectedRobotDefaultPermission,\n  );\n  const [isDrawerExpanded, setDrawerExpanded] = useState(false);\n  const [loading, setLoading] = useState<boolean>(true);\n\n  const {createNewRobot} = useRobotAccounts({\n    name: props.namespace,\n    onSuccess: () => {\n      setLoading(false);\n    },\n    onError: (err) => {\n      setErr(addDisplayError('Unable to create robot', err));\n    },\n  });\n\n  const onSubmit = async () => {\n    try {\n      const reposToUpdate = filteredRepos();\n      await createNewRobot({\n        namespace: props.namespace,\n        robotname: robotName,\n        description: robotDescription,\n        isUser: false,\n        reposToUpdate: reposToUpdate,\n        selectedTeams: selectedTeams,\n        robotDefaultPerm: robotDefaultPerm,\n      });\n      if (!loading) {\n        props.handleModalToggle();\n      }\n    } catch (error) {\n      console.error(error);\n      setErr(addDisplayError('Unable to create robot', error));\n    }\n  };\n\n  // addDefaultPermsForRobotMutator\n  const validateRobotName = () => {\n    return /^[a-z][a-z0-9_]{1,254}$/.test(robotName);\n  };\n\n  const filteredRepos = () => {\n    return selectedRepoPerms.filter((repo) =>\n      selectedRepos.includes(repo.name),\n    );\n  };\n\n  const steps = [\n    {\n      name: 'Robot name and description',\n      component: (\n        <>\n          <TextContent>\n            <Text component={TextVariants.h1}>\n              Provide robot account name and description\n            </Text>\n          </TextContent>\n          <NameAndDescription\n            name={robotName}\n            setName={setRobotName}\n            description={robotDescription}\n            setDescription={setrobotDescription}\n            nameLabel=\"Provide a name for your robot account:\"\n            descriptionLabel=\"Provide an optional description for your new robot:\"\n            helperText=\"Enter a description to provide extra information to your teammates about this robot account. Max length: 255\"\n            nameHelperText=\"Choose a name to inform your teammates about this robot account. Must match ^[a-z][a-z0-9_]{1,254}$.\"\n            validateName={validateRobotName}\n          />\n        </>\n      ),\n    },\n    {\n      name: 'Add to team (optional)',\n      component: (\n        <AddToTeam\n          items={props.teams}\n          namespace={props.namespace}\n          isDrawerExpanded={isDrawerExpanded}\n          setDrawerExpanded={setDrawerExpanded}\n          selectedTeams={selectedTeams}\n          setSelectedTeams={setSelectedTeams}\n        />\n      ),\n    },\n    {\n      name: 'Add to repository (optional)',\n      component: (\n        <AddToRepository\n          namespace={props.namespace}\n          dropdownItems={props.RepoPermissionDropdownItems}\n          repos={repos}\n          selectedRepos={selectedRepos}\n          setSelectedRepos={setSelectedRepos}\n          selectedRepoPerms={selectedRepoPerms}\n          setSelectedRepoPerms={setSelectedRepoPerms}\n          wizardStep={true}\n        />\n      ),\n    },\n    {\n      name: 'Default permissions (optional)',\n      component: (\n        <DefaultPermissions\n          robotName={robotName}\n          repoPermissions={props.RepoPermissionDropdownItems}\n          robotDefaultPerm={robotDefaultPerm}\n          setRobotdefaultPerm={setRobotdefaultPerm}\n        />\n      ),\n    },\n    {\n      name: 'Review and Finish',\n      component: (\n        <ReviewAndFinish\n          robotName={robotName}\n          robotDescription={robotDescription}\n          selectedTeams={selectedTeams}\n          selectedRepos={filteredRepos()}\n          robotdefaultPerm={robotDefaultPerm}\n        />\n      ),\n    },\n  ];\n\n  return (\n    <Modal\n      id=\"create-robot-account-modal\"\n      aria-label=\"CreateRobotAccount\"\n      variant={ModalVariant.large}\n      isOpen={props.isModalOpen}\n      onClose={props.handleModalToggle}\n      showClose={false}\n      hasNoBodyWrapper\n    >\n      <Wizard\n        titleId=\"robot-account-wizard-label\"\n        descriptionId=\"robot-account-wizard-description\"\n        title=\"Create robot account (organization/namespace)\"\n        description=\"Robot Accounts are named tokens that can be granted permissions on multiple repositories under this organization.\"\n        steps={steps}\n        onClose={props.handleModalToggle}\n        height={600}\n        width={1170}\n        footer={\n          <Footer\n            onSubmit={onSubmit}\n            isDrawerExpanded={isDrawerExpanded}\n            isDataValid={validateRobotName}\n          />\n        }\n        hasNoBodyPadding={isDrawerExpanded ? true : false}\n      />\n    </Modal>\n  );\n}\n\ninterface CreateRobotAccountModalProps {\n  isModalOpen: boolean;\n  handleModalToggle?: () => void;\n  namespace: string;\n  teams: any[];\n  RepoPermissionDropdownItems: any[];\n}\n","import {\n  Dropdown,\n  DropdownItem,\n  KebabToggle,\n  DropdownPosition,\n} from '@patternfly/react-core';\nimport {IRobot} from 'src/resources/RobotsResource';\nimport {useState} from 'react';\n\nexport default function RobotAccountKebab(props: RobotAccountKebabProps) {\n  const [isOpen, setIsOpen] = useState<boolean>(false);\n\n  const onSelect = () => {\n    setIsOpen(false);\n    const element = document.getElementById(\n      `${props.robotAccount.name}-toggle-kebab`,\n    );\n    element.focus();\n  };\n\n  const onDelete = () => {\n    props.setSelectedRobotAccount([props.robotAccount.name]);\n    props.setDeleteModalOpen(true);\n  };\n\n  const onSetRepoPerms = () => {\n    props.onSetRepoPermsClick(props.robotAccount, props.robotAccountRepos);\n  };\n\n  return (\n    <>\n      <Dropdown\n        onSelect={onSelect}\n        toggle={\n          <KebabToggle\n            id={`${props.robotAccount.name}-toggle-kebab`}\n            onToggle={() => {\n              setIsOpen(!isOpen);\n            }}\n          />\n        }\n        isOpen={isOpen}\n        dropdownItems={[\n          <DropdownItem\n            key=\"delete\"\n            onClick={() => onDelete()}\n            className=\"red-color\"\n            id={`${props.robotAccount.name}-del-btn`}\n          >\n            {props.deleteKebabIsOpen ? props.deleteModal() : null}\n            Delete\n          </DropdownItem>,\n          <DropdownItem\n            key=\"set-repo-perms\"\n            onClick={() => onSetRepoPerms()}\n            id={`${props.robotAccount.name}-set-repo-perms-btn`}\n          >\n            {props.deleteKebabIsOpen ? props.deleteModal() : null}\n            Set repository permissions\n          </DropdownItem>,\n        ]}\n        isPlain\n        position={DropdownPosition.right}\n      />\n    </>\n  );\n}\n\ninterface RobotAccountKebabProps {\n  namespace: string;\n  robotAccount: IRobot;\n  setError: (err) => void;\n  deleteModal: () => object;\n  deleteKebabIsOpen: boolean;\n  setDeleteModalOpen: (open) => void;\n  setSelectedRobotAccount: (robotAccount) => void;\n  onSetRepoPermsClick: (robotAccount, repos) => void;\n  robotAccountRepos: any[];\n}\n","import {useMutation, useQueryClient} from '@tanstack/react-query';\nimport {bulkDeleteRobotAccounts} from 'src/resources/RobotsResource';\n\nexport function useDeleteRobotAccounts({namespace, onSuccess, onError}) {\n  const queryClient = useQueryClient();\n\n  const deleteRobotAccountsMutator = useMutation(\n    async (robotacounts: string[]) => {\n      await bulkDeleteRobotAccounts(namespace, robotacounts);\n    },\n    {\n      onSuccess: () => {\n        queryClient.invalidateQueries(['Namespace', namespace, 'robots']);\n        onSuccess();\n      },\n      onError: (err) => {\n        onError(err);\n      },\n    },\n  );\n\n  return {\n    // Mutations\n    deleteRobotAccounts: async (robotacounts: string[]) =>\n      deleteRobotAccountsMutator.mutate(robotacounts),\n  };\n}\n","import {Modal, ModalVariant, Button} from '@patternfly/react-core';\n\nexport default function DisplayModal(props: DisplayModalProps) {\n  const handleModalToggle = () => {\n    props.setIsModalOpen(!props.isModalOpen);\n    if (props.onClose) {\n      props.onClose();\n    }\n  };\n\n  const onSave = () => {\n    props.onSave();\n  };\n\n  const footerWithoutSave = (\n    <>\n      <Button key=\"close\" variant=\"primary\" onClick={handleModalToggle}>\n        Close\n      </Button>\n      <Button key=\"cancel\" variant=\"link\" onClick={handleModalToggle}>\n        Cancel\n      </Button>\n    </>\n  );\n\n  const footerWithSave = (\n    <>\n      <Button key=\"save\" variant=\"primary\" onClick={onSave}>\n        Save\n      </Button>\n      <Button key=\"cancel\" variant=\"link\" onClick={handleModalToggle}>\n        Cancel\n      </Button>\n    </>\n  );\n\n  return (\n    <Modal\n      variant={ModalVariant.large}\n      title={props.title}\n      isOpen={props.isModalOpen}\n      onClose={handleModalToggle}\n      footer={props.showSave ? footerWithSave : footerWithoutSave}\n    >\n      {props.Component}\n    </Modal>\n  );\n}\n\ninterface DisplayModalProps {\n  isModalOpen: boolean;\n  setIsModalOpen: (boolean) => void;\n  title: string;\n  Component: any;\n  onClose?: () => void;\n  onSave?: () => void;\n  showSave: boolean;\n}\n","import {FormGroup, TextInput} from '@patternfly/react-core';\nimport React, {useState, useImperativeHandle, useEffect} from 'react';\nimport AddToRepository from './robotAccountWizard/AddToRepository';\nimport {IRepository} from 'src/resources/RepositoryResource';\nimport {IRobot} from 'src/resources/RobotsResource';\nimport {useRobotPermissions} from 'src/hooks/useRobotPermissions';\nimport {addDisplayError} from 'src/resources/ErrorHandling';\nimport {useRepositories} from 'src/hooks/UseRepositories';\n\nexport default function RobotRepositoryPermissions(\n  props: RobotRepositoryPermissionsProps,\n) {\n  // Fetching repos\n  const {repos: repos} = useRepositories(props.namespace);\n  const [loading, setLoading] = useState<boolean>(true);\n  const [robotPermissions, setRobotPermissions] = useState([]);\n  const [err, setErr] = useState<string[]>();\n\n  const resetRobotPermissions = () => {\n    setRobotPermissions([]);\n  };\n\n  useImperativeHandle(props.robotPermissionsPlaceholder, () => {\n    return {\n      resetRobotPermissions: resetRobotPermissions,\n    };\n  });\n\n  const {result} = useRobotPermissions({\n    orgName: props.namespace,\n    robName: props.robotAccount.name,\n    onSuccess: (result) => {\n      setLoading(false);\n      setRobotPermissions(result);\n    },\n    onError: (err) => {\n      setErr([addDisplayError('Unable to fetch robot accounts', err)]);\n      setLoading(false);\n    },\n  });\n\n  return (\n    <>\n      <FormGroup\n        label=\"Provide a name for your robot account:\"\n        fieldId=\"robot-name\"\n        isRequired\n        disabled\n      >\n        <TextInput\n          value={props.robotAccount.name}\n          type=\"text\"\n          aria-label=\"robot-name-value\"\n          isDisabled\n          className=\"fit-content\"\n        />\n      </FormGroup>\n      <br />\n      <FormGroup\n        label=\"Description\"\n        fieldId=\"robot-description\"\n        disabled\n        className=\"fit-content\"\n      >\n        <TextInput\n          value={props.robotAccount.description}\n          type=\"text\"\n          aria-label=\"robot-description\"\n          isDisabled\n        />\n      </FormGroup>\n      <br />\n      <AddToRepository\n        namespace={props.namespace}\n        dropdownItems={props.RepoPermissionDropdownItems}\n        repos={repos}\n        selectedRepos={props.selectedRepos}\n        setSelectedRepos={props.setSelectedRepos}\n        selectedRepoPerms={props.selectedRepoPerms}\n        setSelectedRepoPerms={props.setSelectedRepoPerms}\n        robotPermissions={robotPermissions}\n        wizardStep={false}\n        robotName={props.robotAccount.name}\n        fetchingRobotPerms={loading}\n        setPrevRepoPerms={props.setPrevRepoPerms}\n        setNewRepoPerms={props.setNewRepoPerms}\n        setShowRepoModalSave={props.setShowRepoModalSave}\n      />\n    </>\n  );\n}\n\ninterface RobotRepositoryPermissionsProps {\n  robotAccount: IRobot;\n  namespace: string;\n  RepoPermissionDropdownItems: any[];\n  repos: IRepository[];\n  selectedRepos: any[];\n  setSelectedRepos: (repos) => void;\n  selectedRepoPerms: any[];\n  setSelectedRepoPerms: (repoPerm) => void;\n  robotPermissionsPlaceholder: any;\n  setPrevRepoPerms: (preVal) => void;\n  setNewRepoPerms: (newVal) => void;\n  setShowRepoModalSave: (boolean) => void;\n}\n","import {\n  bulkDeleteRepoPermsForRobot,\n  bulkUpdateRepoPermsForRobot,\n  fetchRobotPermissionsForNamespace,\n  IRepoPerm,\n} from 'src/resources/RobotsResource';\nimport {useMutation, useQuery, useQueryClient} from '@tanstack/react-query';\nimport {useState} from 'react';\n\nexport function useRobotPermissions({orgName, robName, onSuccess, onError}) {\n  const [namespace, setNamespace] = useState(orgName);\n  const [robotName, setRobotName] = useState(robName);\n  const [page, setPage] = useState(1);\n  const [perPage, setPerPage] = useState(10);\n\n  const {\n    data: robotPermissions,\n    isLoading: loading,\n    error,\n  } = useQuery(\n    ['Namespace', namespace, 'robot', robotName, 'permissions'],\n    ({signal}) =>\n      fetchRobotPermissionsForNamespace(namespace, robotName, false, signal),\n    {\n      enabled: true,\n      placeholderData: [],\n      onSuccess: (result) => {\n        onSuccess(result);\n      },\n      onError: (err) => {\n        onError(err);\n      },\n    },\n  );\n\n  const queryClient = useQueryClient();\n  const deleteRepoPermsMutator = useMutation(\n    async (repoNames: string[]) => {\n      await bulkDeleteRepoPermsForRobot(namespace, robName, repoNames);\n    },\n    {\n      onSuccess: () => {\n        queryClient.invalidateQueries(['Namespace', namespace, 'robots']);\n        queryClient.invalidateQueries([\n          'Namespace',\n          namespace,\n          'robot',\n          robotName,\n          'permissions',\n        ]);\n        onSuccess();\n      },\n      onError: (err) => {\n        onError(err);\n      },\n    },\n  );\n\n  const updateRepoPermsMutator = useMutation(\n    async (repoPerms: IRepoPerm[]) => {\n      return await bulkUpdateRepoPermsForRobot(namespace, robotName, repoPerms);\n    },\n    {\n      onSuccess: () => {\n        queryClient.invalidateQueries(['Namespace', namespace, 'robots']);\n        queryClient.invalidateQueries([\n          'Namespace',\n          namespace,\n          'robot',\n          robotName,\n          'permissions',\n        ]);\n        onSuccess();\n      },\n      onError: (err) => {\n        onError(err);\n      },\n    },\n  );\n\n  return {\n    result: robotPermissions,\n    loading: loading,\n    error,\n    setPage,\n    setPerPage,\n    page,\n    perPage,\n    setNamespace,\n    namespace,\n    setRobotName,\n\n    // Mutations\n    updateRepoPerms: async (repoPerms: IRepoPerm[]) =>\n      updateRepoPermsMutator.mutate(repoPerms),\n    deleteRepoPerms: async (repoNames: string[]) =>\n      deleteRepoPermsMutator.mutate(repoNames),\n  };\n}\n\ninterface bulkUpdateRepoPermsParams {\n  robotName: string;\n  repoPerms: IRepoPerm[];\n}\n\ninterface bulkDeleteRepoPermsParams {\n  robotName: string;\n  repoNames: string[];\n}\n","import {useState} from 'react';\nimport {useMutation, useQuery, useQueryClient} from '@tanstack/react-query';\nimport {\n  fetchRobotAccountToken,\n  regenerateRobotToken,\n} from 'src/resources/RobotsResource';\n\nexport function useRobotToken({orgName, robName, onSuccess, onError}) {\n  const [namespace, setNamespace] = useState(orgName);\n  const [robotName, setRobotName] = useState(robName);\n  const [page, setPage] = useState(1);\n  const [perPage, setPerPage] = useState(10);\n  const queryClient = useQueryClient();\n\n  const {data: robotAccountToken, isLoading: loading} = useQuery(\n    ['Namespace', namespace, 'robot', robotName, 'token'],\n    ({signal}) => fetchRobotAccountToken(namespace, robotName, false, signal),\n    {\n      enabled: true,\n      placeholderData: {},\n      onSuccess: (result) => {\n        onSuccess(result);\n      },\n      onError: (err) => {\n        onError(err);\n      },\n    },\n  );\n\n  const regenerateRobotTokenMutator = useMutation(\n    async ({namespace, robotName}: regenerateRobotTokenParams) => {\n      return regenerateRobotToken(namespace, robotName);\n    },\n    {\n      onSuccess: (result) => {\n        queryClient.invalidateQueries([\n          'Namespace',\n          namespace,\n          'robot',\n          robotName,\n          'token',\n        ]);\n        onSuccess(result);\n      },\n      onError: (err) => {\n        onError(err);\n      },\n    },\n  );\n\n  return {\n    robotAccountToken: robotAccountToken,\n    loading: loading,\n\n    regenerateRobotToken: async (regenerateRobotTokenParams) =>\n      regenerateRobotTokenMutator.mutate(regenerateRobotTokenParams),\n  };\n}\n\ninterface regenerateRobotTokenParams {\n  namespace: string;\n  robotName: string;\n}\n","\n      import API from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js!./RobotAccount.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js!./RobotAccount.css\";\n       export default content && content.locals ? content.locals : undefined;\n","import {useEffect, useState} from 'react';\nimport {\n  Tabs,\n  Tab,\n  TextContent,\n  Text,\n  TextVariants,\n  ClipboardCopy,\n  ClipboardCopyVariant,\n  ExpandableSection,\n  ExpandableSectionToggle,\n  TextArea,\n  Grid,\n  GridItem,\n  TabTitleIcon,\n  TabTitleText,\n  Alert,\n  Button,\n} from '@patternfly/react-core';\nimport {useRobotToken} from 'src/hooks/useRobotToken';\nimport {addDisplayError} from 'src/resources/ErrorHandling';\nimport {IRobot, IRobotToken} from 'src/resources/RobotsResource';\nimport {useQuayConfig} from 'src/hooks/UseQuayConfig';\nimport {DockerIcon, KeyIcon} from '@patternfly/react-icons';\nimport 'src/routes/RepositoriesList/css/RobotAccount.css';\nimport {Buffer} from 'buffer';\n\nconst EmptyRobotToken = {\n  name: '',\n  created: '',\n  last_accessed: '',\n  description: '',\n  token: '',\n  unstructured_metadata: {},\n};\n\nexport default function RobotTokensModal(props: RobotTokensModalProps) {\n  const [activeTabKey, setActiveTabKey] = useState<string | number>(0);\n  const [isSecretExpanded, setSecretExpanded] = useState(false);\n  const [loading, setLoading] = useState<boolean>(true);\n  const [tokenData, setTokenData] = useState<IRobotToken>(EmptyRobotToken);\n  const [err, setErr] = useState<string[]>();\n  const config = useQuayConfig();\n  const domain = config?.config.SERVER_HOSTNAME;\n\n  const {robotAccountToken, regenerateRobotToken} = useRobotToken({\n    orgName: props.namespace,\n    robName: props.robotAccount.name,\n    onSuccess: (result) => {\n      setLoading(false);\n      setTokenData(result);\n    },\n    onError: (err) => {\n      setErr([addDisplayError('Unable to fetch robot accounts', err)]);\n      setLoading(false);\n    },\n  });\n\n  const getDockerConfig = () => {\n    const auths = {};\n    auths[domain] = {\n      auth: Buffer.from(tokenData.name + ':' + tokenData.token).toString(\n        'base64',\n      ),\n      email: '',\n    };\n\n    return JSON.stringify({auths: auths}, null, '  ');\n  };\n\n  const getEscaped = (val) => {\n    let escaped = val.replace(/[^a-zA-Z0-9]/g, '-');\n    if (escaped[0] == '-') {\n      escaped = escaped.slice(1);\n    }\n    return escaped;\n  };\n\n  const getSuffixedFilename = (suffix) => {\n    if (!(tokenData.name || tokenData.token)) {\n      return '';\n    }\n\n    const prefix = getEscaped(tokenData.name);\n    return prefix + '-' + suffix;\n  };\n\n  const getKubernetesSecretName = () => {\n    if (!(tokenData.name || tokenData.token)) {\n      return '';\n    }\n\n    return getSuffixedFilename('pull-secret');\n  };\n\n  const getKubernetesConfiguration = () => {\n    return (\n      'apiVersion: v1\\n' +\n      'kind: Pod\\n' +\n      'metadata:\\n' +\n      '  name: somepod\\n' +\n      '  namespace: all\\n' +\n      'spec:\\n' +\n      '  containers:\\n' +\n      '    - name: web\\n' +\n      `      image: ${domain}/${props.namespace}/somerepo\\n` +\n      '  imagePullSecrets:\\n' +\n      `    - name: ${getKubernetesSecretName()}`\n    );\n  };\n\n  const getKubernetesContent = () => {\n    const dockerConfigJson = getDockerConfig();\n    return [\n      'apiVersion: v1\\n',\n      'kind: Secret\\n',\n      'metadata:\\n',\n      '  name: ',\n      getKubernetesSecretName(),\n      '\\n',\n      'data:\\n',\n      '  .dockerconfigjson: ',\n      Buffer.from(dockerConfigJson).toString('base64'),\n      '\\n',\n      'type: kubernetes.io/dockerconfigjson',\n    ];\n  };\n\n  const onClickRegenerateRobotToken = async () => {\n    await regenerateRobotToken({\n      namespace: props.namespace,\n      robotName: props.robotAccount.name,\n    });\n  };\n\n  const handleTabClick = (\n    event: React.MouseEvent<any> | React.KeyboardEvent | MouseEvent,\n    tabIndex: string | number,\n  ) => {\n    setActiveTabKey(tabIndex);\n  };\n\n  const downloadFile = (fileContent, filename) => {\n    const blob = new Blob(fileContent, {type: 'text/plain'});\n    const element = document.createElement('a');\n    element.href = URL.createObjectURL(blob);\n    element.download = filename;\n    element.click();\n  };\n\n  const downloadKubernetesFile = (filename) => {\n    const fileContent = getKubernetesContent();\n    downloadFile(fileContent, filename);\n  };\n\n  const onViewToggle = (isSecretExpanded: boolean) => {\n    setSecretExpanded(isSecretExpanded);\n  };\n\n  const kubesClusterCmd = `kubectl create -f ${props.robotAccount.name.replace(\n    '+',\n    '-',\n  )}-secret.yml --namespace=NAMESPACEHERE`;\n\n  return (\n    <>\n      <Tabs activeKey={activeTabKey} onSelect={handleTabClick} role=\"region\">\n        <Tab\n          eventKey={0}\n          title={\n            <>\n              <TabTitleIcon>\n                <KeyIcon />\n              </TabTitleIcon>\n              <TabTitleText>Robot Account</TabTitleText>\n            </>\n          }\n        >\n          <br />\n          <>\n            <TextContent>\n              <Text component={TextVariants.h6}>Username & Robot account</Text>\n              <ClipboardCopy hoverTip=\"Copy\" clickTip=\"Copied\" isReadOnly>\n                {props.robotAccount.name}\n              </ClipboardCopy>\n              <ClipboardCopy hoverTip=\"Copy\" clickTip=\"Copied\" isReadOnly>\n                {tokenData.token}\n              </ClipboardCopy>\n              <Text component={TextVariants.h2}>Username & Robot account</Text>\n            </TextContent>\n            <br />\n            <Alert\n              title=\"Note that once you regenerate token, all existing logins of this robot account will become invalid.\"\n              variant=\"warning\"\n              isPlain\n              isInline\n            />\n            <Button\n              variant=\"secondary\"\n              onClick={() => onClickRegenerateRobotToken()}\n            >\n              Regenerate token now\n            </Button>\n          </>\n        </Tab>\n        <Tab\n          eventKey={1}\n          title={\n            <>\n              <TabTitleIcon>\n                <img\n                  src={require(activeTabKey == 1\n                    ? 'src/assets/kubernetes.svg'\n                    : 'src/assets/kubernetes-grey.svg')}\n                />\n              </TabTitleIcon>\n              <TabTitleText>Kubernetes</TabTitleText>\n            </>\n          }\n        >\n          <br />\n          <TextContent>\n            <Text component={TextVariants.h6}>Step 1: Download secret</Text>\n            <Text component={TextVariants.p}>\n              First, download the Kubernetes pull secret for the robot account:\n            </Text>\n            <Grid>\n              <GridItem span={6} rowSpan={1}>\n                <a\n                  onClick={() =>\n                    downloadKubernetesFile(getSuffixedFilename('secret.yml'))\n                  }\n                >\n                  {'Download ' + getSuffixedFilename('secret.yml')}\n                </a>\n              </GridItem>\n              <GridItem rowSpan={1} span={6}>\n                <ExpandableSectionToggle\n                  onToggle={onViewToggle}\n                  isExpanded={isSecretExpanded}\n                  contentId=\"view-kube-file\"\n                >\n                  {isSecretExpanded\n                    ? 'Show less'\n                    : 'View ' + getSuffixedFilename('secret.yml')}\n                </ExpandableSectionToggle>\n              </GridItem>\n            </Grid>\n            <ExpandableSection\n              isDetached\n              isExpanded={isSecretExpanded}\n              contentId=\"view-kube-file\"\n            >\n              <TextArea\n                value={getKubernetesContent().join('')}\n                isReadOnly={true}\n                autoResize={true}\n                className=\"text-area-height\"\n                id=\"expandable-kube-content\"\n              />\n            </ExpandableSection>\n            <Text component={TextVariants.h6}>Step 2: Submit</Text>\n            <Text component={TextVariants.p}>\n              Second, submit the secret to the cluster using this command:\n            </Text>\n            <ClipboardCopy\n              hoverTip=\"Copy\"\n              clickTip=\"Copied\"\n              variant=\"inline-compact\"\n              id=\"step-2\"\n            >\n              {kubesClusterCmd}\n            </ClipboardCopy>\n            <Text component={TextVariants.h6}>\n              Step 3: Update Kubernetes Configuration\n            </Text>\n            <Text component={TextVariants.p}>\n              Finally, add a reference to the secret to your Kuberenetes pod\n              config via an imagePullSecrets field. For example:\n            </Text>\n            <ClipboardCopy\n              isReadOnly\n              isCode\n              hoverTip=\"Copy\"\n              clickTip=\"Copied\"\n              variant={ClipboardCopyVariant.expansion}\n              id=\"step-3\"\n            >\n              {getKubernetesConfiguration()}\n            </ClipboardCopy>\n          </TextContent>\n        </Tab>\n        <Tab\n          eventKey={2}\n          title={\n            <>\n              <TabTitleIcon>\n                <img\n                  src={require(activeTabKey == 2\n                    ? 'src/assets/podman.svg'\n                    : 'src/assets/podman-grey.svg')}\n                />\n              </TabTitleIcon>\n              <TabTitleText>Podman</TabTitleText>\n            </>\n          }\n        >\n          <br />\n          <TextContent>\n            <Text component={TextVariants.h6}>Podman Login</Text>\n            <Text component={TextVariants.p}>\n              Enter the following command on the command line:\n            </Text>\n            <ClipboardCopy\n              hoverTip=\"Copy\"\n              clickTip=\"Copied\"\n              isReadOnly\n              id=\"podman-login\"\n            >\n              {'podman login -u=\"' +\n                tokenData.name +\n                '\" -p=\"' +\n                tokenData.token +\n                '\" ' +\n                domain}\n            </ClipboardCopy>\n          </TextContent>\n        </Tab>\n        <Tab\n          eventKey={3}\n          title={\n            <>\n              <TabTitleIcon>\n                <DockerIcon />\n              </TabTitleIcon>\n              <TabTitleText>Docker configuration</TabTitleText>\n            </>\n          }\n        >\n          <br />\n          <TextContent>\n            <Text component={TextVariants.h6}>Docker Login</Text>\n            <Text component={TextVariants.p}>\n              Enter the following command on the command line:\n            </Text>\n            <ClipboardCopy\n              hoverTip=\"Copy\"\n              clickTip=\"Copied\"\n              isReadOnly\n              id=\"docker login\"\n            >\n              {'docker login -u=\"' +\n                tokenData.name +\n                '\" -p=\"' +\n                tokenData.token +\n                '\" ' +\n                domain}\n            </ClipboardCopy>\n          </TextContent>\n        </Tab>\n      </Tabs>\n    </>\n  );\n}\n\ninterface RobotTokensModalProps {\n  namespace: string;\n  robotAccount: IRobot;\n}\n","import {\n  DropdownItem,\n  PageSection,\n  PageSectionVariants,\n  PanelFooter,\n  Spinner,\n  TextContent,\n  Text,\n  TextVariants,\n} from '@patternfly/react-core';\nimport {\n  TableComposable,\n  ExpandableRowContent,\n  Thead,\n  Tr,\n  Th,\n  Tbody,\n  Td,\n} from '@patternfly/react-table';\nimport {Link} from 'react-router-dom';\nimport {RobotAccountColumnNames} from './ColumnNames';\n\nimport {RobotAccountsToolBar} from 'src/routes/RepositoriesList/RobotAccountsToolBar';\nimport CreateRobotAccountModal from 'src/components/modals/CreateRobotAccountModal';\nimport {IRobot} from 'src/resources/RobotsResource';\nimport {useRecoilState, useRecoilValue} from 'recoil';\nimport {\n  searchRobotAccountState,\n  selectedRobotAccountsState,\n} from 'src/atoms/RobotAccountState';\nimport {useRobotAccounts} from 'src/hooks/useRobotAccounts';\nimport {ReactElement, useState, useRef, useEffect} from 'react';\nimport {ToolbarPagination} from 'src/components/toolbar/ToolbarPagination';\nimport RobotAccountKebab from './RobotAccountKebab';\nimport {useDeleteRobotAccounts} from 'src/hooks/UseDeleteRobotAccount';\nimport {BulkDeleteModalTemplate} from 'src/components/modals/BulkDeleteModalTemplate';\nimport {addDisplayError, BulkOperationError} from 'src/resources/ErrorHandling';\nimport ErrorModal from 'src/components/errors/ErrorModal';\nimport Empty from 'src/components/empty/Empty';\nimport {CubesIcon} from '@patternfly/react-icons';\nimport {ToolbarButton} from 'src/components/toolbar/ToolbarButton';\nimport {formatDate} from 'src/libs/utils';\nimport TeamView from 'src/components/modals/robotAccountWizard/TeamView';\nimport DisplayModal from 'src/components/modals/robotAccountWizard/DisplayModal';\nimport RobotRepositoryPermissions from 'src/components/modals/RobotRepositoryPermissions';\nimport {useQuery, useQueryClient} from '@tanstack/react-query';\nimport {fetchOrg} from 'src/resources/OrganizationResource';\nimport {\n  selectedReposPermissionState,\n  selectedReposState,\n} from 'src/atoms/RepositoryState';\nimport {useRobotRepoPermissions} from 'src/hooks/UseRobotRepoPermissions';\nimport RobotTokensModal from 'src/components/modals/RobotTokensModal';\n\nconst RepoPermissionDropdownItems = [\n  {\n    name: 'None',\n    description: 'No permissions on the repository',\n  },\n  {\n    name: 'Read',\n    description: 'Can view and pull from the repository',\n  },\n  {\n    name: 'Write',\n    description: 'Can view, pull, and push to the repository',\n  },\n  {\n    name: 'Admin',\n    description: 'Full admin access to the organization',\n  },\n];\n\nconst EmptyRobotAccount = {\n  name: '',\n  created: '',\n  last_accessed: '',\n  teams: [],\n  repositories: [],\n  description: '',\n};\n\nexport default function RobotAccountsList(props: RobotAccountsListProps) {\n  const search = useRecoilValue(searchRobotAccountState);\n  const [selectedReposForModalView, setSelectedReposForModalView] =\n    useRecoilState(selectedReposState);\n  const [isCreateRobotModalOpen, setCreateRobotModalOpen] = useState(false);\n  const [isKebabOpen, setKebabOpen] = useState(false);\n  const [isDeleteModalOpen, setDeleteModalOpen] = useState(false);\n  const [isTableExpanded, setTableExpanded] = useState(false);\n  const [loading, setLoading] = useState<boolean>(true);\n  const [isTeamsModalOpen, setTeamsModalOpen] = useState<boolean>(false);\n  const [teamsViewItems, setTeamsViewItems] = useState([]);\n  const [isReposModalOpen, setReposModalOpen] = useState<boolean>(false);\n  const [robotRepos, setRobotRepos] = useState([]);\n  const [teams, setTeams] = useState([]);\n  const [robotForDeletion, setRobotForDeletion] = useState([]);\n  const [robotForModalView, setRobotForModalView] = useState(EmptyRobotAccount);\n  const [isTokenModalOpen, setTokenModalOpen] = useState<boolean>(false);\n  // For repository modal view\n  const [selectedRepoPerms, setSelectedRepoPerms] = useRecoilState(\n    selectedReposPermissionState,\n  );\n  const [prevRepoPerms, setPrevRepoPerms] = useState({});\n  const [showRepoModalSave, setShowRepoModalSave] = useState(false);\n  const [newRepoPerms, setNewRepoPerms] = useState({});\n  const [err, setErr] = useState<string[]>();\n  const [errTitle, setErrTitle] = useState<string>();\n  const robotPermissionsPlaceholder = useRef(null);\n\n  const {robotAccountsForOrg, page, perPage, setPage, setPerPage} =\n    useRobotAccounts({\n      name: props.organizationName,\n      onSuccess: () => {\n        setLoading(false);\n      },\n      onError: (err) => {\n        setErrTitle('Failed to fetch Robot Accounts');\n        setErr([addDisplayError('Unable to fetch robot accounts', err)]);\n        setLoading(false);\n      },\n    });\n\n  const queryClient = useQueryClient();\n\n  const robotAccountsList: IRobot[] = robotAccountsForOrg?.map(\n    (robotAccount) => {\n      return {\n        name: robotAccount.name,\n        teams: robotAccount.teams,\n        repositories: robotAccount.repositories,\n        last_accessed: robotAccount.last_accessed,\n        created: robotAccount.created,\n        description: robotAccount.description,\n      } as IRobot;\n    },\n  );\n\n  // Fetching teams\n  useQuery(\n    ['organization', props.organizationName, 'teams'],\n    ({signal}) => {\n      fetchOrg(props.organizationName, signal).then((response) => {\n        setTeams(Object['values'](response?.teams));\n        return response?.teams;\n      });\n      return [];\n    },\n    {\n      placeholderData: () => {\n        return queryClient.getQueryData(['organization', props.organizationName]);\n      },\n    },\n  );\n\n  const filteredRobotAccounts =\n    search.query !== ''\n      ? robotAccountsList.filter((robotAccount) => {\n          const RobotAccountname = robotAccount.name;\n          return RobotAccountname.includes(search.query);\n        })\n      : robotAccountsList;\n\n  const paginatedRobotAccountList = filteredRobotAccounts?.slice(\n    page * perPage - perPage,\n    page * perPage - perPage + perPage,\n  );\n\n  // Expandable Row Logic\n  const [expandedRobotNames, setExpandedRobotNames] = useState<string[]>([]);\n  const setRobotExpanded = (robot: IRobot, isExpanding = true) =>\n    setExpandedRobotNames((prevExpanded) => {\n      const otherExpandedRepoNames = prevExpanded.filter(\n        (r) => r !== robot.name,\n      );\n      return isExpanding\n        ? [...otherExpandedRepoNames, robot.name]\n        : otherExpandedRepoNames;\n    });\n  const isRobotExpanded = (robot) => expandedRobotNames.includes(robot.name);\n\n  // Logic for handling row-wise checkbox selection in <Td>\n  const isRobotAccountSelected = (rob: IRobot) =>\n    selectedRobotAccounts.includes(rob.name);\n\n  const [selectedRobotAccounts, setSelectedRobotAccounts] = useRecoilState(\n    selectedRobotAccountsState,\n  );\n\n  const fetchBulKUpdateErrorMsg = (err, msg) => {\n    const errMessages = [];\n    err.getErrors().forEach((error, resource) => {\n      errMessages.push(addDisplayError(`${msg} ${resource}`, error.error));\n    });\n    return errMessages;\n  };\n\n  const {deleteRobotAccounts} = useDeleteRobotAccounts({\n    namespace: props.organizationName,\n    onSuccess: () => {\n      setSelectedRobotAccounts([]);\n      setDeleteModalOpen(!isDeleteModalOpen);\n    },\n    onError: (err) => {\n      setErrTitle('Robot Account deletion failed');\n      if (err instanceof BulkOperationError) {\n        const errMessages = fetchBulKUpdateErrorMsg(\n          err,\n          `Failed to delete robot account`,\n        );\n        setErr(errMessages);\n      } else {\n        setErr([addDisplayError('Failed to delete robot account', err)]);\n      }\n      setSelectedRobotAccounts([]);\n      setDeleteModalOpen(!isDeleteModalOpen);\n    },\n  });\n\n  const {updateRepoPerms, deleteRepoPerms} = useRobotRepoPermissions({\n    namespace: props.organizationName,\n    onSuccess: () => null,\n    onError: (err) => {\n      setErrTitle('Repository Permission update failed');\n      if (err instanceof BulkOperationError) {\n        const errMessages = fetchBulKUpdateErrorMsg(\n          err,\n          `Failed to update robot repository permission`,\n        );\n        setErr(errMessages);\n      } else {\n        setErr([\n          addDisplayError('Failed to update robot repository permission', err),\n        ]);\n      }\n    },\n  });\n\n  const setRobotAccountsSelected = (robotAccount: IRobot, isSelecting = true) =>\n    setSelectedRobotAccounts((prevSelected) => {\n      const otherSelectedRobotNames = prevSelected.filter(\n        (r) => r !== robotAccount.name,\n      );\n      return isSelecting\n        ? [...otherSelectedRobotNames, robotAccount.name]\n        : otherSelectedRobotNames;\n    });\n\n  const isRobotAccountSelectable = (robot) => robot.name !== ''; // Arbitrary logic for this example\n\n  const onSelectRobot = (\n    robotAccount: IRobot,\n    rowIndex: number,\n    isSelecting: boolean,\n  ) => {\n    setRobotAccountsSelected(robotAccount, isSelecting);\n  };\n\n  const onReposModalClose = () => {\n    setSelectedReposForModalView([]);\n    setSelectedRepoPerms([]);\n    robotPermissionsPlaceholder.current.resetRobotPermissions();\n    setRobotForModalView(EmptyRobotAccount);\n  };\n\n  const onRepoModalSave = async () => {\n    try {\n      const robotname = robotForModalView.name.replace(props.organizationName + '+', '');\n      const [toUpdate, toDelete] = updateRepoPermissions();\n      if (toUpdate.length > 0) {\n        await updateRepoPerms({robotName: robotname, repoPerms: toUpdate});\n      }\n      if (toDelete.length > 0) {\n        await deleteRepoPerms({robotName: robotname, repoNames: toDelete});\n      }\n    } catch (error) {\n      console.error(error);\n      setErr([\n        addDisplayError('Failed to update robot repository permission', error),\n      ]);\n    }\n  };\n\n  const updateRepoPermissions = () => {\n    const toUpdate = [];\n    Object.keys(newRepoPerms).forEach((repo) => {\n      if (\n        newRepoPerms[repo]?.toLowerCase() != prevRepoPerms[repo]?.toLowerCase()\n      ) {\n        toUpdate.push({\n          reponame: repo,\n          permission: newRepoPerms[repo].toLowerCase(),\n        });\n      }\n    });\n\n    const toDelete = [];\n    Object.keys(prevRepoPerms).forEach((repo) => {\n      if (!(repo in newRepoPerms)) {\n        toDelete.push(repo);\n      }\n    });\n    return [toUpdate, toDelete];\n  };\n\n  const fetchReposModal = (robotAccount, repos) => {\n    setRobotForModalView(robotAccount);\n    setRobotRepos(repos);\n    setReposModalOpen(true);\n  };\n\n  const fetchTeamsModal = (items) => {\n    const filteredItems = teams.filter((team) =>\n      items.some((item) => team.name === item.name),\n    );\n    setTeamsModalOpen(true);\n    setTeamsViewItems(filteredItems);\n  };\n\n  const getLength = (robotAccount, list, teams) => {\n    const len = list.length;\n    let placeholder = 'teams';\n    let single_placeholder = 'team';\n\n    if (!teams) {\n      placeholder = 'repositories';\n      single_placeholder = 'repository';\n    }\n\n    if (len == 0 && teams) {\n      return 'No ' + placeholder;\n    }\n    return (\n      <Link\n        to=\"#\"\n        onClick={() =>\n          teams ? fetchTeamsModal(list) : fetchReposModal(robotAccount, list)\n        }\n      >\n        {len > 0 ? len.toString() + ' ' : 'No '}\n        {len == 1 ? single_placeholder : placeholder}\n      </Link>\n    );\n  };\n\n  const fetchTokensModal = (robotAccount) => {\n    setTokenModalOpen(!isTokenModalOpen);\n    setRobotForModalView(robotAccount);\n  };\n\n  const onTokenModalClose = () => {\n    setRobotForModalView(EmptyRobotAccount);\n  };\n\n  const mapOfColNamesToTableData = {\n    RobotAccount: {\n      label: 'name',\n      transformFunc: (item: string) => {\n        return `${item}`;\n      },\n    },\n  };\n\n  const handleBulkDeleteModalToggle = () => {\n    setKebabOpen(!isKebabOpen);\n    setDeleteModalOpen(!isDeleteModalOpen);\n    setRobotForDeletion([]);\n  };\n\n  const bulkDeleteRobotAccounts = async () => {\n    const items =\n      robotForDeletion.length > 0 ? robotForDeletion : selectedRobotAccounts;\n    await deleteRobotAccounts(items);\n    setRobotForDeletion([]);\n  };\n\n  const bulkDeleteRobotAccountModal = () => {\n    const items =\n      robotForDeletion.length > 0 ? robotForDeletion : selectedRobotAccounts;\n    return (\n      <BulkDeleteModalTemplate\n        mapOfColNamesToTableData={mapOfColNamesToTableData}\n        handleModalToggle={handleBulkDeleteModalToggle}\n        handleBulkDeletion={bulkDeleteRobotAccounts}\n        isModalOpen={isDeleteModalOpen}\n        selectedItems={items}\n        resourceName={'robot accounts'}\n      />\n    );\n  };\n\n  const kebabItems: ReactElement[] = [\n    <DropdownItem\n      key=\"delete-item\"\n      className=\"red-color\"\n      onClick={handleBulkDeleteModalToggle}\n    >\n      Delete\n    </DropdownItem>,\n  ];\n\n  const createRobotModal = (\n    <CreateRobotAccountModal\n      isModalOpen={isCreateRobotModalOpen}\n      handleModalToggle={() => setCreateRobotModalOpen(!isCreateRobotModalOpen)}\n      namespace={props.organizationName}\n      teams={teams}\n      RepoPermissionDropdownItems={RepoPermissionDropdownItems}\n    />\n  );\n\n  const collapseTable = () => {\n    setTableExpanded(!isTableExpanded);\n    setExpandedRobotNames([]);\n  };\n\n  const expandTable = () => {\n    if (isTableExpanded) {\n      return;\n    }\n    setTableExpanded(!isTableExpanded);\n    paginatedRobotAccountList.map((robotAccount, index) => {\n      setRobotExpanded(robotAccount);\n    });\n  };\n\n  if (!loading && !robotAccountsForOrg?.length) {\n    return (\n      <Empty\n        title=\"There are no viewable robot accounts for this repository\"\n        icon={CubesIcon}\n        body=\"Either no robot accounts exist yet or you may not have permission to view any. If you have the permissions, you may create robot accounts in this repository.\"\n        button={\n          <ToolbarButton\n            id=\"\"\n            buttonValue=\"Create robot account\"\n            Modal={createRobotModal}\n            isModalOpen={isCreateRobotModalOpen}\n            setModalOpen={setCreateRobotModalOpen}\n          />\n        }\n      />\n    );\n  }\n\n  if (loading && paginatedRobotAccountList.length == 0) {\n    return (\n      <TableComposable aria-label=\"Empty state table\" borders={false}>\n        <Tbody>\n          <Tr>\n            <Td colSpan={8} textCenter={true}>\n              <Spinner diameter=\"50px\" />\n            </Td>\n          </Tr>\n          <Tr>\n            <Td colSpan={8} textCenter={true}>\n              <TextContent>\n                <Text component={TextVariants.h3}>Loading</Text>\n              </TextContent>\n            </Td>\n          </Tr>\n        </Tbody>\n      </TableComposable>\n    );\n  }\n  return (\n    <>\n      <PageSection variant={PageSectionVariants.light}>\n        <ErrorModal title={errTitle} error={err} setError={setErr} />\n        <RobotAccountsToolBar\n          selectedItems={selectedRobotAccounts}\n          allItemsList={filteredRobotAccounts}\n          setSelectedRobotAccounts={setSelectedRobotAccounts}\n          itemsPerPageList={paginatedRobotAccountList}\n          onItemSelect={onSelectRobot}\n          buttonText=\"Create robot account\"\n          pageModal={createRobotModal}\n          isModalOpen={isCreateRobotModalOpen}\n          setModalOpen={setCreateRobotModalOpen}\n          isKebabOpen={isKebabOpen}\n          setKebabOpen={setKebabOpen}\n          kebabItems={kebabItems}\n          deleteModal={bulkDeleteRobotAccountModal}\n          deleteKebabIsOpen={isDeleteModalOpen}\n          setDeleteModalOpen={setDeleteModalOpen}\n          perPage={perPage}\n          page={page}\n          setPage={setPage}\n          setPerPage={setPerPage}\n          total={filteredRobotAccounts.length}\n          expandTable={expandTable}\n          collapseTable={collapseTable}\n        />\n        <DisplayModal\n          isModalOpen={isTeamsModalOpen}\n          setIsModalOpen={setTeamsModalOpen}\n          title=\"Teams\"\n          showSave={false}\n          Component={\n            <TeamView\n              items={teamsViewItems}\n              showCheckbox={false}\n              showToggleGroup={false}\n              searchInputText=\"Search for team\"\n              filterWithDropdown={false}\n            />\n          }\n        ></DisplayModal>\n        <DisplayModal\n          isModalOpen={isReposModalOpen}\n          setIsModalOpen={setReposModalOpen}\n          onClose={onReposModalClose}\n          title=\"Set repository permissions\"\n          showSave={showRepoModalSave}\n          onSave={onRepoModalSave}\n          Component={\n            <RobotRepositoryPermissions\n              robotAccount={robotForModalView}\n              namespace={props.organizationName}\n              RepoPermissionDropdownItems={RepoPermissionDropdownItems}\n              repos={robotRepos}\n              selectedRepos={selectedReposForModalView}\n              setSelectedRepos={setSelectedReposForModalView}\n              selectedRepoPerms={selectedRepoPerms}\n              setSelectedRepoPerms={setSelectedRepoPerms}\n              robotPermissionsPlaceholder={robotPermissionsPlaceholder}\n              setPrevRepoPerms={setPrevRepoPerms}\n              setNewRepoPerms={setNewRepoPerms}\n              setShowRepoModalSave={setShowRepoModalSave}\n            />\n          }\n        ></DisplayModal>\n        <DisplayModal\n          isModalOpen={isTokenModalOpen}\n          setIsModalOpen={setTokenModalOpen}\n          title={`Credentials for ${robotForModalView.name}`}\n          showSave={false}\n          onClose={onTokenModalClose}\n          Component={\n            <RobotTokensModal\n              namespace={props.organizationName}\n              robotAccount={robotForModalView}\n            />\n          }\n        />\n        <TableComposable aria-label=\"Expandable table\" variant={undefined}>\n          <Thead>\n            <Tr>\n              <Th />\n              <Th />\n              <Th modifier=\"wrap\">\n                {RobotAccountColumnNames.robotAccountName}\n              </Th>\n              <Th modifier=\"wrap\">{RobotAccountColumnNames.teams}</Th>\n              <Th modifier=\"wrap\">{RobotAccountColumnNames.repositories}</Th>\n              <Th modifier=\"wrap\">{RobotAccountColumnNames.lastAccessed}</Th>\n              <Th modifier=\"wrap\">{RobotAccountColumnNames.created}</Th>\n              <Th />\n            </Tr>\n          </Thead>\n          {paginatedRobotAccountList.map((robotAccount, rowIndex) => {\n            return (\n              <Tbody key={rowIndex} isExpanded={isRobotExpanded(robotAccount)}>\n                <Tr>\n                  <Td\n                    expand={\n                      robotAccount.description\n                        ? {\n                            rowIndex,\n                            isExpanded: isRobotExpanded(robotAccount),\n                            onToggle: () =>\n                              setRobotExpanded(\n                                robotAccount,\n                                !isRobotExpanded(robotAccount),\n                              ),\n                          }\n                        : undefined\n                    }\n                  />\n\n                  <Td\n                    select={{\n                      rowIndex,\n                      onSelect: (_event, isSelecting) =>\n                        onSelectRobot(robotAccount, rowIndex, isSelecting),\n                      isSelected: isRobotAccountSelected(robotAccount),\n                      disable: !isRobotAccountSelectable(robotAccount),\n                    }}\n                  />\n                  <Td dataLabel={RobotAccountColumnNames.robotAccountName}>\n                    <Link to=\"#\" onClick={() => fetchTokensModal(robotAccount)}>\n                      {robotAccount.name}\n                    </Link>\n                  </Td>\n                  <Td dataLabel={RobotAccountColumnNames.teams}>\n                    {getLength(robotAccount, robotAccount.teams, true)}\n                  </Td>\n                  <Td dataLabel={RobotAccountColumnNames.repositories}>\n                    {getLength(robotAccount, robotAccount.repositories, false)}\n                  </Td>\n                  <Td dataLabel={RobotAccountColumnNames.lastAccessed}>\n                    {robotAccount.last_accessed\n                      ? robotAccount.last_accessed\n                      : 'Never'}\n                  </Td>\n                  <Td dataLabel={RobotAccountColumnNames.created}>\n                    {formatDate(robotAccount.created)}\n                  </Td>\n                  <Td data-label=\"kebab\">\n                    <RobotAccountKebab\n                      robotAccount={robotAccount}\n                      namespace={props.organizationName}\n                      setError={setErr}\n                      deleteModal={bulkDeleteRobotAccountModal}\n                      deleteKebabIsOpen={isDeleteModalOpen}\n                      setDeleteModalOpen={setDeleteModalOpen}\n                      setSelectedRobotAccount={setRobotForDeletion}\n                      onSetRepoPermsClick={fetchReposModal}\n                      robotAccountRepos={robotAccount.repositories}\n                    />\n                  </Td>\n                </Tr>\n                {robotAccount.description ? (\n                  <Tr isExpanded={isRobotExpanded(robotAccount)}>\n                    <Td\n                      dataLabel=\"Robot Account description\"\n                      noPadding={false}\n                      colSpan={7}\n                    >\n                      <ExpandableRowContent>\n                        {robotAccount.description}\n                      </ExpandableRowContent>\n                    </Td>\n                  </Tr>\n                ) : null}\n              </Tbody>\n            );\n          })}\n        </TableComposable>\n        <PanelFooter>\n          <ToolbarPagination\n            itemsList={filteredRobotAccounts}\n            perPage={perPage}\n            page={page}\n            setPage={setPage}\n            setPerPage={setPerPage}\n            bottom={true}\n            total={filteredRobotAccounts.length}\n          />\n        </PanelFooter>\n      </PageSection>\n    </>\n  );\n}\n\ninterface RobotAccountsListProps {\n  organizationName: string;\n}\n","import {useMutation, useQueryClient} from '@tanstack/react-query';\nimport {\n  bulkDeleteRepoPermsForRobot,\n  bulkUpdateRepoPermsForRobot,\n  IRepoPerm,\n} from 'src/resources/RobotsResource';\nimport {useState} from 'react';\n\nexport function useRobotRepoPermissions({namespace, onSuccess, onError}) {\n  const queryClient = useQueryClient();\n  const [robotName, setRobotName] = useState('');\n\n  const deleteRepoPermsMutator = useMutation(\n    async ({robotName, repoNames}: bulkDeleteRepoPermsParams) => {\n      setRobotName(robotName);\n      return await bulkDeleteRepoPermsForRobot(namespace, robotName, repoNames);\n    },\n    {\n      onSuccess: (result) => {\n        queryClient.invalidateQueries(['Namespace', namespace, 'robots']);\n        queryClient.invalidateQueries([\n          'Namespace',\n          namespace,\n          'robot',\n          `${namespace}+${result.robotname}`,\n          'permissions',\n        ]);\n        onSuccess();\n      },\n      onError: (err) => {\n        onError(err);\n      },\n    },\n  );\n\n  const updateRepoPermsMutator = useMutation(\n    async ({robotName, repoPerms}: bulkUpdateRepoPermsParams) => {\n      setRobotName(robotName);\n      return await bulkUpdateRepoPermsForRobot(namespace, robotName, repoPerms);\n    },\n    {\n      onSuccess: (result) => {\n        queryClient.invalidateQueries(['Namespace', namespace, 'robots']);\n        queryClient.invalidateQueries([\n          'Namespace',\n          namespace,\n          'robot',\n          `${namespace}+${result.robotname}`,\n          'permissions',\n        ]);\n        onSuccess();\n      },\n      onError: (err) => {\n        onError(err);\n      },\n    },\n  );\n\n  return {\n    deleteRepoPerms: async (params: bulkDeleteRepoPermsParams) =>\n      deleteRepoPermsMutator.mutate(params),\n    updateRepoPerms: async (params: bulkUpdateRepoPermsParams) =>\n      updateRepoPermsMutator.mutate(params),\n  };\n}\n\ninterface bulkUpdateRepoPermsParams {\n  robotName: string;\n  repoPerms: IRepoPerm[];\n}\n\ninterface bulkDeleteRepoPermsParams {\n  robotName: string;\n  repoNames: string[];\n}\n","import {\n  Page,\n  PageSection,\n  PageSectionVariants,\n  Tab,\n  Tabs,\n  TabTitleText,\n  Title,\n} from '@patternfly/react-core';\nimport {useLocation, useParams, useSearchParams} from 'react-router-dom';\nimport {useCallback, useState} from 'react';\nimport RepositoriesList from 'src/routes/RepositoriesList/RepositoriesList';\nimport Settings from './Tabs/Settings/Settings';\nimport {QuayBreadcrumb} from 'src/components/breadcrumb/Breadcrumb';\nimport RobotAccountsList from 'src/routes/RepositoriesList/RobotAccountsList';\n\nexport default function Organization() {\n  const location = useLocation();\n  const {organizationName} = useParams();\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const [activeTabKey, setActiveTabKey] = useState<string>(\n    searchParams.get('tab') || 'Repositories',\n  );\n\n  const onTabSelect = useCallback(\n    (_event: React.MouseEvent<HTMLElement, MouseEvent>, tabKey: string) => {\n      setSearchParams({tab: tabKey});\n      setActiveTabKey(tabKey);\n    },\n    [],\n  );\n\n  const repositoriesSubNav = [\n    {\n      name: 'Repositories',\n      component: <RepositoriesList organizationName={organizationName} />,\n    },\n    {\n      name: 'Robot accounts',\n      component: <RobotAccountsList organizationName={organizationName} />,\n    },\n    {\n      name: 'Settings',\n      component: <Settings organizationName={organizationName} />,\n    },\n  ];\n\n  return (\n    <Page>\n      <QuayBreadcrumb />\n      <PageSection\n        variant={PageSectionVariants.light}\n        className=\"no-padding-bottom\"\n      >\n        <Title data-testid=\"repo-title\" headingLevel=\"h1\">\n          {organizationName}\n        </Title>\n      </PageSection>\n      <PageSection\n        variant={PageSectionVariants.light}\n        padding={{default: 'noPadding'}}\n      >\n        <Tabs activeKey={activeTabKey} onSelect={onTabSelect}>\n          {repositoriesSubNav.map((nav) => (\n            <Tab\n              key={nav.name}\n              eventKey={nav.name}\n              title={<TabTitleText>{nav.name}</TabTitleText>}\n            >\n              {nav.component}\n            </Tab>\n          ))}\n        </Tabs>\n      </PageSection>\n    </Page>\n  );\n}\n","const ColumnNames = {\n  name: 'Name',\n  security: 'Security',\n  size: 'Size',\n  expires: 'Expires',\n  lastModified: 'Last Modified',\n  manifest: 'Manifest',\n  pull: 'Pull',\n};\n\nexport default ColumnNames;\n","import {atom, selector} from 'recoil';\nimport {SearchState} from 'src/components/toolbar/SearchTypes';\nimport {Tag} from 'src/resources/TagResource';\nimport ColumnNames from 'src/routes/RepositoryDetails/Tags/ColumnNames';\n\nexport const searchTagsState = atom<SearchState>({\n  key: 'searchsearchTagsStateState',\n  default: {\n    query: '',\n    field: ColumnNames.name,\n  },\n});\n\nexport const searchTagsFilterState = selector({\n  key: 'searchFilter',\n  get: ({get}) => {\n    const search = get(searchTagsState);\n    if (search.query === '') {\n      return null;\n    }\n\n    const filterByName = (tag: Tag) => tag.name.includes(search.query);\n    const filterByDigest = (tag: Tag) =>\n      tag.manifest_digest.includes(search.query);\n\n    switch (search.field) {\n      case ColumnNames.manifest:\n        return filterByDigest;\n      case ColumnNames.name:\n      default:\n        return filterByName;\n    }\n  },\n});\n\nexport const paginationState = atom({\n  key: 'paginationState',\n  default: {\n    page: 1,\n    perPage: 25,\n  },\n});\n\nexport const selectedTagsState = atom({\n  key: 'selectedTagsState',\n  default: [],\n});\n\nexport const currentOpenPopoverState = atom({\n  key: 'currentOpenPopoverState',\n  default: '',\n});\n","\n      import API from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js!./Tags.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js!./Tags.css\";\n       export default content && content.locals ? content.locals : undefined;\n","import {\n  Modal,\n  ModalVariant,\n  Button,\n  Label,\n  Alert,\n} from '@patternfly/react-core';\nimport {useState} from 'react';\nimport ErrorModal from 'src/components/errors/ErrorModal';\nimport {addDisplayError, BulkOperationError} from 'src/resources/ErrorHandling';\nimport {RepositoryDetails} from 'src/resources/RepositoryResource';\nimport {bulkDeleteTags} from 'src/resources/TagResource';\nimport './Tags.css';\n\nexport function DeleteModal(props: ModalProps) {\n  const [err, setErr] = useState<string[]>();\n  const isReadonly: boolean = props.repoDetails?.state !== 'NORMAL';\n\n  const deleteTags = async () => {\n    try {\n      const tags = props.selectedTags.map((tag) => ({\n        org: props.org,\n        repo: props.repo,\n        tag: tag,\n      }));\n      await bulkDeleteTags(tags);\n    } catch (err: any) {\n      console.error(err);\n      if (err instanceof BulkOperationError) {\n        const errMessages = [];\n        // TODO: Would like to use for .. of instead of foreach\n        // typescript complains saying we're using version prior to es6?\n        err.getErrors().forEach((error, tag) => {\n          errMessages.push(\n            addDisplayError(`Failed to delete tag ${tag}`, error.error),\n          );\n        });\n        setErr(errMessages);\n      } else {\n        setErr([addDisplayError('Failed to delete tags', err)]);\n      }\n    } finally {\n      props.loadTags();\n      props.setIsOpen(!props.isOpen);\n      props.setSelectedTags([]);\n    }\n  };\n  return (\n    <>\n      <ErrorModal title=\"Tag deletion failed\" error={err} setError={setErr} />\n      <Modal\n        id=\"tag-deletion-modal\"\n        title={`Delete the following tag${\n          props.selectedTags.length > 1 ? 's' : ''\n        }?`}\n        isOpen={props.isOpen}\n        disableFocusTrap={true}\n        key=\"modal\"\n        onClose={() => {\n          props.setIsOpen(!props.isOpen);\n        }}\n        data-testid=\"delete-tags-modal\"\n        variant={ModalVariant.small}\n        actions={[\n          <Button\n            key=\"cancel\"\n            variant=\"primary\"\n            onClick={() => {\n              props.setIsOpen(!props.isOpen);\n            }}\n          >\n            Cancel\n          </Button>,\n          <Button\n            key=\"modal-action-button\"\n            variant=\"primary\"\n            onClick={deleteTags}\n            isDisabled={isReadonly}\n          >\n            Delete\n          </Button>,\n        ]}\n      >\n        {isReadonly ? (\n          <>\n            <Alert\n              id=\"form-error-alert\"\n              isInline\n              variant=\"danger\"\n              title={`Repository is currently in ${props.repoDetails?.state} state. Deletion is disabled.`}\n            />\n            <div className=\"delete-modal-readonly-alert\" />\n          </>\n        ) : null}\n\n        {props.selectedTags.map((tag) => (\n          <span key={tag}>\n            <Label>{tag}</Label>{' '}\n          </span>\n        ))}\n        {props.selectedTags.length > 1 ? (\n          <div>\n            <b>Note:</b> This operation can take several minutes.\n          </div>\n        ) : null}\n      </Modal>\n    </>\n  );\n}\n\ntype ModalProps = {\n  isOpen: boolean;\n  setIsOpen: (isModalOpen: boolean) => void;\n  selectedTags: string[];\n  setSelectedTags: (selectedTags: string[]) => void;\n  loadTags: () => void;\n  org: string;\n  repo: string;\n  repoDetails: RepositoryDetails;\n};\n","import {\n  DropdownItem,\n  Toolbar,\n  ToolbarContent,\n  ToolbarItem,\n} from '@patternfly/react-core';\nimport {ReactElement, useState} from 'react';\nimport {useRecoilState} from 'recoil';\nimport {searchTagsState, selectedTagsState} from 'src/atoms/TagListState';\nimport {Tag} from 'src/resources/TagResource';\nimport {DeleteModal} from './DeleteModal';\nimport {ToolbarPagination} from 'src/components/toolbar/ToolbarPagination';\nimport {SearchInput} from 'src/components/toolbar/SearchInput';\nimport {Kebab} from 'src/components/toolbar/Kebab';\nimport {SearchDropdown} from 'src/components/toolbar/SearchDropdown';\nimport {DropdownCheckbox} from 'src/components/toolbar/DropdownCheckbox';\nimport ColumnNames from './ColumnNames';\nimport {SearchState} from 'src/components/toolbar/SearchTypes';\nimport {RepositoryDetails} from 'src/resources/RepositoryResource';\n\nexport function TagsToolbar(props: ToolBarProps) {\n  const [isModalOpen, setIsModalOpen] = useState<boolean>(false);\n  const [selectedTags, setSelectedTags] = useRecoilState(selectedTagsState);\n  const [search, setSearch] = useRecoilState<SearchState>(searchTagsState);\n\n  const [isKebabOpen, setKebabOpen] = useState(false);\n  const kebabItems: ReactElement[] = [\n    <DropdownItem\n      key=\"delete\"\n      onClick={() => {\n        setKebabOpen(!isKebabOpen);\n        setIsModalOpen(!isModalOpen);\n      }}\n      isDisabled={selectedTags.length <= 0}\n    >\n      Delete\n    </DropdownItem>,\n  ];\n\n  return (\n    <Toolbar>\n      <ToolbarContent>\n        <DropdownCheckbox\n          selectedItems={selectedTags}\n          deSelectAll={setSelectedTags}\n          allItemsList={props.TagList}\n          itemsPerPageList={props.paginatedTags}\n          onItemSelect={props.selectTag}\n        />\n\n        <SearchDropdown\n          searchState={search}\n          setSearchState={setSearch}\n          items={[ColumnNames.name, ColumnNames.manifest]}\n        />\n        <SearchInput\n          id=\"tagslist-search-input\"\n          searchState={search}\n          onChange={setSearch}\n        />\n        <ToolbarItem>\n          {selectedTags?.length !== 0 ? (\n            <Kebab\n              isKebabOpen={isKebabOpen}\n              setKebabOpen={setKebabOpen}\n              kebabItems={kebabItems}\n              useActions={true}\n            />\n          ) : null}\n        </ToolbarItem>\n\n        <ToolbarPagination\n          itemsList={props.TagList}\n          perPage={props.perPage}\n          page={props.page}\n          setPage={props.setPage}\n          setPerPage={props.setPerPage}\n        />\n      </ToolbarContent>\n      <DeleteModal\n        isOpen={isModalOpen}\n        setIsOpen={setIsModalOpen}\n        selectedTags={selectedTags}\n        setSelectedTags={setSelectedTags}\n        org={props.organization}\n        repo={props.repository}\n        loadTags={props.loadTags}\n        repoDetails={props.repoDetails}\n      />\n    </Toolbar>\n  );\n}\n\ntype ToolBarProps = {\n  organization: string;\n  repository: string;\n  tagCount: number;\n  loadTags: () => void;\n  TagList: Tag[];\n  paginatedTags: Tag[];\n  perPage: number;\n  page: number;\n  setPage: (pageNumber) => void;\n  setPerPage: (perPageNumber) => void;\n  selectTag: (tag: Tag, rowIndex?: number, isSelecting?: boolean) => void;\n  repoDetails: RepositoryDetails;\n};\n","export enum TabIndex {\n  Details = 'details',\n  Layers = 'layers',\n  SecurityReport = 'securityreport',\n  Packages = 'packages',\n}\n","import {\n  Popover,\n  PopoverPosition,\n  Button,\n  ClipboardCopy,\n  Modal,\n  ModalVariant,\n  Text,\n  Tooltip,\n} from '@patternfly/react-core';\nimport {useRecoilState} from 'recoil';\nimport {currentOpenPopoverState} from 'src/atoms/TagListState';\nimport {useQuayConfig} from 'src/hooks/UseQuayConfig';\n\nexport default function TablePopover(props: TablePopoverProps) {\n  const [currentOpenPopover, setCurrentOpenPopover] = useRecoilState(\n    currentOpenPopoverState,\n  );\n\n  const config = useQuayConfig();\n  const domain = config?.config.SERVER_HOSTNAME;\n\n  return (\n    <Popover\n      data-testid=\"pull-popover\"\n      isVisible={currentOpenPopover === props.tag}\n      shouldClose={() => {\n        setCurrentOpenPopover('');\n      }}\n      headerContent={<div>Fetch Tag</div>}\n      onMouseLeave={() => {\n        setCurrentOpenPopover('');\n      }}\n      bodyContent={\n        <div>\n          <Text style={{fontWeight: 'bold'}}>Podman Pull (By Tag)</Text>\n          <ClipboardCopy\n            data-testid=\"copy-tag-podman\"\n            isReadOnly\n            hoverTip=\"Copy\"\n            clickTip=\"Copied\"\n          >\n            podman pull {domain}/{props.org}/{props.repo}:{props.tag}\n          </ClipboardCopy>\n          <br />\n          <Text style={{fontWeight: 'bold'}}>Podman Pull (By Digest)</Text>\n          <ClipboardCopy\n            data-testid=\"copy-digest-podman\"\n            isReadOnly\n            hoverTip=\"Copy\"\n            clickTip=\"Copied\"\n          >\n            podman pull {domain}/{props.org}/{props.repo}@{props.digest}\n          </ClipboardCopy>\n          <br />\n          <Text style={{fontWeight: 'bold'}}>Docker Pull (By Tag)</Text>\n          <ClipboardCopy\n            data-testid=\"copy-tag-docker\"\n            isReadOnly\n            hoverTip=\"Copy\"\n            clickTip=\"Copied\"\n          >\n            docker pull {domain}/{props.org}/{props.repo}:{props.tag}\n          </ClipboardCopy>\n          <br />\n          <Text style={{fontWeight: 'bold'}}>Docker Pull (By Digest)</Text>\n          <ClipboardCopy\n            data-testid=\"copy-digest-docker\"\n            isReadOnly\n            hoverTip=\"Copy\"\n            clickTip=\"Copied\"\n          >\n            docker pull {domain}/{props.org}/{props.repo}@{props.digest}\n          </ClipboardCopy>\n        </div>\n      }\n    >\n      <div\n        onMouseEnter={() => {\n          setCurrentOpenPopover(props.tag);\n        }}\n      >\n        {props.children}\n      </div>\n    </Popover>\n  );\n}\n\ntype TablePopoverProps = {\n  org: string;\n  repo: string;\n  tag: string;\n  digest: string;\n  children: React.ReactNode;\n};\n","import {useEffect, useState} from 'react';\nimport {\n  SecurityDetailsResponse,\n  getSecurityDetails,\n} from 'src/resources/TagResource';\nimport {Link, useLocation} from 'react-router-dom';\nimport {Skeleton} from '@patternfly/react-core';\nimport {getTagDetailPath} from 'src/routes/NavigationPath';\nimport {TabIndex} from 'src/routes/TagDetails/Types';\nimport {VulnerabilitySeverity} from 'src/resources/TagResource';\nimport {\n  ExclamationTriangleIcon,\n  CheckCircleIcon,\n} from '@patternfly/react-icons';\nimport {getSeverityColor} from 'src/libs/utils';\nimport {\n  SecurityDetailsErrorState,\n  SecurityDetailsState,\n} from 'src/atoms/SecurityDetailsState';\nimport {useResetRecoilState, useSetRecoilState} from 'recoil';\nimport {addDisplayError, isErrorString} from 'src/resources/ErrorHandling';\n\nenum Variant {\n  condensed = 'condensed',\n  full = 'full',\n}\n\nexport default function SecurityDetails(props: SecurityDetailsProps) {\n  const [status, setStatus] = useState<string>();\n  const [hasFeatures, setHasFeatures] = useState<boolean>(false);\n  const [vulnCount, setVulnCount] =\n    useState<Map<VulnerabilitySeverity, number>>();\n  const [loading, setLoading] = useState<boolean>(true);\n  const [err, setErr] = useState<string>();\n  const setGlobalErr = useSetRecoilState(SecurityDetailsErrorState);\n  const setGlobalData = useSetRecoilState(SecurityDetailsState);\n  const location = useLocation();\n\n  const severityOrder = [\n    VulnerabilitySeverity.Critical,\n    VulnerabilitySeverity.High,\n    VulnerabilitySeverity.Medium,\n    VulnerabilitySeverity.Low,\n    VulnerabilitySeverity.Negligible,\n    VulnerabilitySeverity.Unknown,\n  ];\n\n  const getHighestSeverity = () => {\n    for (const severity of severityOrder) {\n      if (vulnCount.get(severity) != null && vulnCount.get(severity) > 0) {\n        return severity;\n      }\n    }\n  };\n\n  useEffect(() => {\n    if (props.digest !== '') {\n      (async () => {\n        try {\n          setLoading(true);\n          const securityDetails: SecurityDetailsResponse =\n            await getSecurityDetails(props.org, props.repo, props.digest);\n          const vulns = new Map<VulnerabilitySeverity, number>();\n          if (securityDetails.data) {\n            if (props.cacheResults) setGlobalData(securityDetails);\n            setHasFeatures(securityDetails.data.Layer.Features.length > 0);\n            for (const feature of securityDetails.data.Layer.Features) {\n              if (feature.Vulnerabilities) {\n                for (const vuln of feature.Vulnerabilities) {\n                  if (vuln.Severity in VulnerabilitySeverity) {\n                    if (vulns.has(vuln.Severity)) {\n                      vulns.set(vuln.Severity, vulns.get(vuln.Severity) + 1);\n                    } else {\n                      vulns.set(vuln.Severity, 1);\n                    }\n                  }\n                }\n              }\n            }\n          }\n          setStatus(securityDetails.status);\n          setVulnCount(vulns);\n          setLoading(false);\n        } catch (error: any) {\n          console.error(error);\n          const message = addDisplayError(\n            'Unable to get security details',\n            error,\n          );\n          if (props.cacheResults) setGlobalErr(message);\n          setErr(message);\n          setLoading(false);\n        }\n      })();\n    }\n  }, [props.digest]);\n  const queryParams = new Map<string, string>([\n    ['tab', TabIndex.SecurityReport],\n    ['digest', props.digest],\n  ]);\n\n  if (loading) {\n    return <Skeleton width=\"50%\"></Skeleton>;\n  }\n\n  if (isErrorString(err)) {\n    return <>Unable to get security details</>;\n  }\n\n  if (status === 'queued') {\n    return <div>Queued</div>;\n  } else if (status === 'failed') {\n    return <div>Failed</div>;\n  } else if (status === 'unsupported' || !hasFeatures) {\n    return <div>Unsupported</div>;\n  }\n\n  if (vulnCount.size === 0) {\n    return (\n      <Link\n        to={getTagDetailPath(\n          location.pathname,\n          props.org,\n          props.repo,\n          props.tag,\n          queryParams,\n        )}\n        className={'pf-u-display-inline-flex pf-u-align-items-center'}\n        style={{textDecoration: 'none'}}\n      >\n        <CheckCircleIcon\n          color=\"green\"\n          style={{\n            marginRight: '5px',\n            marginBottom: '4px',\n          }}\n        />\n        <span>None Detected</span>\n      </Link>\n    );\n  }\n\n  if (props.variant === Variant.condensed) {\n    const highestSeverity: VulnerabilitySeverity = getHighestSeverity();\n    return (\n      <Link\n        to={getTagDetailPath(\n          location.pathname,\n          props.org,\n          props.repo,\n          props.tag,\n          queryParams,\n        )}\n        className={'pf-u-display-inline-flex pf-u-align-items-center'}\n        style={{textDecoration: 'none'}}\n      >\n        <ExclamationTriangleIcon\n          color={getSeverityColor(highestSeverity)}\n          style={{\n            marginRight: '5px',\n            marginBottom: '4px',\n          }}\n        />\n        <span>\n          <b>{vulnCount.get(highestSeverity)}</b> {highestSeverity.toString()}\n        </span>\n      </Link>\n    );\n  }\n\n  const counts = severityOrder\n    .filter((severity) => vulnCount.has(severity))\n    .map((severity) => {\n      return (\n        <div\n          key={severity.toString()}\n          className={'pf-u-display-flex pf-u-align-items-center'}\n        >\n          <ExclamationTriangleIcon\n            color={getSeverityColor(severity)}\n            style={{\n              marginRight: '5px',\n              marginBottom: '3px',\n            }}\n          />\n          <span>\n            <b>{vulnCount.get(severity)}</b> {severity.toString()}\n          </span>\n        </div>\n      );\n    });\n  return (\n    <Link\n      to={getTagDetailPath(\n        location.pathname,\n        props.org,\n        props.repo,\n        props.tag,\n        queryParams,\n      )}\n      style={{textDecoration: 'none'}}\n    >\n      {counts}\n    </Link>\n  );\n}\n\nexport interface SecurityDetailsProps {\n  org: string;\n  repo: string;\n  tag: string;\n  digest: string;\n  variant?: Variant | 'condensed' | 'full';\n  cacheResults?: boolean;\n}\n","import {atom} from 'recoil';\nimport {SecurityDetailsResponse} from 'src/resources/TagResource';\n\nexport const SecurityDetailsState = atom<SecurityDetailsResponse>({\n  key: 'securityDetailsState',\n  default: null,\n});\n\nexport const SecurityDetailsErrorState = atom<string>({\n  key: 'securityDetailsErrorState',\n  default: null,\n});\n","import {Skeleton} from '@patternfly/react-core';\nimport {useEffect, useState} from 'react';\nimport {\n  getManifestByDigest,\n  ManifestByDigestResponse,\n} from 'src/resources/TagResource';\nimport prettyBytes from 'pretty-bytes';\n\nexport default function ImageSize(props: ImageSizeProps) {\n  const [size, setSize] = useState<number>(null);\n  const [loading, setLoading] = useState<boolean>(true);\n  const [err, setErr] = useState<boolean>(false);\n\n  useEffect(() => {\n    (async () => {\n      try {\n        const manifestResp: ManifestByDigestResponse =\n          await getManifestByDigest(props.org, props.repo, props.digest);\n        const calculatedSizeMesnifestResp = manifestResp.layers\n          ? manifestResp.layers.reduce(\n              (prev, curr) => prev + curr.compressed_size,\n              0,\n            )\n          : 0;\n        setSize(calculatedSizeMesnifestResp);\n      } catch (err) {\n        setErr(true);\n      } finally {\n        setLoading(false);\n      }\n    })();\n  }, [props.digest]);\n\n  if (loading) {\n    return <Skeleton />;\n  }\n  if (err) {\n    return <>Error</>;\n  }\n\n  // Behavior based on old UI\n  if (size === 0) {\n    return <>Unknown</>;\n  }\n\n  return <>{prettyBytes(size)}</>;\n}\n\ninterface ImageSizeProps {\n  org: string;\n  repo: string;\n  digest: string;\n  // TODO: Add in option to provide an already existing manifest,\n  //   remove the need to make the call again.\n  // manifest?: Manifest;\n}\n","import {Spinner} from '@patternfly/react-core';\nimport {\n  ExpandableRowContent,\n  TableComposable,\n  Thead,\n  Tr,\n  Th,\n  Tbody,\n  Td,\n} from '@patternfly/react-table';\nimport prettyBytes from 'pretty-bytes';\nimport {useState} from 'react';\nimport {Tag, Manifest} from 'src/resources/TagResource';\nimport {useResetRecoilState} from 'recoil';\nimport {Link, useLocation} from 'react-router-dom';\nimport {getTagDetailPath} from 'src/routes/NavigationPath';\nimport TablePopover from './TablePopover';\nimport SecurityDetails from './SecurityDetails';\nimport {formatDate} from 'src/libs/utils';\nimport {SecurityDetailsState} from 'src/atoms/SecurityDetailsState';\nimport ColumnNames from './ColumnNames';\nimport {DownloadIcon} from '@patternfly/react-icons';\nimport ImageSize from 'src/components/Table/ImageSize';\n\nfunction SubRow(props: SubRowProps) {\n  return (\n    <Tr\n      key={`${props.manifest.platform.os}-${props.manifest.platform.architecture}-${props.rowIndex}`}\n      isExpanded={props.isTagExpanded(props.tag)}\n    >\n      <Td />\n      {props.manifest.platform ? (\n        <Td dataLabel=\"platform\" noPadding={false} colSpan={2}>\n          <ExpandableRowContent>\n            <Link\n              to={getTagDetailPath(\n                location.pathname,\n                props.org,\n                props.repo,\n                props.tag.name,\n                new Map([['digest', props.manifest.digest]]),\n              )}\n            >\n              {`${props.manifest.platform.os} on ${props.manifest.platform.architecture}`}\n            </Link>\n          </ExpandableRowContent>\n        </Td>\n      ) : (\n        <Td />\n      )}\n      <Td dataLabel=\"security\" noPadding={false} colSpan={1}>\n        <ExpandableRowContent>\n          <SecurityDetails\n            org={props.org}\n            repo={props.repo}\n            digest={props.manifest.digest}\n            tag={props.tag.name}\n            variant=\"condensed\"\n          />\n        </ExpandableRowContent>\n      </Td>\n      <Td dataLabel=\"size\" noPadding={false} colSpan={3}>\n        <ExpandableRowContent>\n          <ImageSize\n            org={props.org}\n            repo={props.repo}\n            digest={props.manifest.digest}\n          />\n        </ExpandableRowContent>\n      </Td>\n      {props.manifest.digest ? (\n        <Td dataLabel=\"digest\" noPadding={false} colSpan={1}>\n          <ExpandableRowContent>\n            {props.manifest.digest.substring(0, 19)}\n          </ExpandableRowContent>\n        </Td>\n      ) : (\n        <Td />\n      )}\n    </Tr>\n  );\n}\n\nfunction TagsTableRow(props: RowProps) {\n  const tag = props.tag;\n  const rowIndex = props.rowIndex;\n  let size =\n    typeof tag.manifest_list != 'undefined' ? 'N/A' : prettyBytes(tag.size);\n\n  // Behavior taken from previous UI\n  if (tag.size === 0) {\n    size = 'Unknown';\n  }\n\n  // Reset SecurityDetailsState so that loading skeletons appear when viewing report\n  const emptySecurityDetails = useResetRecoilState(SecurityDetailsState);\n  const resetSecurityDetails = () => emptySecurityDetails();\n\n  const location = useLocation();\n\n  return (\n    <Tbody\n      data-testid=\"table-entry\"\n      key={tag.name}\n      isExpanded={props.isTagExpanded(tag)}\n    >\n      <Tr>\n        <Td\n          expand={\n            tag.is_manifest_list\n              ? {\n                  rowIndex,\n                  isExpanded: props.isTagExpanded(tag),\n                  onToggle: () =>\n                    props.setTagExpanded(tag, !props.isTagExpanded(tag)),\n                }\n              : undefined\n          }\n        />\n        <Td\n          select={{\n            rowIndex,\n            onSelect: (_event, isSelecting) =>\n              props.selectTag(tag, rowIndex, isSelecting),\n            isSelected: props.selectedTags.includes(tag.name),\n          }}\n        />\n        <Td dataLabel={ColumnNames.name}>\n          <Link\n            to={getTagDetailPath(\n              location.pathname,\n              props.org,\n              props.repo,\n              tag.name,\n            )}\n            onClick={resetSecurityDetails}\n          >\n            {tag.name}\n          </Link>\n        </Td>\n        <Td dataLabel={ColumnNames.security}>\n          {tag.is_manifest_list ? (\n            'See Child Manifests'\n          ) : (\n            <SecurityDetails\n              org={props.org}\n              repo={props.repo}\n              digest={tag.manifest_digest}\n              tag={tag.name}\n              variant=\"condensed\"\n            />\n          )}\n        </Td>\n        <Td dataLabel={ColumnNames.size}>{size}</Td>\n        <Td dataLabel={ColumnNames.lastModified}>\n          {formatDate(tag.last_modified)}\n        </Td>\n        <Td dataLabel={ColumnNames.expires}>{tag.expiration ?? 'Never'}</Td>\n        <Td dataLabel={ColumnNames.manifest}>\n          {tag.manifest_digest.substring(0, 19)}\n        </Td>\n        <Td dataLabel={ColumnNames.pull}>\n          <TablePopover\n            org={props.org}\n            repo={props.repo}\n            tag={tag.name}\n            digest={tag.manifest_digest}\n          >\n            <DownloadIcon />\n          </TablePopover>\n        </Td>\n      </Tr>\n      {tag.manifest_list\n        ? tag.manifest_list.manifests.map((manifest, rowIndex) => (\n            <SubRow\n              key={rowIndex}\n              org={props.org}\n              repo={props.repo}\n              tag={tag}\n              rowIndex={rowIndex}\n              manifest={manifest}\n              isTagExpanded={props.isTagExpanded}\n            />\n          ))\n        : null}\n    </Tbody>\n  );\n}\n\nexport default function TagsTable(props: TableProps) {\n  // Control expanded tags\n  const [expandedTags, setExpandedTags] = useState<string[]>([]);\n  const setTagExpanded = (tag: Tag, isExpanding = true) =>\n    setExpandedTags((prevExpanded) => {\n      // If expanding, add tag name to list otherwise return list without tag name\n      // Filter accounts for cases where tag name is already in list when isExpanding == true\n      const otherExpandedtagNames = prevExpanded.filter((r) => r !== tag.name);\n      return isExpanding\n        ? [...otherExpandedtagNames, tag.name]\n        : otherExpandedtagNames;\n    });\n  const isTagExpanded = (tag: Tag) => expandedTags.includes(tag.name);\n\n  return (\n    <>\n      <TableComposable aria-label=\"Expandable table\">\n        <Thead>\n          <Tr>\n            <Th />\n            <Th />\n            <Th>Tag</Th>\n            <Th>Security</Th>\n            <Th>Size</Th>\n            <Th>Last Modified</Th>\n            <Th>Expires</Th>\n            <Th>Manifest</Th>\n            <Th>Pull</Th>\n          </Tr>\n        </Thead>\n        {props.tags.map((tag: Tag, rowIndex: number) => (\n          <TagsTableRow\n            key={rowIndex}\n            org={props.org}\n            repo={props.repo}\n            tag={tag}\n            rowIndex={rowIndex}\n            selectedTags={props.selectedTags}\n            isTagExpanded={isTagExpanded}\n            setTagExpanded={setTagExpanded}\n            selectTag={props.selectTag}\n          />\n        ))}\n      </TableComposable>\n\n      {props.loading ? <Spinner isSVG size=\"lg\" /> : null}\n      {props.tags.length == 0 && !props.loading ? (\n        <div>This repository is empty.</div>\n      ) : null}\n    </>\n  );\n}\n\ninterface TableProps {\n  org: string;\n  repo: string;\n  tags: Tag[];\n  loading: boolean;\n  selectAllTags: (isSelecting: boolean) => void;\n  selectedTags: string[];\n  selectTag: (tag: Tag, rowIndex?: number, isSelecting?: boolean) => void;\n}\n\ninterface RowProps {\n  org: string;\n  repo: string;\n  tag: Tag;\n  rowIndex: number;\n  selectedTags: string[];\n  isTagExpanded: (tag: Tag) => boolean;\n  setTagExpanded: (tag: Tag, isExpanding?: boolean) => void;\n  selectTag: (tag: Tag, rowIndex?: number, isSelecting?: boolean) => void;\n}\n\ninterface SubRowProps {\n  org: string;\n  repo: string;\n  tag: Tag;\n  rowIndex: number;\n  manifest: Manifest;\n  isTagExpanded: (tag: Tag) => boolean;\n}\n","import React from 'react';\n\n// Function getDerivedStateFromError required for Error Boundaries\n// are only available on class components\nclass ErrorBoundary extends React.Component<\n  ErrorBoundryProps,\n  ErrorBoundryState\n> {\n  constructor(props: ErrorBoundryProps) {\n    super(props);\n    this.state = {\n      hasError: props.hasError,\n      fallback: props.fallback,\n    };\n  }\n\n  // Capture the error that occured when rendering child component\n  static getDerivedStateFromError(error) {\n    console.error(error);\n    return {hasError: true};\n  }\n\n  render() {\n    if (this.state.hasError || this.props.hasError) {\n      return <>{this.props.fallback}</>;\n    }\n    return <>{this.props.children}</>;\n  }\n}\n\ninterface ErrorBoundryState {\n  hasError: boolean;\n  fallback: React.ReactNode;\n  children?: React.ReactNode;\n}\n\ninterface ErrorBoundryProps {\n  fallback: React.ReactNode;\n  hasError?: boolean;\n  children?: React.ReactNode;\n}\n\nexport default ErrorBoundary;\n","import {TagsToolbar} from './TagsToolbar';\nimport TagsTable from './TagsTable';\nimport {useState, useEffect} from 'react';\nimport {\n  searchTagsFilterState,\n  searchTagsState,\n  selectedTagsState,\n} from 'src/atoms/TagListState';\nimport {\n  Page,\n  PageSection,\n  PageSectionVariants,\n  PanelFooter,\n} from '@patternfly/react-core';\nimport {useRecoilState, useRecoilValue, useResetRecoilState} from 'recoil';\nimport {\n  Tag,\n  TagsResponse,\n  getTags,\n  getManifestByDigest,\n  ManifestByDigestResponse,\n} from 'src/resources/TagResource';\nimport {addDisplayError, isErrorString} from 'src/resources/ErrorHandling';\nimport ErrorBoundary from 'src/components/errors/ErrorBoundary';\nimport RequestError from 'src/components/errors/RequestError';\nimport Empty from 'src/components/empty/Empty';\nimport {CubesIcon} from '@patternfly/react-icons';\nimport {ToolbarPagination} from 'src/components/toolbar/ToolbarPagination';\nimport {RepositoryDetails} from 'src/resources/RepositoryResource';\n\nexport default function TagsList(props: TagsProps) {\n  const [tags, setTags] = useState<Tag[]>([]);\n  const [loading, setLoading] = useState<boolean>(true);\n  const [err, setErr] = useState<string>();\n  const resetSelectedTags = useResetRecoilState(selectedTagsState);\n  const searchFilter = useRecoilValue(searchTagsFilterState);\n  const resetSearch = useResetRecoilState(searchTagsState);\n\n  const filteredTags: Tag[] = searchFilter ? tags.filter(searchFilter) : tags;\n\n  // Pagination related states\n  const [perPage, setPerPage] = useState<number>(10);\n  const [page, setPage] = useState<number>(1);\n  const paginatedTags: Tag[] = filteredTags.slice(\n    (page - 1) * perPage,\n    page * perPage,\n  );\n\n  // Control selected tags\n  const [selectedTags, setSelectedTags] = useRecoilState(selectedTagsState);\n  const selectAllTags = (isSelecting = true) => {\n    setSelectedTags(isSelecting ? tags.map((t) => t.name) : []);\n  };\n  const selectTag = (tag: Tag, rowIndex = 0, isSelecting = true) =>\n    setSelectedTags((prevSelected) => {\n      const otherSelectedtagNames = prevSelected.filter((r) => r !== tag.name);\n      return isSelecting\n        ? [...otherSelectedtagNames, tag.name]\n        : otherSelectedtagNames;\n    });\n\n  const loadTags = async () => {\n    const getManifest = async (tag: Tag) => {\n      const manifestResp: ManifestByDigestResponse = await getManifestByDigest(\n        props.organization,\n        props.repository,\n        tag.manifest_digest,\n      );\n      tag.manifest_list = JSON.parse(manifestResp.manifest_data);\n    };\n    let page = 1;\n    let hasAdditional = false;\n    try {\n      do {\n        const resp: TagsResponse = await getTags(\n          props.organization,\n          props.repository,\n          page,\n        );\n        await Promise.all(\n          resp.tags.map((tag: Tag) =>\n            tag.is_manifest_list ? getManifest(tag) : null,\n          ),\n        );\n        if (page == 1) {\n          setTags(resp.tags);\n        } else {\n          setTags((currentTags) => [...currentTags, ...resp.tags]);\n        }\n        hasAdditional = resp.has_additional;\n        page++;\n        setLoading(false);\n      } while (hasAdditional);\n    } catch (error: any) {\n      console.error(error);\n      setLoading(false);\n      setErr(addDisplayError('Unable to get tags', error));\n    }\n  };\n\n  useEffect(() => {\n    resetSearch();\n    resetSelectedTags();\n    loadTags();\n  }, []);\n\n  if (!loading && !tags?.length && !isErrorString(err)) {\n    return (\n      <Empty\n        title=\"There are no viewable tags for this repository\"\n        icon={CubesIcon}\n        body=\"No tags have been pushed to this repository. If you have the correct permissions, you may push tags to this repository.\"\n      />\n    );\n  }\n\n  return (\n    <Page>\n      <PageSection variant={PageSectionVariants.light}>\n        <ErrorBoundary\n          hasError={isErrorString(err)}\n          fallback={<RequestError message={err} />}\n        >\n          <TagsToolbar\n            organization={props.organization}\n            repository={props.repository}\n            tagCount={filteredTags.length}\n            loadTags={loadTags}\n            TagList={filteredTags}\n            paginatedTags={paginatedTags}\n            perPage={perPage}\n            page={page}\n            setPage={setPage}\n            setPerPage={setPerPage}\n            selectTag={selectTag}\n            repoDetails={props.repoDetails}\n          />\n          <TagsTable\n            org={props.organization}\n            repo={props.repository}\n            tags={paginatedTags}\n            loading={loading}\n            selectAllTags={selectAllTags}\n            selectedTags={selectedTags}\n            selectTag={selectTag}\n          />\n        </ErrorBoundary>\n        <PanelFooter>\n          <ToolbarPagination\n            itemsList={filteredTags}\n            perPage={perPage}\n            page={page}\n            setPage={setPage}\n            setPerPage={setPerPage}\n            bottom={true}\n          />\n        </PanelFooter>\n      </PageSection>\n    </Page>\n  );\n}\n\ntype TagsProps = {\n  organization: string;\n  repository: string;\n  repoDetails: RepositoryDetails;\n};\n","// Renders conditional components in a more markup friendly way\nexport default function Conditional(props: ConditionalProps) {\n  return props.if ? <>{props.children}</> : null;\n}\n\ninterface ConditionalProps {\n  children: React.ReactNode;\n  if: boolean;\n}\n","export enum PermissionsColumnNames {\n  account = 'Account',\n  type = 'Type',\n  permissions = 'Permissions',\n}\n\nexport enum NotificationsColumnNames {\n  title = 'Title',\n  event = 'Event',\n  notification = 'Notification',\n  status = 'Status',\n}\n","import {useQuery} from '@tanstack/react-query';\nimport {useState} from 'react';\nimport {SearchState} from 'src/components/toolbar/SearchTypes';\nimport {\n  fetchTeamRepoPermissions,\n  fetchUserRepoPermissions,\n  RepoMember,\n} from 'src/resources/RepositoryResource';\nimport {PermissionsColumnNames} from 'src/routes/RepositoryDetails/Settings/ColumnNames';\n\nenum MemberType {\n  user = 'user',\n  robot = 'robot',\n  team = 'team',\n}\n\nexport function useRepositoryPermissions(org: string, repo: string) {\n  const [page, setPage] = useState(1);\n  const [perPage, setPerPage] = useState(10);\n  const [search, setSearch] = useState<SearchState>({\n    query: '',\n    field: PermissionsColumnNames.account,\n  });\n\n  const {\n    data: userRoles,\n    isError: errorLoadingUserRoles,\n    isLoading: loadingUserRoles,\n    isPlaceholderData: isUserPlaceholderData,\n  } = useQuery(\n    ['userrepopermissions', org, repo],\n    () => fetchUserRepoPermissions(org, repo),\n    {\n      placeholderData: {},\n    },\n  );\n\n  const {\n    data: teamRoles,\n    isError: errorLoadingTeamRoles,\n    isLoading: loadingTeamRoles,\n    isPlaceholderData: isTeamPlaceholderData,\n  } = useQuery(\n    ['teamrepopermissions', org, repo],\n    () => fetchTeamRepoPermissions(org, repo),\n    {\n      placeholderData: {},\n    },\n  );\n\n  const members: RepoMember[] = [];\n  for (const [name, roleData] of Object.entries(userRoles)) {\n    const type: MemberType = roleData.is_robot\n      ? MemberType.robot\n      : MemberType.user;\n    members.push({\n      org: org,\n      repo: repo,\n      name: name,\n      type: type,\n      role: roleData.role,\n    });\n  }\n  for (const [name, roleData] of Object.entries(teamRoles)) {\n    members.push({\n      org: org,\n      repo: repo,\n      name: name,\n      type: MemberType.team,\n      role: roleData.role,\n    });\n  }\n\n  const filteredMembers =\n    search.query !== ''\n      ? members?.filter((role) => role.name.includes(search.query))\n      : members;\n\n  const paginatedMembers = filteredMembers?.slice(\n    page * perPage - perPage,\n    page * perPage - perPage + perPage,\n  );\n\n  return {\n    loading:\n      loadingUserRoles ||\n      loadingTeamRoles ||\n      isUserPlaceholderData ||\n      isTeamPlaceholderData,\n    error: errorLoadingUserRoles || errorLoadingTeamRoles,\n    members: members,\n    paginatedMembers: paginatedMembers,\n\n    page: page,\n    setPage: setPage,\n    perPage: perPage,\n    setPerPage: setPerPage,\n\n    search: search,\n    setSearch: setSearch,\n  };\n}\n","import {\n  Alert,\n  AlertActionCloseButton,\n  Button,\n  Modal,\n  ModalVariant,\n  TextInput,\n} from '@patternfly/react-core';\nimport {useState} from 'react';\nimport {useNavigate} from 'react-router-dom';\nimport Conditional from 'src/components/empty/Conditional';\nimport {useDeleteRepositories} from 'src/hooks/UseDeleteRepositories';\n\nexport default function DeleteRepository({org, repo}: DeleteRepositoryProps) {\n  const [isModalOpen, setIsModalOpen] = useState<boolean>(false);\n  const [repoNameInput, setRepoNameInput] = useState<string>('');\n  const [isError, setIsError] = useState<boolean>(false);\n  const navigate = useNavigate();\n  const {deleteRepositories} = useDeleteRepositories({\n    onSuccess: () => {\n      navigate('/repository');\n    },\n    onError: () => {\n      setIsError(true);\n    },\n  });\n\n  return (\n    <>\n      <Modal\n        variant={ModalVariant.small}\n        title=\"Delete Repository?\"\n        id=\"delete-repository-modal\"\n        isOpen={isModalOpen}\n        onClose={() => setIsModalOpen(false)}\n        actions={[\n          <Button\n            key=\"confirm\"\n            variant=\"danger\"\n            isDisabled={`${org}/${repo}` != repoNameInput}\n            onClick={() => deleteRepositories([{namespace: org, name: repo}])}\n          >\n            Delete\n          </Button>,\n          <Button\n            key=\"cancel\"\n            variant=\"link\"\n            onClick={() => {\n              setIsModalOpen(!isModalOpen);\n            }}\n          >\n            Cancel\n          </Button>,\n        ]}\n      >\n        <Conditional if={isError}>\n          <Alert\n            isInline\n            variant=\"danger\"\n            title=\"Unable to delete repository\"\n            actionClose={\n              <AlertActionCloseButton onClose={() => setIsError(false)} />\n            }\n          />\n        </Conditional>\n        <Alert\n          isInline\n          variant=\"danger\"\n          title={`You are requesting to delete the repository ${org}/${repo}. This action is non-reversable.`}\n          style={{marginBottom: '1em'}}\n        />\n        <div>\n          You must type {org}/{repo} below to confirm deletion:\n        </div>\n        <TextInput\n          value={repoNameInput}\n          type=\"text\"\n          onChange={(value) => setRepoNameInput(value.trim())}\n          aria-label=\"repo-delete-name-input\"\n          placeholder=\"Enter repository here\"\n        />\n      </Modal>\n      <Alert\n        isInline\n        variant=\"danger\"\n        title=\"Deleting a repository cannot be undone. Here be dragons!\"\n        style={{marginBottom: '1em'}}\n      />\n      <Button variant=\"danger\" onClick={() => setIsModalOpen(true)}>\n        Delete Repository\n      </Button>\n    </>\n  );\n}\n\ninterface DeleteRepositoryProps {\n  org: string;\n  repo: string;\n}\n","export enum DrawerContentType {\n  None,\n  AddPermission,\n  CreateNotification,\n}\n","import {\n  Menu as PFMenu,\n  MenuList,\n  MenuToggle,\n  Popper,\n} from '@patternfly/react-core';\nimport React, {useEffect, useRef} from 'react';\n\nexport default function Menu({isOpen, setIsOpen, ...props}: MenuProps) {\n  const menuRef = useRef<HTMLDivElement>(null);\n  const toggleRef = useRef<HTMLButtonElement>(null);\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const onToggleClick = (ev: React.MouseEvent) => {\n    ev.stopPropagation(); // Stop handleClickOutside from handling\n    setTimeout(() => {\n      if (menuRef.current) {\n        const firstElement = menuRef.current.querySelector(\n          'li > button:not(:disabled), li > a:not(:disabled)',\n        );\n        firstElement && (firstElement as HTMLElement).focus();\n      }\n    }, 0);\n    setIsOpen(!isOpen);\n  };\n\n  const handleMenuKeys = (event: KeyboardEvent) => {\n    if (!isOpen) {\n      return;\n    }\n    if (\n      menuRef.current?.contains(event.target as Node) ||\n      toggleRef.current?.contains(event.target as Node)\n    ) {\n      if (event.key === 'Escape' || event.key === 'Tab') {\n        setIsOpen(!isOpen);\n        toggleRef.current?.focus();\n      }\n    }\n  };\n\n  const handleClickOutside = (event: MouseEvent) => {\n    if (isOpen && !menuRef.current?.contains(event.target as Node)) {\n      setIsOpen(false);\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener('keydown', handleMenuKeys);\n    window.addEventListener('click', handleClickOutside);\n    return () => {\n      window.removeEventListener('keydown', handleMenuKeys);\n      window.removeEventListener('click', handleClickOutside);\n    };\n  }, [isOpen, menuRef]);\n\n  return (\n    <div ref={containerRef}>\n      <Popper\n        trigger={\n          <MenuToggle onClick={onToggleClick} isExpanded={isOpen}>\n            {props.toggle}\n          </MenuToggle>\n        }\n        popper={\n          <PFMenu ref={menuRef} containsFlyout>\n            <MenuList>{props.items}</MenuList>\n          </PFMenu>\n        }\n        appendTo={containerRef.current || undefined}\n        isVisible={isOpen}\n        popperMatchesTriggerWidth={false}\n      />\n    </div>\n  );\n}\n\ninterface MenuProps {\n  items: React.ReactNode[];\n  toggle: string;\n  isOpen: boolean;\n  setIsOpen: (isOpen: boolean) => void;\n}\n","import {useMutation, useQueryClient} from '@tanstack/react-query';\nimport {\n  bulkDeleteRepoPermissions,\n  bulkSetRepoPermissions,\n  RepoMember,\n  RepoRole,\n} from 'src/resources/RepositoryResource';\n\nexport function useUpdateRepositoryPermissions(org: string, repo: string) {\n  const queryClient = useQueryClient();\n  const {\n    mutate: setPermissions,\n    isError: errorSetPermissions,\n    isSuccess: successSetPermissions,\n    reset: resetSetRepoPermissions,\n  } = useMutation(\n    async ({\n      members,\n      newRole,\n    }: {\n      members: RepoMember[] | RepoMember;\n      newRole: RepoRole;\n    }) => {\n      members = Array.isArray(members) ? members : [members];\n      return bulkSetRepoPermissions(members, newRole);\n    },\n    {\n      onSuccess: (_, variables) => {\n        queryClient.invalidateQueries(['teamrepopermissions']);\n        queryClient.invalidateQueries(['userrepopermissions']);\n      },\n    },\n  );\n\n  const {\n    mutate: deletePermissions,\n    isError: errorDeletePermissions,\n    isSuccess: successDeletePermissions,\n    reset: resetDeleteRepoPermissions,\n  } = useMutation(\n    async (members: RepoMember[] | RepoMember) => {\n      members = Array.isArray(members) ? members : [members];\n      return bulkDeleteRepoPermissions(members);\n    },\n    {\n      onSuccess: (_, variables) => {\n        queryClient.invalidateQueries(['teamrepopermissions']);\n        queryClient.invalidateQueries(['userrepopermissions']);\n      },\n    },\n  );\n\n  return {\n    setPermissions: setPermissions,\n    errorSetPermissions: errorSetPermissions,\n    successSetPermissions: successSetPermissions,\n    resetSetRepoPermissions: resetSetRepoPermissions,\n\n    deletePermissions: deletePermissions,\n    errorDeletePermissions: errorDeletePermissions,\n    successDeletePermissions: successDeletePermissions,\n    resetDeleteRepoPermissions: resetDeleteRepoPermissions,\n  };\n}\n","import {RepoRole} from 'src/resources/RepositoryResource';\n\nexport interface RoleOption {\n  name: string;\n  description: string;\n  role: RepoRole;\n}\n\nexport const roles: RoleOption[] = [\n  {\n    name: 'Read',\n    description: 'Can view and pull from the repository',\n    role: RepoRole.read,\n  },\n  {\n    name: 'Write',\n    description: 'Can view, pull, and push to the repository',\n    role: RepoRole.write,\n  },\n  {\n    name: 'Admin',\n    description: 'Full admin access to the organization',\n    role: RepoRole.admin,\n  },\n];\n","import {\n  Alert,\n  AlertActionCloseButton,\n  AlertGroup,\n  DropdownItem,\n  Menu,\n  MenuContent,\n  MenuItem,\n  MenuList,\n} from '@patternfly/react-core';\nimport {useEffect} from 'react';\nimport Conditional from 'src/components/empty/Conditional';\nimport {useUpdateRepositoryPermissions} from 'src/hooks/UseUpdateRepositoryPermissions';\nimport {RepoMember} from 'src/resources/RepositoryResource';\nimport {roles} from './Types';\n\nexport default function ChangePermissions(props: ChangePermissionsProps) {\n  const {\n    setPermissions,\n    errorSetPermissions: error,\n    successSetPermissions: success,\n    resetSetRepoPermissions,\n  } = useUpdateRepositoryPermissions(props.org, props.repo);\n\n  useEffect(() => {\n    if (success) {\n      props.deselectAll();\n      props.setIsMenuOpen(false);\n    }\n  }, [success]);\n\n  return (\n    <>\n      <Conditional if={error}>\n        <AlertGroup isToast isLiveRegion>\n          <Alert\n            variant={'danger'}\n            title={`Unable to set repository permissions`}\n            actionClose={\n              <AlertActionCloseButton onClose={resetSetRepoPermissions} />\n            }\n          />\n        </AlertGroup>\n      </Conditional>\n      <MenuItem\n        id=\"change-permissions-menu\"\n        flyoutMenu={\n          <Menu key={1}>\n            <MenuContent>\n              <MenuList>\n                {roles.map((role) => (\n                  <MenuItem\n                    key={role.name}\n                    description={role.description}\n                    onClick={() =>\n                      setPermissions({\n                        members: props.selectedItems,\n                        newRole: role.role,\n                      })\n                    }\n                    style={{width: 'max-content'}}\n                  >\n                    {role.name}\n                  </MenuItem>\n                ))}\n              </MenuList>\n            </MenuContent>\n          </Menu>\n        }\n        itemId=\"next-menu-root\"\n      >\n        Change Permissions\n      </MenuItem>\n    </>\n  );\n}\n\nexport interface ChangePermissionsProps {\n  org: string;\n  repo: string;\n  selectedItems: RepoMember[];\n  deselectAll: () => void;\n  setIsMenuOpen: (isOpen: boolean) => void;\n}\n","import {\n  Alert,\n  AlertActionCloseButton,\n  AlertGroup,\n  MenuItem,\n} from '@patternfly/react-core';\nimport {useEffect} from 'react';\nimport Conditional from 'src/components/empty/Conditional';\nimport {useUpdateRepositoryPermissions} from 'src/hooks/UseUpdateRepositoryPermissions';\nimport {RepoMember} from 'src/resources/RepositoryResource';\n\nexport default function Delete(props: DeleteProps) {\n  const {\n    deletePermissions,\n    errorDeletePermissions: error,\n    successDeletePermissions: success,\n    resetDeleteRepoPermissions,\n  } = useUpdateRepositoryPermissions(props.org, props.repo);\n\n  useEffect(() => {\n    if (success) {\n      props.deselectAll();\n      props.setIsMenuOpen(false);\n    }\n  }, [success]);\n\n  return (\n    <>\n      <Conditional if={error}>\n        <AlertGroup isToast isLiveRegion>\n          <Alert\n            variant=\"danger\"\n            title=\"Unable to bulk delete repository permissions\"\n            actionClose={\n              <AlertActionCloseButton onClose={resetDeleteRepoPermissions} />\n            }\n          />\n        </AlertGroup>\n      </Conditional>\n      <MenuItem\n        id=\"bulk-delete-permissions\"\n        onClick={() => {\n          deletePermissions(props.selectedItems);\n        }}\n      >\n        Delete\n      </MenuItem>\n    </>\n  );\n}\n\nexport interface DeleteProps {\n  org: string;\n  repo: string;\n  selectedItems: RepoMember[];\n  deselectAll: () => void;\n  setIsMenuOpen: (isOpen: boolean) => void;\n}\n","import {\n  Button,\n  Toolbar,\n  ToolbarContent,\n  ToolbarItem,\n} from '@patternfly/react-core';\nimport {useState} from 'react';\nimport Conditional from 'src/components/empty/Conditional';\nimport Menu from 'src/components/Table/Menu';\nimport {DropdownCheckbox} from 'src/components/toolbar/DropdownCheckbox';\nimport {SearchDropdown} from 'src/components/toolbar/SearchDropdown';\nimport {SearchInput} from 'src/components/toolbar/SearchInput';\nimport {SearchState} from 'src/components/toolbar/SearchTypes';\nimport {ToolbarPagination} from 'src/components/toolbar/ToolbarPagination';\nimport {RepoMember} from 'src/resources/RepositoryResource';\nimport {DrawerContentType} from '../Types';\nimport ChangePermissions from './PermissionsActionsChangePermissions';\nimport Delete from './PermissionsActionsDelete';\n\nexport default function PermissionsToolbar(props: PermissionsToolbarProps) {\n  const [isMenuOpen, setIsMenuOpen] = useState<boolean>(false);\n  return (\n    <Toolbar>\n      <ToolbarContent>\n        <DropdownCheckbox\n          id=\"permissions-select-all\"\n          selectedItems={props.selectedItems}\n          deSelectAll={props.deselectAll}\n          allItemsList={props.allItems}\n          itemsPerPageList={props.paginatedItems}\n          onItemSelect={props.onItemSelect}\n        />\n        <SearchDropdown\n          items={props.searchOptions}\n          searchState={props.search}\n          setSearchState={props.setSearch}\n        />\n        <SearchInput\n          id=\"permissions-search-input\"\n          searchState={props.search}\n          onChange={props.setSearch}\n        />\n        <ToolbarItem>\n          <Button\n            onClick={() =>\n              props.setDrawerContent(DrawerContentType.AddPermission)\n            }\n          >\n            Add Permissions\n          </Button>\n        </ToolbarItem>\n        <ToolbarItem>\n          <Conditional if={props.selectedItems?.length > 0}>\n            <Menu\n              toggle=\"Actions\"\n              isOpen={isMenuOpen}\n              setIsOpen={setIsMenuOpen}\n              items={[\n                <Delete\n                  key=\"delete-action\"\n                  deselectAll={props.deselectAll}\n                  org={props.org}\n                  repo={props.repo}\n                  selectedItems={props.selectedItems}\n                  setIsMenuOpen={setIsMenuOpen}\n                />,\n                <ChangePermissions\n                  key=\"change-permissions-action\"\n                  deselectAll={props.deselectAll}\n                  org={props.org}\n                  repo={props.repo}\n                  selectedItems={props.selectedItems}\n                  setIsMenuOpen={setIsMenuOpen}\n                />,\n              ]}\n            />\n          </Conditional>\n        </ToolbarItem>\n        <ToolbarPagination\n          itemsList={props.allItems}\n          perPage={props.perPage}\n          page={props.page}\n          setPage={props.setPage}\n          setPerPage={props.setPerPage}\n        />\n      </ToolbarContent>\n    </Toolbar>\n  );\n}\n\ninterface PermissionsToolbarProps {\n  org: string;\n  repo: string;\n\n  allItems: RepoMember[];\n  paginatedItems: RepoMember[];\n  selectedItems: RepoMember[];\n\n  page: number;\n  setPage: (page: number) => void;\n  perPage: number;\n  setPerPage: (perPage: number) => void;\n\n  searchOptions: string[];\n  search: SearchState;\n  setSearch: (search: SearchState) => void;\n\n  onItemSelect: (\n    item: RepoMember,\n    rowIndex: number,\n    isSelecting: boolean,\n  ) => void;\n  deselectAll: () => void;\n  setDrawerContent: (content: DrawerContentType) => void;\n}\n","import {\n  Alert,\n  AlertActionCloseButton,\n  AlertGroup,\n  Dropdown,\n  DropdownItem,\n  DropdownToggle,\n} from '@patternfly/react-core';\nimport {useState} from 'react';\nimport Conditional from 'src/components/empty/Conditional';\nimport {useUpdateRepositoryPermissions} from 'src/hooks/UseUpdateRepositoryPermissions';\nimport {RepoMember} from 'src/resources/RepositoryResource';\nimport {roles} from './Types';\n\nexport default function PermissionsDropdown({\n  member,\n}: PermissionsDropdownProps) {\n  const [isOpen, setIsOpen] = useState<boolean>(false);\n  const {\n    setPermissions,\n    errorSetPermissions: error,\n    resetSetRepoPermissions,\n  } = useUpdateRepositoryPermissions(member.org, member.repo);\n\n  return (\n    <>\n      <Conditional if={error}>\n        <AlertGroup isToast isLiveRegion>\n          <Alert\n            variant={'danger'}\n            title={`Unable to set permissions for ${member.name}`}\n            actionClose={\n              <AlertActionCloseButton onClose={resetSetRepoPermissions} />\n            }\n          />\n        </AlertGroup>\n      </Conditional>\n      <Dropdown\n        onSelect={() => setIsOpen(false)}\n        toggle={\n          <DropdownToggle onToggle={(isOpen) => setIsOpen(isOpen)}>\n            {member.role}\n          </DropdownToggle>\n        }\n        isOpen={isOpen}\n        dropdownItems={roles.map((role) => (\n          <DropdownItem\n            key={role.name}\n            description={role.description}\n            onClick={() =>\n              setPermissions({members: member, newRole: role.role})\n            }\n          >\n            {role.name}\n          </DropdownItem>\n        ))}\n      />\n    </>\n  );\n}\n\nexport interface PermissionsDropdownProps {\n  member: RepoMember;\n}\n","import {\n  Alert,\n  AlertActionCloseButton,\n  AlertGroup,\n  Dropdown,\n  DropdownItem,\n  KebabToggle,\n} from '@patternfly/react-core';\nimport {useState} from 'react';\nimport Conditional from 'src/components/empty/Conditional';\nimport {useUpdateRepositoryPermissions} from 'src/hooks/UseUpdateRepositoryPermissions';\nimport {RepoMember} from 'src/resources/RepositoryResource';\n\nexport default function PermissionsKebab({member}: PermissionsKebabProps) {\n  const [isOpen, setIsOpen] = useState<boolean>(false);\n  const {\n    deletePermissions,\n    errorDeletePermissions: error,\n    resetDeleteRepoPermissions,\n  } = useUpdateRepositoryPermissions(member.org, member.repo);\n\n  const onSelect = () => {\n    setIsOpen(false);\n    const element = document.getElementById(`${member.name}-toggle-kebab`);\n    element.focus();\n  };\n\n  return (\n    <>\n      <Conditional if={error}>\n        <AlertGroup isToast isLiveRegion>\n          <Alert\n            variant=\"danger\"\n            title={`Unable to set permissions for ${member.name}`}\n            actionClose={\n              <AlertActionCloseButton onClose={resetDeleteRepoPermissions} />\n            }\n          />\n        </AlertGroup>\n      </Conditional>\n      <Dropdown\n        onSelect={onSelect}\n        toggle={\n          <KebabToggle\n            id={`${member.name}-toggle-kebab`}\n            onToggle={() => {\n              setIsOpen(!isOpen);\n            }}\n          />\n        }\n        isOpen={isOpen}\n        dropdownItems={[\n          <DropdownItem key=\"delete\" onClick={() => deletePermissions(member)}>\n            Delete Permission\n          </DropdownItem>,\n        ]}\n        isPlain\n      />\n    </>\n  );\n}\n\ninterface PermissionsKebabProps {\n  member: RepoMember;\n}\n","import {UsersIcon, UserIcon, CogIcon} from '@patternfly/react-icons';\nimport {MemberType} from 'src/resources/RepositoryResource';\nimport Conditional from './empty/Conditional';\n\nexport default function EntityIcon(props: EntityProps) {\n  switch (props.type) {\n    case MemberType.team:\n      return (\n        <>\n          <Conditional\n            if={props.includeIcon != null ? props.includeIcon : true}\n          >\n            <UsersIcon />\n          </Conditional>{' '}\n          <Conditional if={props.includeText}>Team</Conditional>{' '}\n          <Conditional if={props.name != null}>{props.name}</Conditional>\n        </>\n      );\n    case MemberType.robot:\n      return (\n        <>\n          <Conditional\n            if={props.includeIcon != null ? props.includeIcon : true}\n          >\n            <CogIcon />\n          </Conditional>{' '}\n          <Conditional if={props.includeText}>Robot</Conditional>{' '}\n          <Conditional if={props.name != null}>{props.name}</Conditional>\n        </>\n      );\n    case MemberType.user:\n      return (\n        <>\n          <Conditional\n            if={props.includeIcon != null ? props.includeIcon : true}\n          >\n            <UserIcon />\n          </Conditional>{' '}\n          <Conditional if={props.includeText}>User</Conditional>{' '}\n          <Conditional if={props.name != null}>{props.name}</Conditional>\n        </>\n      );\n  }\n}\n\ninterface EntityProps {\n  type: MemberType;\n  name?: string;\n  includeIcon?: boolean;\n  includeText?: boolean;\n}\n","import {Spinner} from '@patternfly/react-core';\nimport {\n  TableComposable,\n  Tbody,\n  Td,\n  Th,\n  Thead,\n  Tr,\n} from '@patternfly/react-table';\nimport {useEffect, useState} from 'react';\nimport {useRepositoryPermissions} from 'src/hooks/UseRepositoryPermissions';\nimport PermissionsToolbar from './PermissionsToolbar';\nimport {PermissionsColumnNames} from './ColumnNames';\nimport PermissionsDropdown from './PermissionsDropdown';\nimport {RepoMember} from 'src/resources/RepositoryResource';\nimport PermissionsKebab from './PermissionsKebab';\nimport {DrawerContentType} from '../Types';\nimport EntityIcon from 'src/components/EntityIcon';\n\nexport default function Permissions(props: PermissionsProps) {\n  const {\n    members,\n    paginatedMembers,\n    loading,\n    error,\n    page,\n    setPage,\n    perPage,\n    setPerPage,\n    search,\n    setSearch,\n  } = useRepositoryPermissions(props.org, props.repo);\n  const [selectedMembers, setSelectedMembers] = useState<RepoMember[]>([]);\n\n  const onSelectMember = (\n    member: RepoMember,\n    rowIndex: number,\n    isSelecting: boolean,\n  ) => {\n    setSelectedMembers((prevSelected) => {\n      const others = prevSelected.filter((r) => r.name !== member.name);\n      return isSelecting ? [...others, member] : others;\n    });\n  };\n\n  // Close drawer if navigating away from permissions settings\n  useEffect(() => {\n    return () => {\n      props.setDrawerContent(DrawerContentType.None);\n    };\n  }, []);\n\n  if (loading) {\n    return <Spinner />;\n  }\n\n  if (error) {\n    return <>Unable to load permissions list</>;\n  }\n\n  return (\n    <>\n      <PermissionsToolbar\n        org={props.org}\n        repo={props.repo}\n        allItems={members}\n        paginatedItems={paginatedMembers}\n        selectedItems={selectedMembers}\n        page={page}\n        setPage={setPage}\n        perPage={perPage}\n        setPerPage={setPerPage}\n        searchOptions={[PermissionsColumnNames.account]}\n        search={search}\n        setSearch={setSearch}\n        onItemSelect={onSelectMember}\n        deselectAll={() => setSelectedMembers([])}\n        setDrawerContent={props.setDrawerContent}\n      />\n      <TableComposable aria-label=\"Repository permissions table\">\n        <Thead>\n          <Tr>\n            <Th />\n            <Th>{PermissionsColumnNames.account}</Th>\n            <Th>{PermissionsColumnNames.type}</Th>\n            <Th>{PermissionsColumnNames.permissions}</Th>\n            <Th />\n          </Tr>\n        </Thead>\n        <Tbody>\n          {paginatedMembers?.map((member, rowIndex) => (\n            <Tr key={member.name}>\n              <Td\n                select={{\n                  rowIndex,\n                  onSelect: (e, isSelecting) =>\n                    onSelectMember(member, rowIndex, isSelecting),\n                  isSelected: selectedMembers.some(\n                    (r) => r.name === member.name,\n                  ),\n                }}\n              />\n              <Td data-label=\"membername\">{member.name}</Td>\n              <Td data-label=\"type\">\n                <EntityIcon type={member.type} includeText />\n              </Td>\n              <Td data-label=\"role\">\n                <PermissionsDropdown member={member} />\n              </Td>\n              <Td data-label=\"kebab\">\n                <PermissionsKebab member={member} />\n              </Td>\n            </Tr>\n          ))}\n        </Tbody>\n      </TableComposable>\n    </>\n  );\n}\n\ninterface PermissionsProps {\n  org: string;\n  repo: string;\n  setDrawerContent: (content: DrawerContentType) => void;\n}\n","import {Button, Flex, InputGroup, TextInput} from '@patternfly/react-core';\nimport {EyeIcon, EyeSlashIcon} from '@patternfly/react-icons';\nimport {useState} from 'react';\n\nexport default function ReadonlySecret(props: ReadonlySecretProps) {\n  const [secretHidden, setSecretHidden] = useState<boolean>(true);\n  return (\n    <Flex direction={{default: 'row'}}>\n      {props.label}\n      {':'}\n      <InputGroup style={{width: 'inherit'}}>\n        <TextInput\n          type={secretHidden ? 'password' : 'text'}\n          aria-label=\"secret input\"\n          value={props.secret}\n          isDisabled\n          style={{\n            backgroundColor: 'white',\n            width: `${props.secret.length}ch`,\n            paddingRight: 0,\n            cursor: 'auto',\n          }}\n        />\n        <Button\n          variant=\"plain\"\n          onClick={() => setSecretHidden(!secretHidden)}\n          aria-label={secretHidden ? 'Show secret' : 'Hide secret'}\n          style={{paddingLeft: 0}}\n        >\n          {secretHidden ? <EyeIcon /> : <EyeSlashIcon />}\n        </Button>\n      </InputGroup>\n    </Flex>\n  );\n}\n\ninterface ReadonlySecretProps {\n  label: string;\n  secret: string;\n}\n","import {AxiosResponse} from 'axios';\nimport axios from 'src/libs/axios';\nimport {ResourceError, throwIfError} from './ErrorHandling';\n\nexport enum NotificationEventType {\n  repoPush = 'repo_push',\n  vulnFound = 'vulnerability_found',\n  buildFailure = 'build_failure',\n  buildQueued = 'build_queued',\n  buildStart = 'build_start',\n  buildSuccess = 'build_success',\n  buildCancelled = 'build_cancelled',\n  mirrorStarted = 'repo_mirror_sync_started',\n  mirrorSuccess = 'repo_mirror_sync_success',\n  mirrorFailed = 'repo_mirror_sync_failed',\n}\n\nexport enum NotificationMethodType {\n  email = 'email',\n  flowdock = 'flowdock',\n  hipchat = 'hipchat',\n  quaynotification = 'quay_notification',\n  slack = 'slack',\n  webhook = 'webhook',\n}\n\nexport interface RepoNotification {\n  config: any;\n  event: NotificationEventType;\n  event_config: any;\n  method: NotificationMethodType;\n  title: string;\n  number_of_failures?: number;\n  uuid?: string;\n}\n\ninterface FetchNotifiationsResponse {\n  notifications: RepoNotification[];\n}\n\nexport async function fetchNotifications(org: string, repo: string) {\n  const url = `/api/v1/repository/${org}/${repo}/notification/`;\n  const response: AxiosResponse<FetchNotifiationsResponse> = await axios.get(\n    url,\n  );\n  return response.data.notifications;\n}\n\nexport async function createNotification(\n  org: string,\n  repo: string,\n  notification: RepoNotification,\n) {\n  // API requires camal case for this single field, modifying before sending\n  // rather than creating a new interface\n  const notificationRequest: any = notification;\n  notificationRequest.eventConfig = notificationRequest.event_config;\n  const url = `/api/v1/repository/${org}/${repo}/notification/`;\n  await axios.post(url, notificationRequest);\n}\n\nexport async function bulkDeleteNotifications(\n  org: string,\n  repo: string,\n  uuids: string[],\n) {\n  const responses = await Promise.allSettled(\n    uuids.map((uuid) => deleteNotification(org, repo, uuid)),\n  );\n  throwIfError(responses);\n}\n\nexport async function deleteNotification(\n  org: string,\n  repo: string,\n  uuid: string,\n) {\n  try {\n    const url = `/api/v1/repository/${org}/${repo}/notification/${uuid}`;\n    await axios.delete(url);\n  } catch (err) {\n    throw new ResourceError('failed to delete repository', uuid, err);\n  }\n}\n\nexport async function testNotification(\n  org: string,\n  repo: string,\n  uuid: string,\n) {\n  const url = `/api/v1/repository/${org}/${repo}/notification/${uuid}/test`;\n  await axios.post(url);\n}\n\nexport async function bulkEnableNotifications(\n  org: string,\n  repo: string,\n  uuids: string[],\n) {\n  const responses = await Promise.allSettled(\n    uuids.map((uuid) => enableNotification(org, repo, uuid)),\n  );\n  throwIfError(responses);\n}\n\nexport async function enableNotification(\n  org: string,\n  repo: string,\n  uuid: string,\n) {\n  try {\n    const url = `/api/v1/repository/${org}/${repo}/notification/${uuid}`;\n    await axios.post(url);\n  } catch (err) {\n    throw new ResourceError('failed to enable repository', uuid, err);\n  }\n}\n\n// TODO: this should be a field from the backend instead of duplicating logic\nexport function isNotificationDisabled(notification: RepoNotification) {\n  return notification.number_of_failures >= 3;\n}\n\nexport function isNotificationEnabled(notification: RepoNotification) {\n  return !isNotificationDisabled(notification);\n}\n","import {\n  BugIcon,\n  CheckCircleIcon,\n  MinusCircleIcon,\n  SyncAltIcon,\n  TaskIcon,\n  TimesCircleIcon,\n  UploadIcon,\n} from '@patternfly/react-icons';\nimport {NotificationEventType} from 'src/resources/NotificationResource';\nimport {useQuayConfig} from './UseQuayConfig';\n\nexport interface NotificationEvent {\n  type: NotificationEventType;\n  title: string;\n  icon: React.ReactNode;\n  enabled: boolean;\n}\n\nexport function useEvents() {\n  const config = useQuayConfig();\n  const events: NotificationEvent[] = [\n    {\n      type: NotificationEventType.repoPush,\n      title: 'Push to Repository',\n      icon: <UploadIcon />,\n      enabled: true,\n    },\n    {\n      type: NotificationEventType.vulnFound,\n      title: 'Package Vulnerability Found',\n      icon: <BugIcon />,\n      enabled: config?.features.SECURITY_SCANNER,\n    },\n    {\n      type: NotificationEventType.buildFailure,\n      title: 'Image build failed',\n      icon: <TimesCircleIcon />,\n      enabled: config?.features.BUILD_SUPPORT,\n    },\n    {\n      type: NotificationEventType.buildQueued,\n      title: 'Image build queued',\n      icon: <TaskIcon />,\n      enabled: config?.features.BUILD_SUPPORT,\n    },\n    {\n      type: NotificationEventType.buildStart,\n      title: 'Image build started',\n      icon: <SyncAltIcon />,\n      enabled: config?.features.BUILD_SUPPORT,\n    },\n    {\n      type: NotificationEventType.buildSuccess,\n      title: 'Image build success',\n      icon: <CheckCircleIcon />,\n      enabled: config?.features.BUILD_SUPPORT,\n    },\n    {\n      type: NotificationEventType.buildCancelled,\n      title: 'Image build cancelled',\n      icon: <MinusCircleIcon />,\n      enabled: config?.features.BUILD_SUPPORT,\n    },\n    {\n      type: NotificationEventType.mirrorStarted,\n      title: 'Repository mirror started',\n      icon: <SyncAltIcon />,\n      enabled: config?.features.REPO_MIRROR,\n    },\n    {\n      type: NotificationEventType.mirrorSuccess,\n      title: 'Repository mirror successful',\n      icon: <CheckCircleIcon />,\n      enabled: config?.features.REPO_MIRROR,\n    },\n    {\n      type: NotificationEventType.mirrorFailed,\n      title: 'Repository mirror unsuccessful',\n      icon: <TimesCircleIcon />,\n      enabled: config?.features.REPO_MIRROR,\n    },\n  ];\n\n  return {\n    events: events,\n  };\n}\n","import {NotificationMethodType} from 'src/resources/NotificationResource';\nimport {useQuayConfig} from './UseQuayConfig';\n\nexport interface NotificationMethod {\n  type: NotificationMethodType;\n  title: string;\n  enabled: boolean;\n}\n\nexport function useNotificationMethods() {\n  const config = useQuayConfig();\n  const notificationMethods: NotificationMethod[] = [\n    {\n      type: NotificationMethodType.email,\n      title: 'Email Notification',\n      enabled: config?.features.MAILING,\n    },\n    {\n      type: NotificationMethodType.flowdock,\n      title: 'Flowdock Team Notification',\n      enabled: true,\n    },\n    {\n      type: NotificationMethodType.hipchat,\n      title: 'HipChat Room Notification',\n      enabled: true,\n    },\n    {\n      type: NotificationMethodType.quaynotification,\n      title: `${config?.config.REGISTRY_TITLE_SHORT} Notification`,\n      enabled: false, // TODO: Implemented but requires notifications in header to be created\n    },\n    {\n      type: NotificationMethodType.slack,\n      title: 'Slack Notification',\n      enabled: true,\n    },\n    {\n      type: NotificationMethodType.webhook,\n      title: 'Webhook POST',\n      enabled: true,\n    },\n  ];\n  return {\n    notificationMethods: notificationMethods,\n  };\n}\n","import {useQuery} from '@tanstack/react-query';\nimport {useState} from 'react';\nimport {\n  fetchNotifications,\n  isNotificationDisabled,\n  isNotificationEnabled,\n  NotificationEventType,\n} from 'src/resources/NotificationResource';\n\nexport enum NotifiationStatus {\n  enabled = 'enabled',\n  disabled = 'disabled',\n}\n\nexport interface NotificationFilter {\n  event: NotificationEventType[];\n  status: NotifiationStatus[];\n}\n\nexport function useNotifications(org: string, repo: string) {\n  const [page, setPage] = useState(1);\n  const [perPage, setPerPage] = useState(10);\n  const [filter, setFilter] = useState<NotificationFilter>({\n    event: [],\n    status: [],\n  });\n\n  const resetFilter = (field = null) => {\n    if (field != null) {\n      setFilter((prev) => ({...prev, [field]: []}));\n    } else {\n      setFilter({\n        event: [],\n        status: [],\n      });\n    }\n  };\n\n  const {\n    data: notifications,\n    isError: error,\n    isLoading: loading,\n    isPlaceholderData: isPlaceholderData,\n  } = useQuery(\n    ['reponotifications', org, repo],\n    () => fetchNotifications(org, repo),\n    {\n      placeholderData: [],\n    },\n  );\n\n  let filteredNotifications = notifications;\n  if (filter.event.length > 0) {\n    filteredNotifications = filteredNotifications.filter((n) =>\n      filter.event.includes(n.event),\n    );\n  }\n  const showEnabled = filter.status.includes(NotifiationStatus.enabled);\n  const showDisabled = filter.status.includes(NotifiationStatus.disabled);\n  if (!(showEnabled && showDisabled)) {\n    if (showEnabled) {\n      filteredNotifications = filteredNotifications.filter((n) =>\n        isNotificationEnabled(n),\n      );\n    }\n    if (showDisabled) {\n      filteredNotifications = filteredNotifications.filter((n) =>\n        isNotificationDisabled(n),\n      );\n    }\n  }\n\n  const paginatedNotifications = filteredNotifications?.slice(\n    page * perPage - perPage,\n    page * perPage - perPage + perPage,\n  );\n\n  return {\n    notifications: notifications,\n    paginatedNotifications: paginatedNotifications,\n    loading: loading || isPlaceholderData,\n    error: error,\n\n    page: page,\n    setPage: setPage,\n    perPage: perPage,\n    setPerPage: setPerPage,\n\n    filter: filter,\n    setFilter: setFilter,\n    resetFilter: resetFilter,\n  };\n}\n","import {useMutation, useQueryClient} from '@tanstack/react-query';\nimport {\n  bulkDeleteNotifications,\n  bulkEnableNotifications,\n  createNotification,\n  testNotification,\n} from 'src/resources/NotificationResource';\nimport {RepoNotification} from 'src/resources/NotificationResource';\n\nexport function useUpdateNotifications(org: string, repo: string) {\n  const queryClient = useQueryClient();\n  const {\n    mutate: create,\n    error: errorCreatingNotification,\n    isSuccess: successCreatingNotification,\n    reset: resetCreatingNotification,\n  } = useMutation(\n    async (notification: RepoNotification) =>\n      createNotification(org, repo, notification),\n    {\n      onSuccess: (_, variables) => {\n        queryClient.invalidateQueries(['reponotifications']);\n      },\n    },\n  );\n\n  const {\n    mutate: removeNotification,\n    isError: errorDeletingNotification,\n    isSuccess: successDeletingNotification,\n    reset: resetDeletingNotification,\n  } = useMutation(\n    async (uuids: string | string[]) => {\n      uuids = Array.isArray(uuids) ? uuids : [uuids];\n      return bulkDeleteNotifications(org, repo, uuids);\n    },\n    {\n      onSuccess: (_, variables) => {\n        queryClient.invalidateQueries(['reponotifications']);\n      },\n    },\n  );\n\n  const {\n    mutate: test,\n    isError: errorTestingNotification,\n    isSuccess: successTestingNotification,\n    reset: resetTestingNotification,\n  } = useMutation(async (uuid: string) => testNotification(org, repo, uuid));\n\n  const {\n    mutate: enable,\n    isError: errorEnablingNotification,\n    isSuccess: successEnablingNotification,\n    reset: resetEnablingNotification,\n  } = useMutation(\n    async (uuids: string | string[]) => {\n      uuids = Array.isArray(uuids) ? uuids : [uuids];\n      return bulkEnableNotifications(org, repo, uuids);\n    },\n    {\n      onSuccess: (_, variables) => {\n        queryClient.invalidateQueries(['reponotifications']);\n      },\n    },\n  );\n  let errorCreationMessage = null;\n  if (errorCreatingNotification != null) {\n    errorCreationMessage = (errorCreatingNotification as any)?.response?.data\n      ?.detail\n      ? (errorCreatingNotification as any)?.response?.data?.detail\n      : 'Unable to create notification';\n  }\n\n  return {\n    create: create,\n    successCreatingNotification: successCreatingNotification,\n    errorCreatingNotification: errorCreationMessage,\n    resetCreatingNotification: resetCreatingNotification,\n\n    deleteNotifications: removeNotification,\n    errorDeletingNotification: errorDeletingNotification,\n    successDeletingNotification: successDeletingNotification,\n    resetDeletingNotification: resetDeletingNotification,\n\n    test: test,\n    errorTestingNotification: errorTestingNotification,\n    successTestingNotification: successTestingNotification,\n    resetTestingNotification: resetTestingNotification,\n\n    enableNotifications: enable,\n    errorEnablingNotification: errorEnablingNotification,\n    successEnablingNotification: successEnablingNotification,\n    resetEnablingNotification: resetEnablingNotification,\n  };\n}\n","import {\n  Alert,\n  AlertActionCloseButton,\n  AlertGroup,\n  Button,\n  Dropdown,\n  DropdownItem,\n  KebabToggle,\n  Modal,\n  ModalVariant,\n} from '@patternfly/react-core';\nimport {useEffect, useState} from 'react';\nimport {useUpdateNotifications} from 'src/hooks/UseUpdateNotifications';\nimport Conditional from 'src/components/empty/Conditional';\nimport {\n  isNotificationDisabled,\n  RepoNotification,\n} from 'src/resources/NotificationResource';\n\nexport default function NotificationsKebab({\n  org,\n  repo,\n  notification,\n}: NotificationsKebabProps) {\n  const [isOpen, setIsOpen] = useState<boolean>();\n  const [isTestModalOpen, setIsTestModalOpen] = useState<boolean>(false);\n  const {\n    deleteNotifications,\n    errorDeletingNotification,\n    resetDeletingNotification,\n    test,\n    successTestingNotification,\n    errorTestingNotification,\n    resetTestingNotification,\n    enableNotifications,\n    errorEnablingNotification,\n    resetEnablingNotification,\n  } = useUpdateNotifications(org, repo);\n\n  useEffect(() => {\n    if (successTestingNotification) {\n      setIsTestModalOpen(true);\n      resetTestingNotification();\n    }\n  }, [successTestingNotification]);\n\n  return (\n    <>\n      <Conditional if={errorDeletingNotification}>\n        <AlertGroup isToast isLiveRegion>\n          <Alert\n            variant=\"danger\"\n            title={`Unable to delete notification ${notification.title}`}\n            actionClose={\n              <AlertActionCloseButton onClose={resetDeletingNotification} />\n            }\n          />\n        </AlertGroup>\n      </Conditional>\n      <Conditional if={errorTestingNotification}>\n        <AlertGroup isToast isLiveRegion>\n          <Alert\n            variant=\"danger\"\n            title={`Unable to test notification ${notification.title}`}\n            actionClose={\n              <AlertActionCloseButton onClose={resetTestingNotification} />\n            }\n          />\n        </AlertGroup>\n      </Conditional>\n      <Conditional if={errorEnablingNotification}>\n        <AlertGroup isToast isLiveRegion>\n          <Alert\n            variant=\"danger\"\n            title={`Unable to enable notification ${notification.title}`}\n            actionClose={\n              <AlertActionCloseButton onClose={resetEnablingNotification} />\n            }\n          />\n        </AlertGroup>\n      </Conditional>\n      <Modal\n        variant={ModalVariant.small}\n        title=\"Test Notification Queued\"\n        isOpen={isTestModalOpen}\n        onClose={() => setIsTestModalOpen(false)}\n        actions={[\n          <Button\n            key=\"cancel\"\n            variant=\"primary\"\n            onClick={() => setIsTestModalOpen(false)}\n          >\n            Close\n          </Button>,\n        ]}\n      >\n        A test version of this notification has been queued and should appear\n        shortly\n      </Modal>\n      <Dropdown\n        onSelect={() => setIsOpen(false)}\n        toggle={\n          <KebabToggle\n            onToggle={() => {\n              setIsOpen(!isOpen);\n            }}\n          />\n        }\n        isOpen={isOpen}\n        dropdownItems={[\n          <DropdownItem key=\"test\" onClick={() => test(notification.uuid)}>\n            Test Notification\n          </DropdownItem>,\n          <DropdownItem\n            key=\"delete\"\n            onClick={() => deleteNotifications(notification.uuid)}\n          >\n            Delete Notification\n          </DropdownItem>,\n          <Conditional key=\"enable\" if={isNotificationDisabled(notification)}>\n            <DropdownItem\n              onClick={() => enableNotifications(notification.uuid)}\n            >\n              Enable Notification\n            </DropdownItem>\n          </Conditional>,\n        ]}\n        isPlain\n      />\n    </>\n  );\n}\n\ninterface NotificationsKebabProps {\n  org: string;\n  repo: string;\n  notification: RepoNotification;\n}\n","import {\n  MenuContent,\n  MenuItem,\n  Menu as PFMenu,\n  MenuList,\n  Checkbox,\n} from '@patternfly/react-core';\nimport {useState} from 'react';\nimport Menu from 'src/components/Table/Menu';\nimport {useEvents} from 'src/hooks/UseEvents';\nimport {\n  NotifiationStatus,\n  NotificationFilter,\n} from 'src/hooks/UseNotifications';\nimport {NotificationEventType} from 'src/resources/NotificationResource';\n\nexport default function NotificationsFilter(props: NotificationsFilterProps) {\n  const [isMenuOpen, setIsMenuOpen] = useState<boolean>(false);\n  const {events} = useEvents();\n\n  const selectEvent = (checked: boolean, event: NotificationEventType) => {\n    props.setFilter((prev) => {\n      const others = prev.event.filter((f) => f !== event);\n      prev.event = checked ? [...others, event] : others;\n      return {...prev, event: prev.event};\n    });\n  };\n\n  const selectStatus = (checked: boolean, status: NotifiationStatus) => {\n    props.setFilter((prev) => {\n      const others = prev.status.filter((f) => f !== status);\n      prev.status = checked ? [...others, status] : others;\n      return {...prev, status: prev.status};\n    });\n  };\n\n  return (\n    <Menu\n      toggle=\"Filter\"\n      isOpen={isMenuOpen}\n      setIsOpen={setIsMenuOpen}\n      items={[\n        <MenuItem\n          id=\"filter-events\"\n          key=\"filter-events\"\n          flyoutMenu={\n            <PFMenu key={1}>\n              <MenuContent>\n                <MenuList>\n                  {events.map((e) => (\n                    <MenuItem key={e.type} style={{width: 'max-content'}}>\n                      <Checkbox\n                        id={`${e.title}-checkbox`}\n                        label={e.title}\n                        isChecked={props.filter.event.includes(e.type)}\n                        onChange={(checked: boolean) => {\n                          selectEvent(checked, e.type);\n                        }}\n                        name={`${e.title}-checkbox`}\n                      />\n                    </MenuItem>\n                  ))}\n                </MenuList>\n              </MenuContent>\n            </PFMenu>\n          }\n        >\n          Events\n        </MenuItem>,\n        <MenuItem\n          id=\"filter-status\"\n          key=\"filter-events\"\n          flyoutMenu={\n            <PFMenu key={0}>\n              <MenuContent>\n                <MenuList>\n                  <MenuItem\n                    key=\"filter-status-enabled\"\n                    style={{width: 'max-content'}}\n                  >\n                    <Checkbox\n                      id=\"enabled-checkbox\"\n                      label=\"Enabled\"\n                      isChecked={props.filter.status.includes(\n                        NotifiationStatus.enabled,\n                      )}\n                      onChange={(checked: boolean) => {\n                        selectStatus(checked, NotifiationStatus.enabled);\n                      }}\n                      name=\"enabled-checkbox\"\n                    />\n                  </MenuItem>\n                  <MenuItem\n                    key=\"filter-status-disabled\"\n                    style={{width: 'max-content'}}\n                  >\n                    <Checkbox\n                      id=\"disabled-checkbox\"\n                      label=\"Disabled\"\n                      isChecked={props.filter.status.includes(\n                        NotifiationStatus.disabled,\n                      )}\n                      onChange={(checked: boolean) => {\n                        selectStatus(checked, NotifiationStatus.disabled);\n                      }}\n                      name=\"disabled-checkbox\"\n                    />\n                  </MenuItem>\n                </MenuList>\n              </MenuContent>\n            </PFMenu>\n          }\n          itemId=\"next-menu-root\"\n        >\n          Status\n        </MenuItem>,\n      ]}\n    />\n  );\n}\n\ninterface NotificationsFilterProps {\n  filter: NotificationFilter;\n  setFilter(set: (prev: NotificationFilter) => NotificationFilter): void;\n}\n","import {Toolbar, ToolbarFilter} from '@patternfly/react-core';\nimport {NotificationFilter} from 'src/hooks/UseNotifications';\n\nexport default function NotificationsFilterChips(\n  props: NotificationsFilterChipsProps,\n) {\n  const deleteFilter = (category: string, chip: string) => {\n    props.setFilter((prev) => {\n      const others = prev[category].filter((e) => e != chip);\n      return {\n        ...prev,\n        [category]: others,\n      };\n    });\n  };\n\n  return (\n    <>\n      <ToolbarFilter\n        chips={props.filter.event}\n        deleteChip={(category, chip) => deleteFilter('event', chip as string)}\n        deleteChipGroup={() => props.resetFilter('event')}\n        categoryName=\"Event\"\n      >\n        {}\n      </ToolbarFilter>\n      <ToolbarFilter\n        chips={props.filter.status}\n        deleteChip={(category, chip) => deleteFilter('status', chip as string)}\n        deleteChipGroup={() => props.resetFilter('status')}\n        categoryName=\"Status\"\n      >\n        {}\n      </ToolbarFilter>\n    </>\n  );\n}\n\ninterface NotificationsFilterChipsProps {\n  filter: NotificationFilter;\n  setFilter(set: (prev: NotificationFilter) => NotificationFilter): void;\n  resetFilter(field?: string): void;\n}\n","import {\n  Alert,\n  AlertActionCloseButton,\n  AlertGroup,\n  Dropdown,\n  DropdownItem,\n  DropdownToggle,\n} from '@patternfly/react-core';\nimport {useEffect, useState} from 'react';\nimport Conditional from 'src/components/empty/Conditional';\nimport {useUpdateNotifications} from 'src/hooks/UseUpdateNotifications';\nimport {\n  isNotificationDisabled,\n  RepoNotification,\n} from 'src/resources/NotificationResource';\n\nexport default function Actions(props: ActionsProps) {\n  const [isOpen, setIsOpen] = useState<boolean>(false);\n\n  const {\n    enableNotifications,\n    successEnablingNotification,\n    errorEnablingNotification,\n    resetEnablingNotification,\n    deleteNotifications,\n    errorDeletingNotification,\n    successDeletingNotification,\n    resetDeletingNotification,\n  } = useUpdateNotifications(props.org, props.repo);\n\n  useEffect(() => {\n    if (successEnablingNotification) {\n      props.deselectAll();\n      resetEnablingNotification();\n    }\n  }, [successEnablingNotification]);\n\n  useEffect(() => {\n    if (successDeletingNotification) {\n      props.deselectAll();\n      resetDeletingNotification();\n    }\n  }, [successDeletingNotification]);\n\n  const disabledNotifications: RepoNotification[] = props.selectedItems.filter(\n    (n) => isNotificationDisabled(n),\n  );\n  const notificationsToEnable: string[] = disabledNotifications.map(\n    (n) => n.uuid,\n  );\n\n  return (\n    <>\n      <Conditional if={errorDeletingNotification}>\n        <AlertGroup isToast isLiveRegion>\n          <Alert\n            variant=\"danger\"\n            title=\"Unable to bulk delete notifications\"\n            actionClose={\n              <AlertActionCloseButton onClose={resetDeletingNotification} />\n            }\n          />\n        </AlertGroup>\n      </Conditional>\n      <Conditional if={errorEnablingNotification}>\n        <AlertGroup isToast isLiveRegion>\n          <Alert\n            variant=\"danger\"\n            title=\"Unable to bulk delete notifications\"\n            actionClose={\n              <AlertActionCloseButton onClose={resetEnablingNotification} />\n            }\n          />\n        </AlertGroup>\n      </Conditional>\n      <Dropdown\n        onSelect={() => setIsOpen(false)}\n        toggle={\n          <DropdownToggle\n            isDisabled={props.isDisabled}\n            onToggle={(isOpen) => setIsOpen(isOpen)}\n          >\n            Actions\n          </DropdownToggle>\n        }\n        isOpen={isOpen}\n        dropdownItems={[\n          <Conditional\n            key=\"notifications-bulk-delete\"\n            if={notificationsToEnable.length > 0}\n          >\n            <DropdownItem\n              onClick={() => enableNotifications(notificationsToEnable)}\n            >\n              Enable\n            </DropdownItem>\n          </Conditional>,\n          <DropdownItem\n            key=\"notifications-bulk-delete\"\n            id=\"bulk-delete-notifications\"\n            onClick={() => {\n              deleteNotifications(props.selectedItems.map((n) => n.uuid));\n            }}\n          >\n            Delete\n          </DropdownItem>,\n        ]}\n      />\n    </>\n  );\n}\n\ninterface ActionsProps {\n  isDisabled?: boolean;\n  org: string;\n  repo: string;\n  selectedItems: RepoNotification[];\n  deselectAll: () => void;\n}\n","import {\n  Button,\n  Toolbar,\n  ToolbarContent,\n  ToolbarGroup,\n  ToolbarItem,\n} from '@patternfly/react-core';\nimport {DropdownCheckbox} from 'src/components/toolbar/DropdownCheckbox';\nimport {ToolbarPagination} from 'src/components/toolbar/ToolbarPagination';\nimport {DrawerContentType} from '../Types';\nimport {RepoNotification} from 'src/resources/NotificationResource';\nimport NotificationsFilter from './NotificationsFilter';\nimport {NotificationFilter} from 'src/hooks/UseNotifications';\nimport NotificationsFilterChips from './NotificationsFilterChips';\nimport Actions from './NotificationsActions';\n\nexport default function NotificationsToolbar(props: NotificationsToolbarProps) {\n  return (\n    <Toolbar clearAllFilters={() => props.resetFilter()}>\n      <ToolbarContent>\n        <DropdownCheckbox\n          id=\"notifications-select-all\"\n          selectedItems={props.selectedItems}\n          deSelectAll={props.deselectAll}\n          allItemsList={props.allItems}\n          itemsPerPageList={props.paginatedItems}\n          onItemSelect={props.onItemSelect}\n        />\n        <ToolbarItem>\n          <NotificationsFilter\n            filter={props.filter}\n            setFilter={props.setFilter}\n          />\n        </ToolbarItem>\n        <ToolbarGroup variant=\"filter-group\">\n          <NotificationsFilterChips\n            filter={props.filter}\n            setFilter={props.setFilter}\n            resetFilter={props.resetFilter}\n          />\n        </ToolbarGroup>\n        <ToolbarItem>\n          <Button\n            onClick={() =>\n              props.setDrawerContent(DrawerContentType.CreateNotification)\n            }\n          >\n            Create Notification\n          </Button>\n        </ToolbarItem>\n        <ToolbarItem>\n          <Actions\n            isDisabled={props.selectedItems.length == 0}\n            org={props.org}\n            repo={props.repo}\n            selectedItems={props.selectedItems}\n            deselectAll={props.deselectAll}\n          />\n        </ToolbarItem>\n        <ToolbarPagination\n          itemsList={props.allItems}\n          perPage={props.perPage}\n          page={props.page}\n          setPage={props.setPage}\n          setPerPage={props.setPerPage}\n        />\n      </ToolbarContent>\n    </Toolbar>\n  );\n}\n\ninterface NotificationsToolbarProps {\n  org: string;\n  repo: string;\n\n  allItems: RepoNotification[];\n  paginatedItems: RepoNotification[];\n  selectedItems: RepoNotification[];\n\n  page: number;\n  setPage: (page: number) => void;\n  perPage: number;\n  setPerPage: (perPage: number) => void;\n\n  filter: NotificationFilter;\n  setFilter(\n    set: (prev: NotificationFilter) => NotificationFilter | NotificationFilter,\n  ): void;\n  resetFilter(field?: string): void;\n\n  onItemSelect: (\n    item: RepoNotification,\n    rowIndex: number,\n    isSelecting: boolean,\n  ) => void;\n  deselectAll: () => void;\n  setDrawerContent: (content: DrawerContentType) => void;\n}\n","import {\n  Button,\n  ClipboardCopy,\n  ClipboardCopyVariant,\n  Flex,\n  FlexItem,\n  Spinner,\n} from '@patternfly/react-core';\nimport {BellIcon} from '@patternfly/react-icons';\nimport {\n  ExpandableRowContent,\n  TableComposable,\n  Tbody,\n  Td,\n  Th,\n  Thead,\n  Tr,\n} from '@patternfly/react-table';\nimport {useEffect, useState} from 'react';\nimport Conditional from 'src/components/empty/Conditional';\nimport Empty from 'src/components/empty/Empty';\nimport ReadonlySecret from 'src/components/ReadonlySecret';\nimport {useEvents} from 'src/hooks/UseEvents';\nimport {useNotificationMethods} from 'src/hooks/UseNotificationMethods';\nimport {useNotifications} from 'src/hooks/UseNotifications';\nimport {\n  NotificationEventType,\n  NotificationMethodType,\n  RepoNotification,\n  isNotificationEnabled,\n} from 'src/resources/NotificationResource';\nimport {DrawerContentType} from '../Types';\nimport {NotificationsColumnNames} from './ColumnNames';\nimport NotificationsKebab from './NotificationsKebab';\nimport NotificationsToolbar from './NotificationsToolbar';\n\nexport default function Notifications({\n  org,\n  repo,\n  ...props\n}: NotificationsProps) {\n  const [selectedNotifications, setSelectedNotifications] = useState<\n    RepoNotification[]\n  >([]);\n  const [expandedUuids, setExpandedUuids] = useState<string[]>([]);\n  const {\n    notifications,\n    loading,\n    error,\n    paginatedNotifications,\n    page,\n    setPage,\n    perPage,\n    setPerPage,\n    filter,\n    setFilter,\n    resetFilter,\n  } = useNotifications(org, repo);\n\n  const isExpanded = (uuid: string) => expandedUuids.includes(uuid);\n  const setExpanded = (uuid: string, isExpanding = true) =>\n    setExpandedUuids((prevExpanded) => {\n      const otherExpandedRepoNames = prevExpanded.filter((u) => u !== uuid);\n      return isExpanding\n        ? [...otherExpandedRepoNames, uuid]\n        : otherExpandedRepoNames;\n    });\n\n  const onSelectNotification = (\n    notification: RepoNotification,\n    rowIndex: number,\n    isSelecting: boolean,\n  ) => {\n    setSelectedNotifications((prevSelected) => {\n      const others = prevSelected.filter((r) => r.uuid !== notification.uuid);\n      return isSelecting ? [...others, notification] : others;\n    });\n  };\n\n  // Close drawer if navigating away from notification settings\n  useEffect(() => {\n    return () => {\n      props.setDrawerContent(DrawerContentType.None);\n    };\n  }, []);\n\n  if (loading) {\n    return <Spinner />;\n  }\n\n  if (error) {\n    return <>Unable to load notifications</>;\n  }\n\n  if (notifications && notifications.length == 0) {\n    return (\n      <Empty\n        icon={BellIcon}\n        title=\"No notifications found\"\n        body=\"No notifications have been setup for this repository\"\n        button={\n          <Button\n            onClick={() =>\n              props.setDrawerContent(DrawerContentType.CreateNotification)\n            }\n          >\n            Create Notification\n          </Button>\n        }\n      />\n    );\n  }\n\n  return (\n    <>\n      <NotificationsToolbar\n        org={org}\n        repo={repo}\n        allItems={notifications}\n        paginatedItems={paginatedNotifications}\n        selectedItems={selectedNotifications}\n        page={page}\n        setPage={setPage}\n        perPage={perPage}\n        setPerPage={setPerPage}\n        onItemSelect={onSelectNotification}\n        deselectAll={() => setSelectedNotifications([])}\n        setDrawerContent={props.setDrawerContent}\n        filter={filter}\n        setFilter={setFilter}\n        resetFilter={resetFilter}\n      />\n      <TableComposable aria-label=\"Repository notifications table\">\n        <Thead>\n          <Tr>\n            <Th />\n            <Th />\n            <Th>{NotificationsColumnNames.title}</Th>\n            <Th>{NotificationsColumnNames.event}</Th>\n            <Th>{NotificationsColumnNames.notification}</Th>\n            <Th>{NotificationsColumnNames.status}</Th>\n            <Th />\n          </Tr>\n        </Thead>\n        {paginatedNotifications?.map((notification, rowIndex) => (\n          <Tbody\n            key={notification.uuid}\n            isExpanded={isExpanded(notification.uuid)}\n          >\n            <Tr>\n              <Td\n                expand={{\n                  rowIndex,\n                  isExpanded: isExpanded(notification.uuid),\n                  onToggle: () =>\n                    setExpanded(\n                      notification.uuid,\n                      !isExpanded(notification.uuid),\n                    ),\n                }}\n              />\n              <Td\n                select={{\n                  rowIndex,\n                  onSelect: (e, isSelecting) =>\n                    onSelectNotification(notification, rowIndex, isSelecting),\n                  isSelected: selectedNotifications.some(\n                    (n) => n.uuid === notification.uuid,\n                  ),\n                }}\n              />\n              <Td data-label=\"title\">\n                {notification.title ? notification.title : '(Untitled)'}\n              </Td>\n              <Td data-label=\"event\">\n                <EventTitle type={notification.event} />\n              </Td>\n              <Td data-label=\"notification\">\n                <NotificationTitle notification={notification} />\n              </Td>\n              <Td data-label=\"status\">\n                <NotificationStatus notification={notification} />\n              </Td>\n              <Td data-label=\"kebab\">\n                <NotificationsKebab\n                  org={org}\n                  repo={repo}\n                  notification={notification}\n                />\n              </Td>\n            </Tr>\n            <Tr isExpanded={isExpanded(notification.uuid)}>\n              <Td colSpan={7} id=\"notification-config-details\">\n                <ExpandableRowContent>\n                  <NotificationConfig notification={notification} />\n                </ExpandableRowContent>\n              </Td>\n            </Tr>\n          </Tbody>\n        ))}\n      </TableComposable>\n    </>\n  );\n}\n\nfunction EventTitle({type}: {type: NotificationEventType}) {\n  const {events} = useEvents();\n  const event = events.find((e) => e.type == type);\n  return (\n    <>\n      {event.icon} <span style={{fontSize: '.8em'}}>{event.title}</span>\n    </>\n  );\n}\n\nfunction NotificationTitle({notification}: {notification: RepoNotification}) {\n  const {notificationMethods} = useNotificationMethods();\n  const notificationMethod = notificationMethods.find(\n    (m) => m.type == notification.method,\n  );\n  return (\n    <Flex direction={{default: 'column'}}>\n      <FlexItem style={{marginBottom: 0}}>\n        <i className=\"fa fa-lg quay-icon\"></i>\n        {notificationMethod.title}\n      </FlexItem>\n    </Flex>\n  );\n}\n\nfunction NotificationConfig({notification}: {notification: RepoNotification}) {\n  switch (notification.method) {\n    case NotificationMethodType.email:\n      return (\n        <FlexItem id=\"configured-email\" style={{color: 'grey'}}>\n          email: {notification.config?.email}\n        </FlexItem>\n      );\n    case NotificationMethodType.flowdock:\n      return (\n        <FlexItem id=\"flow-api-token\" style={{color: 'grey'}}>\n          <ReadonlySecret\n            label=\"Flow API Token\"\n            secret={notification.config?.flow_api_token}\n          />\n        </FlexItem>\n      );\n    case NotificationMethodType.hipchat:\n      return (\n        <>\n          <FlexItem\n            id=\"hipchat-room-id\"\n            style={{color: 'grey', marginBottom: '0px'}}\n          >\n            Room ID #: {notification.config?.room_id}\n          </FlexItem>\n          <FlexItem id=\"hipchat-token\" style={{color: 'grey'}}>\n            <ReadonlySecret\n              label=\"Room Notification Token\"\n              secret={notification.config?.notification_token}\n            />\n          </FlexItem>\n        </>\n      );\n    case NotificationMethodType.slack:\n      return (\n        <FlexItem id=\"slack-url\" style={{color: 'grey'}}>\n          Webhook URL: {notification.config?.url}\n        </FlexItem>\n      );\n    case NotificationMethodType.webhook:\n      return (\n        <>\n          <FlexItem\n            id=\"webhook-url\"\n            style={{color: 'grey', marginBottom: '0px'}}\n          >\n            Webhook URL: {notification.config?.url}\n          </FlexItem>\n          <Conditional if={notification.config?.template != ''}>\n            <FlexItem id=\"webhook-body\" style={{color: 'grey'}}>\n              POST body template (optional):\n              <ClipboardCopy\n                isCode\n                isReadOnly\n                hoverTip=\"Copy\"\n                clickTip=\"Copied\"\n                variant={ClipboardCopyVariant.expansion}\n              >\n                {notification.config?.template}\n              </ClipboardCopy>\n            </FlexItem>\n          </Conditional>\n        </>\n      );\n    // TODO: Quay notifications not supported in new UI until\n    // notification header has been implemented\n    // case NotificationMethodType.quaynotification:\n    //   return (\n    //     <Flex direction={{default: 'column'}}>\n    //       <FlexItem style={{marginBottom: 0}}>\n    //         {notificationMethod.title}\n    //       </FlexItem>\n    //     </Flex>\n    //   );\n  }\n}\n\nfunction NotificationStatus({notification}: {notification: RepoNotification}) {\n  return isNotificationEnabled(notification) ? (\n    <>Enabled</>\n  ) : (\n    <>Disabled (3 failed attempts)</>\n  );\n}\n\ninterface NotificationsProps {\n  org: string;\n  repo: string;\n  setDrawerContent: (content: DrawerContentType) => void;\n}\n","import {AxiosResponse} from 'axios';\nimport axios from 'src/libs/axios';\n\nexport interface Subscription {\n  hasSubscription: boolean;\n  isExistingCustomer: boolean;\n  plan: string; // TODO: should probably be an enum\n  usedPrivateRepos: number;\n}\n\nexport async function fetchSubscription(org: string = null) {\n  const url: string =\n    org != null ? `/api/v1/organization/${org}/plan` : '/api/v1/user/plan';\n  const response: AxiosResponse<Subscription> = await axios.get(url);\n  return response.data;\n}\n\nexport async function setSubscription(\n  plan: string,\n  org: string = null,\n  token: string = null,\n) {\n  const url: string =\n    org != null ? `/api/v1/organization/${org}/plan` : '/api/v1/user/plan';\n  const body: {plan: string; token?: string} = {plan: plan};\n  if (token != null) {\n    body.token = token;\n  }\n  await axios.put(url, body);\n}\n\ninterface PlansResponse {\n  plans: Plan[];\n}\n\nexport interface Plan {\n  title: string;\n  price: number;\n  privateRepos: number;\n  stripeId: string;\n  audience: string;\n  bus_features: boolean;\n  deprecated: boolean;\n  free_trial_days: number;\n  superseded_by: string;\n  plans_page_hidden: boolean;\n}\n\nexport async function fetchPlans() {\n  const response: AxiosResponse<PlansResponse> = await axios.get(\n    '/api/v1/plans/',\n  );\n  return response.data.plans;\n}\n\nexport interface PrivateAllowed {\n  privateAllowed: boolean;\n  privateCount: number;\n}\n\nexport async function fetchPrivateAllowed(org: string = null) {\n  const url: string =\n    org != null\n      ? `/api/v1/organization/${org}/private`\n      : '/api/v1/user/private';\n  const response: AxiosResponse<PrivateAllowed> = await axios.get(url);\n  return response.data;\n}\n\nexport interface BillingCardResponse {\n  card: BillingCard;\n}\n\nexport interface BillingCard {\n  owner: string;\n  type: string;\n  last4: string;\n  exp_month: number;\n  exp_year: number;\n}\n\nexport async function fetchCard(org: string = null) {\n  const url: string =\n    org != null ? `/api/v1/organization/${org}/card` : '/api/v1/user/card';\n  const response: AxiosResponse<BillingCardResponse> = await axios.get(url);\n  return response.data.card;\n}\n","import {\n  Alert,\n  AlertActionCloseButton,\n  Button,\n  Spinner,\n} from '@patternfly/react-core';\nimport Conditional from 'src/components/empty/Conditional';\nimport {useQuayConfig} from 'src/hooks/UseQuayConfig';\nimport {useRepositoryVisibility} from 'src/hooks/UseRepositoryVisibility';\nimport {useUpgradePlan} from 'src/hooks/UseUpgradePlan';\nimport {RepositoryDetails} from 'src/resources/RepositoryResource';\n\nexport default function Visibility(props: VisibilityProps) {\n  const config = useQuayConfig();\n  const {\n    setVisibility,\n    loading: loadingSetVisibility,\n    error,\n  } = useRepositoryVisibility(props.org, props.repo);\n  const {\n    upgrade,\n    planRequired,\n    maxPrivateCountReached,\n    loading,\n    errorFetchingPlanData,\n    errorUpdatingSubscription,\n    reset,\n  } = useUpgradePlan(props.org, props.repoDetails?.is_organization);\n\n  if (loading || loadingSetVisibility) {\n    return <Spinner size=\"md\" />;\n  }\n\n  if (!props.repoDetails?.is_public) {\n    return (\n      <>\n        <div style={{paddingBottom: '1em'}}>\n          This Repository is currently private. Only users on the permissions\n          list may view and interact with it.\n        </div>\n        <Button onClick={() => setVisibility('public')}>Make Public</Button>\n      </>\n    );\n  } else {\n    const publicRepoDescription = (\n      <div style={{paddingBottom: '1em'}}>\n        This Repository is currently public and is visible to all users, and may\n        be pulled by all users.\n      </div>\n    );\n\n    if (config?.features?.BILLING && errorFetchingPlanData) {\n      return (\n        <>\n          {publicRepoDescription}\n          <Alert\n            variant=\"danger\"\n            title=\"Unable to retrieve subscription information.\"\n          />\n        </>\n      );\n    }\n\n    if (config?.features?.BILLING && planRequired != null) {\n      return (\n        <>\n          <Conditional if={errorUpdatingSubscription != null}>\n            <Alert\n              variant=\"danger\"\n              title=\"Unable to update subscription\"\n              actionClose={<AlertActionCloseButton onClose={reset} />}\n              style={{marginBottom: '1em'}}\n            />\n          </Conditional>\n          {publicRepoDescription}\n          <Alert\n            title={\n              <>\n                In order to make this repository private under{' '}\n                <span style={{fontWeight: 'bold'}}>{props.org}</span>, you will\n                need to upgrade the namespace&apos;s plan to at least a{' '}\n                <span style={{fontWeight: 'bold'}}>{planRequired?.title}</span>{' '}\n                plan\n              </>\n            }\n            variant=\"warning\"\n            style={{marginBottom: '1em'}}\n          />\n          <Button onClick={upgrade}>Upgrade {props.org}</Button>\n        </>\n      );\n    }\n\n    if (planRequired == null && !maxPrivateCountReached) {\n      return (\n        <>\n          {publicRepoDescription}\n          <Button onClick={() => setVisibility('private')}>Make Private</Button>\n        </>\n      );\n    }\n\n    if (config?.features?.BILLING && maxPrivateCountReached) {\n      return (\n        <>\n          {publicRepoDescription}\n          <Alert\n            title=\"This organization has reached its private repository limit. Please contact your administrator.\"\n            variant=\"warning\"\n            style={{marginBottom: '1em'}}\n          />\n        </>\n      );\n    }\n  }\n}\n\ninterface VisibilityProps {\n  org: string;\n  repo: string;\n  repoDetails: RepositoryDetails;\n}\n","import {useMutation, useQueryClient} from '@tanstack/react-query';\nimport {setRepositoryVisibility} from 'src/resources/RepositoryResource';\n\nexport function useRepositoryVisibility(org: string, repo: string) {\n  const queryClient = useQueryClient();\n\n  const {\n    mutate: setVisibility,\n    isLoading: loading,\n    isError: error,\n  } = useMutation(\n    async (visibility: string) =>\n      setRepositoryVisibility(org, repo, visibility),\n    {\n      onSuccess: (_, variables) => {\n        queryClient.invalidateQueries(['repodetails', org, repo]);\n      },\n    },\n  );\n\n  return {\n    setVisibility: setVisibility,\n    loading: loading,\n    error: error,\n  };\n}\n","import {useQuery, useQueryClient} from '@tanstack/react-query';\nimport {useState} from 'react';\nimport {\n  BillingCard,\n  fetchCard,\n  fetchPlans,\n  fetchPrivateAllowed,\n  fetchSubscription,\n  Plan,\n  setSubscription,\n  Subscription,\n} from 'src/resources/BillingResource';\nimport {useCurrentUser} from './UseCurrentUser';\nimport {useQuayConfig} from './UseQuayConfig';\n\nexport function useUpgradePlan(namespace: string, isOrg: boolean) {\n  const [error, setError] = useState<Error>(null);\n  const [loading, setLoading] = useState<boolean>(false);\n  const queryClient = useQueryClient();\n  const {user} = useCurrentUser();\n  const config = useQuayConfig();\n  const reset = () => {\n    setError(null);\n    setLoading(false);\n  };\n\n  const isOrgPlan = (plan: Plan) =>\n    plan.stripeId == 'free' || plan.bus_features;\n\n  const {\n    data: plans,\n    isLoading: loadingPlans,\n    error: errorFetchingPlans,\n  } = useQuery(['plans'], () => fetchPlans(), {\n    placeholderData: [],\n    enabled: config?.features?.BILLING,\n  });\n\n  const {\n    data: privateAllowed,\n    isLoading: loadingPrivateAllowed,\n    error: errorFetchingPrivateAllowed,\n  } = useQuery(\n    ['privateallowed', namespace],\n    () => fetchPrivateAllowed(isOrg ? namespace : null),\n    {\n      enabled: config?.features?.BILLING,\n    },\n  );\n\n  let planRequired: Plan = null;\n  let maxPrivateCountReached = false;\n  if (privateAllowed?.privateAllowed || privateAllowed?.privateCount == null) {\n    planRequired = null;\n  } else {\n    planRequired = plans\n      .filter((p) => !p.deprecated)\n      .filter((p) => (isOrg ? isOrgPlan(p) : true))\n      .find((p) => p.privateRepos > privateAllowed?.privateCount);\n    if (planRequired == undefined) {\n      maxPrivateCountReached = true;\n    }\n  }\n\n  const upgrade = async () => {\n    let currentSubscription: Subscription = null;\n    let reuseCard = true;\n    try {\n      currentSubscription = await fetchSubscription(isOrg ? namespace : null);\n    } catch (error) {\n      setError(error);\n      reuseCard = false;\n    }\n\n    // If the current plan has a non-zero price, a card must already\n    // must be registered\n    const currentPlan: Plan = plans.find(\n      (p) => p.stripeId == currentSubscription.plan,\n    );\n    reuseCard = reuseCard ? currentPlan.price > 0 : false;\n\n    let cardInfo: BillingCard = null;\n    try {\n      cardInfo = await fetchCard(isOrg ? namespace : null);\n    } catch (error) {\n      setError(error);\n    }\n\n    const updateSubscription = async (\n      stripeId: string,\n      token: string = null,\n    ) => {\n      try {\n        setLoading(true);\n        await setSubscription(stripeId, isOrg ? namespace : null, token);\n        queryClient.invalidateQueries(['privateallowed', namespace]);\n        setLoading(false);\n      } catch (error) {\n        setError(error);\n        setLoading(false);\n      }\n    };\n\n    if (planRequired.price > 0 && (!cardInfo.last4 || !reuseCard)) {\n      (window as any).StripeCheckout.open({\n        key: config?.config?.STRIPE_PUBLISHABLE_KEY,\n        email: user.email,\n        amount: planRequired.price,\n        currency: 'usd',\n        name: 'Quay ' + planRequired.title + ' Subscription',\n        description:\n          'Up to ' + planRequired.privateRepos + ' private repositories',\n        panelLabel: cardInfo.last4\n          ? 'Subscribe'\n          : `Start Trial ({{amount}} plan)`,\n        token: (token) => updateSubscription(planRequired.stripeId, token.id),\n        billingAddress: true,\n        zipCode: true,\n      });\n    } else {\n      updateSubscription(planRequired.stripeId);\n    }\n  };\n\n  return {\n    upgrade: upgrade,\n    planRequired: planRequired,\n    maxPrivateCountReached: maxPrivateCountReached,\n    loading:\n      config?.features?.BILLING &&\n      (loadingPlans || loadingPrivateAllowed || loading),\n    errorFetchingPlanData: errorFetchingPlans || errorFetchingPrivateAllowed,\n    errorUpdatingSubscription: error,\n    reset: reset,\n  };\n}\n","import {Flex, FlexItem, Tab, Tabs, TabTitleText} from '@patternfly/react-core';\nimport {useState} from 'react';\nimport {DrawerContentType} from 'src/routes/RepositoryDetails/Types';\nimport DeleteRepository from './DeleteRepository';\nimport Permissions from './Permissions';\nimport Notifications from './Notifications';\nimport Visibility from './Visibility';\nimport {RepositoryDetails} from 'src/resources/RepositoryResource';\n\nexport default function Settings(props: SettingsProps) {\n  const [activeTabIndex, setActiveTabIndex] = useState(0);\n\n  const tabs = [\n    {\n      name: 'User and robot permissions',\n      id: 'userandrobotpermissions',\n      content: (\n        <Permissions\n          org={props.org}\n          repo={props.repo}\n          setDrawerContent={props.setDrawerContent}\n        />\n      ),\n    },\n    {\n      name: 'Events and notifications',\n      id: 'eventsandnotifications',\n      content: (\n        <Notifications\n          org={props.org}\n          repo={props.repo}\n          setDrawerContent={props.setDrawerContent}\n        />\n      ),\n    },\n    {\n      name: 'Repository visibility',\n      id: 'repositoryvisiblity',\n      content: (\n        <Visibility\n          org={props.org}\n          repo={props.repo}\n          repoDetails={props.repoDetails}\n        />\n      ),\n    },\n    {\n      name: <div style={{color: 'red'}}>Delete repository</div>,\n      id: 'deleterepository',\n      content: <DeleteRepository org={props.org} repo={props.repo} />,\n    },\n  ];\n\n  return (\n    <Flex flexWrap={{default: 'nowrap'}}>\n      <FlexItem>\n        <Tabs\n          activeKey={activeTabIndex}\n          onSelect={(e, index: number) => setActiveTabIndex(index)}\n          isVertical\n          aria-label=\"Repository Settings Tabs\"\n          role=\"region\"\n        >\n          {tabs.map((tab, tabIndex) => (\n            <Tab\n              key={tab.id}\n              eventKey={tabIndex}\n              title={<TabTitleText>{tab.name}</TabTitleText>}\n            />\n          ))}\n        </Tabs>\n      </FlexItem>\n      <FlexItem\n        alignSelf={{default: 'alignSelfCenter'}}\n        style={{padding: '20px', width: '100%'}}\n      >\n        {tabs.at(activeTabIndex).content}\n      </FlexItem>\n    </Flex>\n  );\n}\n\ninterface SettingsProps {\n  org: string;\n  repo: string;\n  repoDetails: RepositoryDetails;\n  setDrawerContent: (content: DrawerContentType) => void;\n}\n","import {useQuery} from '@tanstack/react-query';\nimport {useEffect, useState} from 'react';\nimport {Entity, fetchEntities} from 'src/resources/UserResource';\n\nexport function useEntities(org: string) {\n  const [searchTerm, setSearchTerm] = useState<string>();\n  const [isError, setIsError] = useState<boolean>();\n  const [entities, setEntities] = useState<Entity[]>([]);\n  const [loading, setLoading] = useState<boolean>(false);\n\n  const search = async () => {\n    try {\n      const entityResults = await fetchEntities(org, searchTerm);\n      setLoading(false);\n      setEntities(entityResults);\n    } catch (err) {\n      setLoading(false);\n      setIsError(true);\n    }\n  };\n\n  // If next character typed is under a second, don't fire the\n  // request\n  useEffect(() => {\n    if (searchTerm != null && searchTerm != '') {\n      setLoading(true);\n      const delay = setTimeout(() => {\n        search();\n      }, 1000);\n      return () => {\n        setLoading(false);\n        clearTimeout(delay);\n      };\n    } else {\n      setEntities([]);\n    }\n  }, [searchTerm]);\n\n  return {\n    entities: !isError ? entities : [],\n    isError: isError,\n    isLoadingEntities: loading,\n    searchTerm: searchTerm,\n    setSearchTerm: setSearchTerm,\n  };\n}\n","import {\n  Select,\n  SelectOption,\n  SelectVariant,\n  Spinner,\n} from '@patternfly/react-core';\nimport {useEffect, useState} from 'react';\nimport {useEntities} from 'src/hooks/UseEntities';\nimport {Entity, getMemberType} from 'src/resources/UserResource';\nimport EntityIcon from './EntityIcon';\n\nexport default function EntitySearch(props: EntitySearchProps) {\n  const [isOpen, setIsOpen] = useState<boolean>(false);\n  const {entities, isLoadingEntities, isError, searchTerm, setSearchTerm} =\n    useEntities(props.org);\n\n  useEffect(() => {\n    if (searchTerm != undefined && searchTerm != '') {\n      const filteredEntity = entities.filter((e) => e.name === searchTerm);\n      const selectedEntity =\n        filteredEntity.length > 0 ? filteredEntity[0] : null;\n      props.onSelect(selectedEntity);\n    } else {\n      props.onSelect(null);\n    }\n  }, [searchTerm, JSON.stringify(entities)]);\n\n  useEffect(() => {\n    if (isError) {\n      props.onError();\n    }\n  }, [isError]);\n\n  return (\n    <Select\n      toggleId={props.id ? props.id : 'entity-search'}\n      isOpen={isOpen}\n      selections={searchTerm}\n      onSelect={(e, value) => {\n        setSearchTerm(value as string);\n        setIsOpen(!isOpen);\n      }}\n      onToggle={() => {\n        setIsOpen(!isOpen);\n      }}\n      variant={SelectVariant.typeahead}\n      onTypeaheadInputChanged={(value) => {\n        setSearchTerm(value);\n      }}\n      shouldResetOnSelect={true}\n      onClear={() => {\n        setSearchTerm('');\n      }}\n      loadingVariant={isLoadingEntities ? 'spinner' : undefined}\n    >\n      {isLoadingEntities\n        ? undefined\n        : entities.map((e) => (\n            <SelectOption key={e.name} value={e.name}>\n              <EntityIcon type={getMemberType(e)} includeIcon />\n              {e.name}\n            </SelectOption>\n          ))}\n    </Select>\n  );\n}\n\ninterface EntitySearchProps {\n  org: string;\n  onSelect: (entity: Entity) => void;\n  onError?: () => void;\n  id?: string;\n}\n","import {\n  ActionGroup,\n  Alert,\n  AlertActionCloseButton,\n  Button,\n  Dropdown,\n  DropdownItem,\n  DropdownToggle,\n  Form,\n  FormGroup,\n  Title,\n} from '@patternfly/react-core';\nimport {useEffect, useState} from 'react';\nimport Conditional from 'src/components/empty/Conditional';\nimport EntitySearch from 'src/components/EntitySearch';\nimport {useUpdateRepositoryPermissions} from 'src/hooks/UseUpdateRepositoryPermissions';\nimport {RepoMember, RepoRole} from 'src/resources/RepositoryResource';\nimport {Entity, getMemberType} from 'src/resources/UserResource';\nimport {roles} from './Types';\n\nexport default function AddPermissions(props: AddPermissionsProps) {\n  const [isPermissionOpen, setIsPermissionOpen] = useState<boolean>(false);\n  const [role, setRole] = useState<RepoRole>(RepoRole.admin);\n  const [selectedEntity, setSelectedEntity] = useState<Entity>(null);\n  const [errorFetchingEntities, setErrorFetchingEntities] =\n    useState<boolean>(false);\n  const {\n    setPermissions,\n    errorSetPermissions: errorSettingPermissions,\n    successSetPermissions: success,\n    resetSetRepoPermissions,\n  } = useUpdateRepositoryPermissions(props.org, props.repo);\n\n  const createPermission = () => {\n    const member: RepoMember = {\n      org: props.org,\n      repo: props.repo,\n      name: selectedEntity.name,\n      type: getMemberType(selectedEntity),\n      role: null,\n    };\n    setPermissions({members: member, newRole: role});\n  };\n\n  useEffect(() => {\n    if (success) {\n      resetSetRepoPermissions();\n      props.closeDrawer();\n    }\n  }, [success]);\n\n  return (\n    <>\n      <Title headingLevel=\"h3\">Add Permission</Title>\n      <Conditional if={errorFetchingEntities}>\n        <Alert isInline variant=\"danger\" title=\"Unable to lookup users\" />\n      </Conditional>\n      <Conditional if={errorSettingPermissions}>\n        <Alert\n          isInline\n          actionClose={\n            <AlertActionCloseButton onClose={resetSetRepoPermissions} />\n          }\n          variant=\"danger\"\n          title=\"Unable to set permissions\"\n        />\n      </Conditional>\n      <Form id=\"add-permission-form\">\n        <FormGroup fieldId=\"user\" label=\"Select a team or user\" required>\n          <EntitySearch\n            org={props.org}\n            onError={() => setErrorFetchingEntities(true)}\n            onSelect={(e: Entity) => setSelectedEntity(e)}\n          />\n        </FormGroup>\n        <FormGroup fieldId=\"permission\" label=\"Select a permission\" required>\n          <Dropdown\n            onSelect={() => setIsPermissionOpen(false)}\n            toggle={\n              <DropdownToggle\n                onToggle={(isOpen) => setIsPermissionOpen(isOpen)}\n              >\n                {role}\n              </DropdownToggle>\n            }\n            isOpen={isPermissionOpen}\n            dropdownItems={roles.map((role) => (\n              <DropdownItem\n                key={role.name}\n                description={role.description}\n                onClick={() => setRole(role.role)}\n              >\n                {role.name}\n              </DropdownItem>\n            ))}\n          />\n        </FormGroup>\n        <ActionGroup>\n          <Button\n            isDisabled={selectedEntity == null}\n            onClick={() => {\n              createPermission();\n            }}\n            variant=\"primary\"\n          >\n            Submit\n          </Button>\n        </ActionGroup>\n      </Form>\n    </>\n  );\n}\n\ninterface AddPermissionsProps {\n  org: string;\n  repo: string;\n  closeDrawer: () => void;\n}\n","\n      import API from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js!./NotificationsCreateNotification.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js!./NotificationsCreateNotification.css\";\n       export default content && content.locals ? content.locals : undefined;\n","import {AxiosResponse} from 'axios';\nimport axios from 'src/libs/axios';\nimport {assertHttpCode} from './ErrorHandling';\n\nexport interface AuthorizedEmail {\n  email: string;\n  repo: string;\n  namespace: string;\n  confirmed: boolean;\n}\n\nexport async function fetchAuthorizedEmail(\n  org: string,\n  repo: string,\n  email: string,\n) {\n  const url = `/api/v1/repository/${org}/${repo}/authorizedemail/${email}`;\n  const response: AxiosResponse<AuthorizedEmail> = await axios.get(url);\n  assertHttpCode(response.status, 200);\n  return response.data;\n}\n\nexport async function sendAuthorizedEmail(\n  org: string,\n  repo: string,\n  email: string,\n) {\n  const url = `/api/v1/repository/${org}/${repo}/authorizedemail/${email}`;\n  const response: AxiosResponse<AuthorizedEmail> = await axios.post(url);\n  assertHttpCode(response.status, 200);\n  return response.data;\n}\n","import {\n  AuthorizedEmail,\n  fetchAuthorizedEmail,\n  sendAuthorizedEmail,\n} from 'src/resources/AuthorizedEmailResource';\nimport {AxiosError} from 'axios';\nimport {useState} from 'react';\nimport {useMutation, useQuery, useQueryClient} from '@tanstack/react-query';\n\nexport interface AuthorizedEmailStatus {\n  emailData: AuthorizedEmail;\n  exists: boolean;\n  error: Error;\n}\n\nexport function useAuthorizedEmails(org: string, repo: string) {\n  const [pollEmail, setPollEmail] = useState<string>('');\n  const [emailConfirmed, setEmailConfirmed] = useState<boolean>(false);\n  const polling = pollEmail != '';\n  const startPolling = (email: string) => setPollEmail(email);\n  const stopPolling = () => setPollEmail('');\n  const resetEmailConfirmed = () => setEmailConfirmed(false);\n\n  const {isError: errorPolling} = useQuery(\n    ['pollauthorizedemail', org, repo, pollEmail],\n    () => fetchAuthorizedEmail(org, repo, pollEmail),\n    {\n      enabled: polling,\n      refetchInterval: (emailData: AuthorizedEmail) => {\n        if (emailData != null && emailData.confirmed) {\n          setEmailConfirmed(true);\n          stopPolling();\n          return false;\n        } else {\n          return 5000;\n        }\n      },\n      onError: () => stopPolling(),\n    },\n  );\n\n  const {\n    mutate: sendEmail,\n    isError: errorSendingEmail,\n    isSuccess: successSendingEmail,\n    reset,\n  } = useMutation(async (email: string) =>\n    sendAuthorizedEmail(org, repo, email),\n  );\n\n  return {\n    polling: polling,\n    errorPolling: errorPolling,\n    startPolling: startPolling,\n    stopPolling: stopPolling,\n    emailConfirmed: emailConfirmed,\n    resetEmailConfirmed: resetEmailConfirmed,\n\n    sendAuthorizedEmail: sendEmail,\n    successSendingAuthorizedEmail: successSendingEmail,\n    errorSendingAuthorizedEmail: errorSendingEmail,\n    resetSendAuthorizationEmail: reset,\n  };\n}\n","import {\n  ActionGroup,\n  Alert,\n  AlertActionCloseButton,\n  Button,\n  FormGroup,\n  Modal,\n  ModalVariant,\n  TextInput,\n} from '@patternfly/react-core';\nimport {ExclamationCircleIcon} from '@patternfly/react-icons';\nimport {useEffect, useState} from 'react';\nimport Conditional from 'src/components/empty/Conditional';\nimport {useAuthorizedEmails} from 'src/hooks/UseAuthorizedEmails';\nimport {NotificationEvent} from 'src/hooks/UseEvents';\nimport {NotificationMethod} from 'src/hooks/UseNotificationMethods';\nimport {useUpdateNotifications} from 'src/hooks/UseUpdateNotifications';\nimport {isValidEmail} from 'src/libs/utils';\nimport {fetchAuthorizedEmail} from 'src/resources/AuthorizedEmailResource';\n\nexport default function CreateEmailNotification(\n  props: CreateEmailNotification,\n) {\n  const [title, setTitle] = useState<string>('');\n  const [email, setEmail] = useState<string>('');\n  const [isEmailAuthModalOpen, setIsEmailAuthModalOpen] = useState<boolean>();\n  const {\n    create,\n    successCreatingNotification,\n    errorCreatingNotification,\n    resetCreatingNotification,\n  } = useUpdateNotifications(props.org, props.repo);\n  const {\n    emailConfirmed,\n    resetEmailConfirmed,\n    polling,\n    startPolling,\n    stopPolling,\n    errorPolling,\n    sendAuthorizedEmail,\n    successSendingAuthorizedEmail,\n    errorSendingAuthorizedEmail,\n    resetSendAuthorizationEmail,\n  } = useAuthorizedEmails(props.org, props.repo);\n\n  const isFormComplete =\n    props.method != undefined &&\n    props.event != undefined &&\n    email != undefined &&\n    email != '' &&\n    isValidEmail(email);\n\n  useEffect(() => {\n    if (successSendingAuthorizedEmail) {\n      startPolling(email);\n      resetSendAuthorizationEmail();\n      setIsEmailAuthModalOpen(false);\n    }\n  }, [successSendingAuthorizedEmail]);\n\n  useEffect(() => {\n    if (emailConfirmed) {\n      create({\n        config: {\n          email: email,\n        },\n        event: props.event?.type,\n        event_config: {},\n        method: props.method?.type,\n        title: title,\n      });\n      resetEmailConfirmed();\n    }\n  }, [emailConfirmed]);\n\n  useEffect(() => {\n    if (successCreatingNotification) {\n      resetCreatingNotification();\n      props.closeDrawer();\n    }\n  }, [successCreatingNotification]);\n\n  useEffect(() => {\n    if (errorCreatingNotification) {\n      props.setError('Unable to create notification');\n      resetCreatingNotification();\n    }\n  }, [errorCreatingNotification]);\n\n  const createNotification = async () => {\n    let emailStatus = null;\n    try {\n      emailStatus = await fetchAuthorizedEmail(props.org, props.repo, email);\n    } catch (err) {\n      props.setError('Unable to verify email');\n    }\n    if (emailStatus != null && emailStatus.confirmed) {\n      create({\n        config: {\n          email: email,\n        },\n        event: props.event?.type,\n        event_config: {},\n        method: props.method?.type,\n        title: title,\n      });\n    } else {\n      setIsEmailAuthModalOpen(true);\n    }\n  };\n\n  return (\n    <>\n      <Modal\n        variant={ModalVariant.small}\n        title=\"Email Authorization\"\n        isOpen={isEmailAuthModalOpen}\n        onClose={() => setIsEmailAuthModalOpen(false)}\n        actions={[\n          <Button\n            key=\"sendemail\"\n            variant=\"primary\"\n            onClick={() => sendAuthorizedEmail(email)}\n          >\n            Send Authorized Email\n          </Button>,\n          <Button\n            key=\"cancel\"\n            variant=\"link\"\n            onClick={() => setIsEmailAuthModalOpen(false)}\n          >\n            Cancel\n          </Button>,\n        ]}\n      >\n        <Conditional if={errorSendingAuthorizedEmail}>\n          <Alert\n            isInline\n            actionClose={\n              <AlertActionCloseButton onClose={resetSendAuthorizationEmail} />\n            }\n            variant=\"danger\"\n            title=\"Failure sending authorized email\"\n          />\n        </Conditional>\n        The email address {email} has not been authorized to recieve\n        notifications from this repository. Please click &lsquo;Send Authorized\n        Email&lsquo; to start the authorization process.\n      </Modal>\n      <Modal\n        variant={ModalVariant.small}\n        title=\"Email Authorization\"\n        isOpen={polling}\n        onClose={stopPolling}\n        actions={[\n          <Button key=\"cancel\" variant=\"primary\" onClick={stopPolling}>\n            Cancel\n          </Button>,\n        ]}\n      >\n        An email has been sent to {email}. Please click the link contained in\n        the email.\n      </Modal>\n      <Modal\n        variant={ModalVariant.small}\n        title=\"Email Authorization\"\n        isOpen={errorPolling}\n        actions={[\n          <Button\n            key=\"cancel\"\n            variant=\"primary\"\n            onClick={() => startPolling(email)}\n          >\n            Retry\n          </Button>,\n        ]}\n      >\n        Unable to verify email confirmation. Please wait a moment and retry.\n      </Modal>\n      <FormGroup\n        fieldId=\"email\"\n        label=\"E-mail address\"\n        isRequired\n        validated={email == '' || isValidEmail(email) ? 'default' : 'error'}\n        helperTextInvalid=\"Invalid email\"\n        helperTextInvalidIcon={<ExclamationCircleIcon />}\n      >\n        <TextInput\n          id=\"notification-email\"\n          isRequired\n          value={email}\n          onChange={(value) => setEmail(value)}\n        />\n      </FormGroup>\n      <FormGroup fieldId=\"title\" label=\"Title\">\n        <TextInput\n          id=\"notification-title\"\n          value={title}\n          onChange={(value) => setTitle(value)}\n        />\n      </FormGroup>\n      <ActionGroup>\n        <Button\n          isDisabled={!isFormComplete}\n          onClick={createNotification}\n          variant=\"primary\"\n        >\n          Submit\n        </Button>\n      </ActionGroup>\n    </>\n  );\n}\n\ninterface CreateEmailNotification {\n  org: string;\n  repo: string;\n  event: NotificationEvent;\n  method: NotificationMethod;\n  closeDrawer: () => void;\n  setError: (error: string) => void;\n}\n","import {NotificationEvent} from 'src/hooks/UseEvents';\nimport {NotificationMethod} from 'src/hooks/UseNotificationMethods';\nimport {\n  ActionGroup,\n  Alert,\n  AlertActionCloseButton,\n  Button,\n  FormGroup,\n  Modal,\n  ModalVariant,\n  TextInput,\n} from '@patternfly/react-core';\nimport {useEffect, useState} from 'react';\nimport {useUpdateNotifications} from 'src/hooks/UseUpdateNotifications';\n\nexport default function CreateFlowdockNotification(\n  props: CreateFlowdockNotification,\n) {\n  const [title, setTitle] = useState<string>('');\n  const [apiTopken, setAPIToken] = useState<string>('');\n  const {\n    create,\n    successCreatingNotification,\n    errorCreatingNotification,\n    resetCreatingNotification,\n  } = useUpdateNotifications(props.org, props.repo);\n\n  const isFormComplete =\n    props.method != undefined && props.event != undefined && apiTopken != '';\n\n  const createNotification = async () => {\n    create({\n      config: {\n        flow_api_token: apiTopken,\n      },\n      event: props.event?.type,\n      event_config: {},\n      method: props.method?.type,\n      title: title,\n    });\n  };\n\n  useEffect(() => {\n    if (successCreatingNotification) {\n      resetCreatingNotification();\n      props.closeDrawer();\n    }\n  }, [successCreatingNotification]);\n\n  useEffect(() => {\n    if (errorCreatingNotification) {\n      props.setError('Unable to create notification');\n      resetCreatingNotification();\n    }\n  }, [errorCreatingNotification]);\n\n  return (\n    <>\n      <FormGroup\n        fieldId=\"flowdock-api-token\"\n        label=\"Flowdock API token\"\n        isRequired\n      >\n        <TextInput\n          required\n          id=\"flowdock-api-token-field\"\n          value={apiTopken}\n          onChange={(value) => setAPIToken(value)}\n        />\n      </FormGroup>\n      <FormGroup fieldId=\"title\" label=\"Title\">\n        <TextInput\n          id=\"notification-title\"\n          value={title}\n          onChange={(value) => setTitle(value)}\n        />\n      </FormGroup>\n      <ActionGroup>\n        <Button\n          isDisabled={!isFormComplete}\n          onClick={createNotification}\n          variant=\"primary\"\n        >\n          Submit\n        </Button>\n      </ActionGroup>\n    </>\n  );\n}\n\ninterface CreateFlowdockNotification {\n  org: string;\n  repo: string;\n  event: NotificationEvent;\n  method: NotificationMethod;\n  closeDrawer: () => void;\n  setError: (error: string) => void;\n}\n","import {NotificationEvent} from 'src/hooks/UseEvents';\nimport {NotificationMethod} from 'src/hooks/UseNotificationMethods';\nimport {\n  ActionGroup,\n  Button,\n  FormGroup,\n  TextInput,\n} from '@patternfly/react-core';\nimport {useEffect, useState} from 'react';\nimport {useUpdateNotifications} from 'src/hooks/UseUpdateNotifications';\nimport {ExclamationCircleIcon} from '@patternfly/react-icons';\n\nexport default function CreateHipchatNotification(\n  props: CreateHipchatNotification,\n) {\n  const [roomId, setRoomId] = useState<string>('');\n  const [token, setToken] = useState<string>('');\n  const [title, setTitle] = useState<string>('');\n  const {\n    create,\n    successCreatingNotification,\n    errorCreatingNotification,\n    resetCreatingNotification,\n  } = useUpdateNotifications(props.org, props.repo);\n\n  const createNotification = async () => {\n    create({\n      config: {\n        notification_token: token,\n        room_id: roomId,\n      },\n      event: props.event?.type,\n      event_config: {},\n      method: props.method?.type,\n      title: title,\n    });\n  };\n\n  const isValidRoomId = (roomId: string) => {\n    const regex = /^[0-9]+$/;\n    return regex.test(roomId);\n  };\n\n  const isFormComplete =\n    props.method != undefined &&\n    props.event != undefined &&\n    token != '' &&\n    roomId != '' &&\n    isValidRoomId(roomId);\n\n  useEffect(() => {\n    if (successCreatingNotification) {\n      resetCreatingNotification();\n      props.closeDrawer();\n    }\n  }, [successCreatingNotification]);\n\n  useEffect(() => {\n    if (errorCreatingNotification) {\n      props.setError('Unable to create notification');\n      resetCreatingNotification();\n    }\n  }, [errorCreatingNotification]);\n\n  return (\n    <>\n      <FormGroup\n        fieldId=\"room-id-number\"\n        label=\"Room ID #\"\n        isRequired\n        helperTextInvalid=\"Must be a number\"\n        helperTextInvalidIcon={<ExclamationCircleIcon />}\n        validated={roomId == '' || isValidRoomId(roomId) ? 'default' : 'error'}\n      >\n        <TextInput\n          required\n          id=\"room-id-number-field\"\n          value={roomId}\n          onChange={(value) => setRoomId(value)}\n        />\n      </FormGroup>\n      <FormGroup\n        fieldId=\"room-notification-token\"\n        label=\"Room Notification Token\"\n        isRequired\n      >\n        <TextInput\n          required\n          id=\"room-notification-token-field\"\n          value={token}\n          onChange={(value) => setToken(value)}\n        />\n      </FormGroup>\n      <FormGroup fieldId=\"title\" label=\"Title\">\n        <TextInput\n          id=\"notification-title\"\n          value={title}\n          onChange={(value) => setTitle(value)}\n        />\n      </FormGroup>\n      <ActionGroup>\n        <Button\n          isDisabled={!isFormComplete}\n          onClick={createNotification}\n          variant=\"primary\"\n        >\n          Submit\n        </Button>\n      </ActionGroup>\n    </>\n  );\n}\n\ninterface CreateHipchatNotification {\n  org: string;\n  repo: string;\n  event: NotificationEvent;\n  method: NotificationMethod;\n  closeDrawer: () => void;\n  setError: (error: string) => void;\n}\n","import {NotificationEvent} from 'src/hooks/UseEvents';\nimport {NotificationMethod} from 'src/hooks/UseNotificationMethods';\nimport {\n  ActionGroup,\n  Alert,\n  AlertActionCloseButton,\n  Button,\n  FormGroup,\n  Modal,\n  ModalVariant,\n  TextInput,\n} from '@patternfly/react-core';\nimport {useEffect, useState} from 'react';\nimport EntitySearch from 'src/components/EntitySearch';\nimport {Entity} from 'src/resources/UserResource';\nimport {useUpdateNotifications} from 'src/hooks/UseUpdateNotifications';\n\nexport default function CreateQuayNotification(props: CreateQuayNotification) {\n  const [title, setTitle] = useState<string>('');\n  const [selectedEntity, setSelectedEntity] = useState<Entity>(null);\n  const {\n    create,\n    successCreatingNotification,\n    errorCreatingNotification,\n    resetCreatingNotification,\n  } = useUpdateNotifications(props.org, props.repo);\n\n  const isFormComplete =\n    props.method != undefined &&\n    props.event != undefined &&\n    selectedEntity != null;\n\n  const createNotification = async () => {\n    create({\n      config: {\n        target: selectedEntity,\n      },\n      event: props.event?.type,\n      event_config: {},\n      method: props.method?.type,\n      title: title,\n    });\n  };\n\n  useEffect(() => {\n    if (successCreatingNotification) {\n      resetCreatingNotification();\n      props.closeDrawer();\n    }\n  }, [successCreatingNotification]);\n\n  useEffect(() => {\n    if (errorCreatingNotification) {\n      props.setError('Unable to create notification');\n      resetCreatingNotification();\n    }\n  }, [errorCreatingNotification]);\n\n  return (\n    <>\n      <FormGroup\n        fieldId=\"quayNotificationRecipient\"\n        label=\"Recipient\"\n        isRequired\n      >\n        <EntitySearch\n          org={props.org}\n          onSelect={(e: Entity) => setSelectedEntity(e)}\n          onError={() => props.setError('Unable to look up users')}\n        />\n      </FormGroup>\n      <FormGroup fieldId=\"title\" label=\"Title\">\n        <TextInput\n          id=\"notification-title\"\n          value={title}\n          onChange={(value) => setTitle(value)}\n        />\n      </FormGroup>\n      <ActionGroup>\n        <Button\n          isDisabled={!isFormComplete}\n          onClick={createNotification}\n          variant=\"primary\"\n        >\n          Submit\n        </Button>\n      </ActionGroup>\n    </>\n  );\n}\n\ninterface CreateQuayNotification {\n  org: string;\n  repo: string;\n  event: NotificationEvent;\n  method: NotificationMethod;\n  closeDrawer: () => void;\n  setError: (error: string) => void;\n}\n","import {NotificationEvent} from 'src/hooks/UseEvents';\nimport {NotificationMethod} from 'src/hooks/UseNotificationMethods';\nimport {\n  ActionGroup,\n  Alert,\n  AlertActionCloseButton,\n  Button,\n  FormGroup,\n  Modal,\n  ModalVariant,\n  TextInput,\n} from '@patternfly/react-core';\nimport {useEffect, useState} from 'react';\nimport {useUpdateNotifications} from 'src/hooks/UseUpdateNotifications';\nimport {ExclamationCircleIcon} from '@patternfly/react-icons';\n\nexport default function CreateSlackNotification(\n  props: CreateSlackNotificationProps,\n) {\n  const [url, setUrl] = useState<string>('');\n  const [title, setTitle] = useState<string>('');\n  const {\n    create,\n    successCreatingNotification,\n    errorCreatingNotification,\n    resetCreatingNotification,\n  } = useUpdateNotifications(props.org, props.repo);\n\n  const isValidWebhookURL = (url: string) => {\n    const regex =\n      /^https:\\/\\/hooks\\.slack\\.com\\/services\\/[A-Z0-9]+\\/[A-Z0-9]+\\/[a-zA-Z0-9]+$/;\n    return regex.test(url);\n  };\n\n  const isFormComplete =\n    props.method != undefined &&\n    props.event != undefined &&\n    url != '' &&\n    isValidWebhookURL(url);\n\n  const createNotification = async () => {\n    create({\n      config: {\n        url: url,\n      },\n      event: props.event?.type,\n      event_config: {},\n      method: props.method?.type,\n      title: title,\n    });\n  };\n\n  useEffect(() => {\n    if (successCreatingNotification) {\n      resetCreatingNotification();\n      props.closeDrawer();\n    }\n  }, [successCreatingNotification]);\n\n  useEffect(() => {\n    if (errorCreatingNotification) {\n      props.setError('Unable to create notification');\n      resetCreatingNotification();\n    }\n  }, [errorCreatingNotification]);\n\n  return (\n    <>\n      <FormGroup\n        fieldId=\"slack-webhook-url\"\n        label=\"Webhook URL\"\n        isRequired\n        helperTextInvalid=\"Must be a valid slack url in the form ^https://hooks.slack.com/services/[A-Z0-9]+/[A-Z0-9]+/[a-zA-Z0-9]+$/\"\n        helperTextInvalidIcon={<ExclamationCircleIcon />}\n        validated={url == '' || isValidWebhookURL(url) ? 'default' : 'error'}\n      >\n        <TextInput\n          required\n          id=\"slack-webhook-url-field\"\n          value={url}\n          onChange={(value) => setUrl(value)}\n        />\n      </FormGroup>\n      <FormGroup fieldId=\"title\" label=\"Title\">\n        <TextInput\n          id=\"notification-title\"\n          value={title}\n          onChange={(value) => setTitle(value)}\n        />\n      </FormGroup>\n      <ActionGroup>\n        <Button\n          isDisabled={!isFormComplete}\n          onClick={createNotification}\n          variant=\"primary\"\n        >\n          Submit\n        </Button>\n      </ActionGroup>\n    </>\n  );\n}\n\ninterface CreateSlackNotificationProps {\n  org: string;\n  repo: string;\n  event: NotificationEvent;\n  method: NotificationMethod;\n  closeDrawer: () => void;\n  setError: (error: string) => void;\n}\n","import {NotificationEvent} from 'src/hooks/UseEvents';\nimport {NotificationMethod} from 'src/hooks/UseNotificationMethods';\nimport {\n  ActionGroup,\n  Button,\n  FormGroup,\n  TextArea,\n  TextInput,\n} from '@patternfly/react-core';\nimport {useEffect, useState} from 'react';\nimport {useUpdateNotifications} from 'src/hooks/UseUpdateNotifications';\nimport {ExclamationCircleIcon} from '@patternfly/react-icons';\n\nexport default function CreateWebhookNotification(\n  props: CreateWebhookNotificationProps,\n) {\n  const [url, setUrl] = useState<string>('');\n  const [jsonBody, setJsonBody] = useState<string>('');\n  const [title, setTitle] = useState<string>('');\n  const {\n    create,\n    successCreatingNotification,\n    errorCreatingNotification,\n    resetCreatingNotification,\n  } = useUpdateNotifications(props.org, props.repo);\n\n  const isValidURL = (url: string) => {\n    return url.startsWith('http://') || url.startsWith('https://');\n  };\n\n  const isFormComplete =\n    props.method != undefined &&\n    props.event != undefined &&\n    url != '' &&\n    isValidURL(url);\n\n  const createNotification = async () => {\n    create({\n      config: {\n        url: url,\n        template: jsonBody,\n      },\n      event: props.event?.type,\n      event_config: {},\n      method: props.method?.type,\n      title: title,\n    });\n  };\n\n  useEffect(() => {\n    if (successCreatingNotification) {\n      resetCreatingNotification();\n      props.closeDrawer();\n    }\n  }, [successCreatingNotification]);\n\n  useEffect(() => {\n    if (errorCreatingNotification) {\n      props.setError(errorCreatingNotification as string);\n      resetCreatingNotification();\n    }\n  }, [errorCreatingNotification]);\n\n  return (\n    <>\n      <FormGroup\n        fieldId=\"webhook-url\"\n        label=\"Webhook URL\"\n        isRequired\n        helperTextInvalid=\"URL must begin with http(s)://\"\n        helperTextInvalidIcon={<ExclamationCircleIcon />}\n        validated={url == '' || isValidURL(url) ? 'default' : 'error'}\n      >\n        <TextInput\n          required\n          id=\"webhook-url-field\"\n          value={url}\n          onChange={(value) => setUrl(value)}\n        />\n      </FormGroup>\n      <FormGroup fieldId=\"webhook-body\" label=\"POST JSON body template\">\n        <TextArea\n          id=\"json-body-field\"\n          value={jsonBody}\n          onChange={(value) => setJsonBody(value)}\n        />\n      </FormGroup>\n      <FormGroup fieldId=\"title\" label=\"Title\">\n        <TextInput\n          id=\"notification-title\"\n          value={title}\n          onChange={(value) => setTitle(value)}\n        />\n      </FormGroup>\n      <ActionGroup>\n        <Button\n          isDisabled={!isFormComplete}\n          onClick={createNotification}\n          variant=\"primary\"\n        >\n          Submit\n        </Button>\n      </ActionGroup>\n    </>\n  );\n}\n\ninterface CreateWebhookNotificationProps {\n  org: string;\n  repo: string;\n  event: NotificationEvent;\n  method: NotificationMethod;\n  closeDrawer: () => void;\n  setError: (error: string) => void;\n}\n","import {\n  Alert,\n  AlertActionCloseButton,\n  Dropdown,\n  DropdownItem,\n  DropdownToggle,\n  Form,\n  FormGroup,\n  Title,\n} from '@patternfly/react-core';\nimport {useState} from 'react';\nimport './NotificationsCreateNotification.css';\nimport Conditional from 'src/components/empty/Conditional';\nimport {NotificationEvent, useEvents} from 'src/hooks/UseEvents';\nimport {\n  NotificationMethod,\n  useNotificationMethods,\n} from 'src/hooks/UseNotificationMethods';\nimport {NotificationMethodType} from 'src/resources/NotificationResource';\nimport CreateEmailNotification from './NotificationsCreateNotificationEmail';\nimport CreateFlowdockNotification from './NotificationsCreateNotificationFlowdock';\nimport CreateHipchatNotification from './NotificationsCreateNotificationHipchat';\nimport CreateQuayNotification from './NotificationsCreateNotificationQuay';\nimport CreateSlackNotification from './NotificationsCreateNotificationSlack';\nimport CreateWebhookNotification from './NotificationsCreateNotificationWebhook';\n\nexport default function CreateNotification(props: CreateNotificationProps) {\n  const [isEventOpen, setIsEventOpen] = useState<boolean>();\n  const [isMethodOpen, setIsMethodOpen] = useState<boolean>();\n  const [event, setEvent] = useState<NotificationEvent>();\n  const [method, setMethod] = useState<NotificationMethod>();\n  const {events} = useEvents();\n  const {notificationMethods} = useNotificationMethods();\n  const [error, setError] = useState<string>('');\n\n  return (\n    <>\n      <Title headingLevel=\"h3\">Create Notification</Title>\n      <Form id=\"create-notification-form\">\n        <Conditional if={error != ''}>\n          <Alert\n            isInline\n            actionClose={\n              <AlertActionCloseButton onClose={() => setError('')} />\n            }\n            variant=\"danger\"\n            title={error}\n          />\n        </Conditional>\n        <FormGroup fieldId=\"event\" label=\"When this event occurs\" isRequired>\n          <Dropdown\n            className=\"create-notification-dropdown\"\n            required\n            onSelect={() => setIsEventOpen(false)}\n            toggle={\n              <DropdownToggle onToggle={(isOpen) => setIsEventOpen(isOpen)}>\n                {event?.title ? event?.title : 'Select event...'}\n              </DropdownToggle>\n            }\n            isOpen={isEventOpen}\n            dropdownItems={events.map((event) => (\n              <Conditional key={event.type} if={event.enabled}>\n                <DropdownItem onClick={() => setEvent(event)}>\n                  {event.icon} {event.title}\n                </DropdownItem>\n              </Conditional>\n            ))}\n          />\n        </FormGroup>\n        <FormGroup\n          fieldId=\"method\"\n          label=\"Then issue a notification\"\n          isRequired\n        >\n          <Dropdown\n            className=\"create-notification-dropdown\"\n            onSelect={() => setIsMethodOpen(false)}\n            toggle={\n              <DropdownToggle onToggle={(isOpen) => setIsMethodOpen(isOpen)}>\n                {method?.title ? method?.title : 'Select method...'}\n              </DropdownToggle>\n            }\n            isOpen={isMethodOpen}\n            dropdownItems={notificationMethods.map((method) => (\n              <Conditional key={method.type} if={method.enabled}>\n                <DropdownItem onClick={() => setMethod(method)}>\n                  {method.title}\n                </DropdownItem>\n              </Conditional>\n            ))}\n          />\n        </FormGroup>\n        <Conditional if={method?.type == NotificationMethodType.email}>\n          <CreateEmailNotification\n            org={props.org}\n            repo={props.repo}\n            event={event}\n            method={method}\n            closeDrawer={props.closeDrawer}\n            setError={setError}\n          />\n        </Conditional>\n        <Conditional\n          if={method?.type == NotificationMethodType.quaynotification}\n        >\n          <CreateQuayNotification\n            org={props.org}\n            repo={props.repo}\n            event={event}\n            method={method}\n            closeDrawer={props.closeDrawer}\n            setError={setError}\n          />\n        </Conditional>\n        <Conditional if={method?.type == NotificationMethodType.flowdock}>\n          <CreateFlowdockNotification\n            org={props.org}\n            repo={props.repo}\n            event={event}\n            method={method}\n            closeDrawer={props.closeDrawer}\n            setError={setError}\n          />\n        </Conditional>\n        <Conditional if={method?.type == NotificationMethodType.hipchat}>\n          <CreateHipchatNotification\n            org={props.org}\n            repo={props.repo}\n            event={event}\n            method={method}\n            closeDrawer={props.closeDrawer}\n            setError={setError}\n          />\n        </Conditional>\n        <Conditional if={method?.type == NotificationMethodType.slack}>\n          <CreateSlackNotification\n            org={props.org}\n            repo={props.repo}\n            event={event}\n            method={method}\n            closeDrawer={props.closeDrawer}\n            setError={setError}\n          />\n        </Conditional>\n        <Conditional if={method?.type == NotificationMethodType.webhook}>\n          <CreateWebhookNotification\n            org={props.org}\n            repo={props.repo}\n            event={event}\n            method={method}\n            closeDrawer={props.closeDrawer}\n            setError={setError}\n          />\n        </Conditional>\n      </Form>\n    </>\n  );\n}\n\ninterface CreateNotificationProps {\n  org: string;\n  repo: string;\n  closeDrawer: () => void;\n}\n","import {\n  Page,\n  PageSection,\n  PageSectionVariants,\n  Title,\n  Tabs,\n  Tab,\n  TabTitleText,\n  Drawer,\n  DrawerActions,\n  DrawerCloseButton,\n  DrawerContent,\n  DrawerContentBody,\n  DrawerHead,\n  DrawerPanelContent,\n} from '@patternfly/react-core';\nimport {QuayBreadcrumb} from 'src/components/breadcrumb/Breadcrumb';\nimport TagsList from './Tags/TagsList';\nimport {useLocation, useSearchParams, useNavigate} from 'react-router-dom';\nimport {useEffect, useRef, useState} from 'react';\nimport Settings from './Settings/Settings';\nimport {DrawerContentType} from './Types';\nimport AddPermissions from './Settings/PermissionsAddPermission';\nimport {\n  fetchRepositoryDetails,\n  RepositoryDetails as IRepositoryDetails,\n} from 'src/resources/RepositoryResource';\nimport ErrorBoundary from 'src/components/errors/ErrorBoundary';\nimport {addDisplayError, isErrorString} from 'src/resources/ErrorHandling';\nimport RequestError from 'src/components/errors/RequestError';\nimport {useQuayConfig} from 'src/hooks/UseQuayConfig';\nimport CreateNotification from './Settings/NotificationsCreateNotification';\nimport {useRepository} from 'src/hooks/UseRepository';\nimport {parseOrgNameFromUrl, parseRepoNameFromUrl} from 'src/libs/utils';\n\nenum TabIndex {\n  Tags = 'tags',\n  Information = 'information',\n  TagHistory = 'history',\n  Builds = 'builds',\n  Logs = 'logs',\n  Settings = 'settings',\n}\n\n// Return the tab as an enum or null if it does not exist\nfunction getTabIndex(tab: string) {\n  if (Object.values(TabIndex).includes(tab as TabIndex)) {\n    return tab as TabIndex;\n  }\n}\n\nexport default function RepositoryDetails() {\n  const config = useQuayConfig();\n  const [activeTabKey, setActiveTabKey] = useState(TabIndex.Tags);\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [drawerContent, setDrawerContent] = useState<DrawerContentType>(\n    DrawerContentType.None,\n  );\n  const [err, setErr] = useState<string>();\n\n  const drawerRef = useRef<HTMLDivElement>();\n\n  const organization = parseOrgNameFromUrl(location.pathname);\n  const repository = parseRepoNameFromUrl(location.pathname);\n  const {repoDetails, errorLoadingRepoDetails} = useRepository(\n    organization,\n    repository,\n  );\n\n  const requestedTabIndex = getTabIndex(searchParams.get('tab'));\n  if (requestedTabIndex && requestedTabIndex !== activeTabKey) {\n    setActiveTabKey(requestedTabIndex);\n  }\n\n  function tabsOnSelect(e, tabIndex) {\n    navigate(`${location.pathname}?tab=${tabIndex}`);\n  }\n\n  const closeDrawer = () => {\n    setDrawerContent(DrawerContentType.None);\n  };\n  const drawerContentOptions = {\n    [DrawerContentType.None]: null,\n    [DrawerContentType.AddPermission]: (\n      <AddPermissions\n        org={organization}\n        repo={repository}\n        closeDrawer={closeDrawer}\n      />\n    ),\n    [DrawerContentType.CreateNotification]: (\n      <CreateNotification\n        org={organization}\n        repo={repository}\n        closeDrawer={closeDrawer}\n      />\n    ),\n  };\n\n  useEffect(() => {\n    if (errorLoadingRepoDetails) {\n      setErr(\n        addDisplayError(\n          'Unable to get repository',\n          errorLoadingRepoDetails as Error,\n        ),\n      );\n    }\n  }, [errorLoadingRepoDetails]);\n\n  return (\n    <Drawer\n      isExpanded={drawerContent != DrawerContentType.None}\n      onExpand={() => {\n        drawerRef.current && drawerRef.current.focus();\n      }}\n    >\n      <DrawerContent\n        panelContent={\n          <DrawerPanelContent>\n            <DrawerHead>\n              <span\n                tabIndex={drawerContent != DrawerContentType.None ? 0 : -1}\n                ref={drawerRef}\n              >\n                {drawerContentOptions[drawerContent]}\n              </span>\n              <DrawerActions>\n                <DrawerCloseButton onClick={closeDrawer} />\n              </DrawerActions>\n            </DrawerHead>\n          </DrawerPanelContent>\n        }\n      >\n        <DrawerContentBody>\n          <Page>\n            <QuayBreadcrumb />\n            <PageSection\n              variant={PageSectionVariants.light}\n              className=\"no-padding-bottom\"\n            >\n              <Title data-testid=\"repo-title\" headingLevel=\"h1\">\n                {repository}\n              </Title>\n            </PageSection>\n            <PageSection\n              variant={PageSectionVariants.light}\n              className=\"no-padding-on-sides\"\n              style={{padding: 0}}\n            >\n              <ErrorBoundary\n                hasError={isErrorString(err)}\n                fallback={<RequestError message={err} />}\n              >\n                <Tabs activeKey={activeTabKey} onSelect={tabsOnSelect}>\n                  <Tab\n                    eventKey={TabIndex.Tags}\n                    title={<TabTitleText>Tags</TabTitleText>}\n                  >\n                    <TagsList\n                      organization={organization}\n                      repository={repository}\n                      repoDetails={repoDetails}\n                    />\n                  </Tab>\n                  <Tab\n                    eventKey={TabIndex.Settings}\n                    title={<TabTitleText>Settings</TabTitleText>}\n                    isHidden={\n                      config?.features.UI_V2_REPO_SETTINGS != true ||\n                      !repoDetails?.can_admin\n                    }\n                  >\n                    <Settings\n                      org={organization}\n                      repo={repository}\n                      setDrawerContent={setDrawerContent}\n                      repoDetails={repoDetails}\n                    />\n                  </Tab>\n                </Tabs>\n              </ErrorBoundary>\n            </PageSection>\n          </Page>\n        </DrawerContentBody>\n      </DrawerContent>\n    </Drawer>\n  );\n}\n","import {useQuery} from '@tanstack/react-query';\nimport {fetchRepositoryDetails} from 'src/resources/RepositoryResource';\n\nexport function useRepository(org: string, repo: string) {\n  const {data, error} = useQuery(['repodetails', org, repo], () =>\n    fetchRepositoryDetails(org, repo),\n  );\n\n  return {\n    repoDetails: data,\n    errorLoadingRepoDetails: error,\n  };\n}\n","import {\n  Select,\n  SelectOption,\n  SelectVariant,\n  Flex,\n  FlexItem,\n} from '@patternfly/react-core';\nimport {useState} from 'react';\nimport {Manifest} from 'src/resources/TagResource';\n\nexport default function ArchSelect(props: ArchSelectProps) {\n  if (!props.render) return null;\n  const [isSelectOpen, setIsSelectOpen] = useState<boolean>();\n\n  return (\n    <Flex>\n      <FlexItem>Architecture</FlexItem>\n      <FlexItem>\n        <Select\n          variant={SelectVariant.single}\n          placeholderText=\"Architecture\"\n          aria-label=\"Architecture select\"\n          onToggle={() => {\n            setIsSelectOpen(!isSelectOpen);\n          }}\n          onSelect={(e, digest) => {\n            props.setDigest(digest as string);\n            setIsSelectOpen(false);\n          }}\n          selections={props.digest}\n          isOpen={isSelectOpen}\n          data-testid=\"arch-select\"\n        >\n          {props.options.map((manifest, index) => (\n            <SelectOption key={index} value={manifest.digest}>\n              {' '}\n              {`${manifest.platform.os} on ${manifest.platform.architecture}`}{' '}\n            </SelectOption>\n          ))}\n        </Select>\n      </FlexItem>\n    </Flex>\n  );\n}\n\ntype ArchSelectProps = {\n  digest: string;\n  options: Manifest[];\n  setDigest: (digest: string) => void;\n  render: boolean;\n};\n","\n      import API from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js!./Details.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js!./Details.css\";\n       export default content && content.locals ? content.locals : undefined;\n","import {\n  DescriptionList,\n  DescriptionListTerm,\n  DescriptionListGroup,\n  DescriptionListDescription,\n  ClipboardCopy,\n  Title,\n} from '@patternfly/react-core';\nimport {useQuayConfig} from 'src/hooks/UseQuayConfig';\nimport './Details.css';\n\nexport default function CopyTags(props: CopyTagsProps) {\n  const config = useQuayConfig();\n  const domain = config?.config.SERVER_HOSTNAME;\n\n  return (\n    <>\n      <Title headingLevel=\"h3\" className=\"fetch-tags-title\">\n        Fetch Tag\n      </Title>\n      <DescriptionList data-testid=\"copy-pull-commands\">\n        <DescriptionListGroup>\n          <DescriptionListTerm>Podman Pull (by tag)</DescriptionListTerm>\n          <DescriptionListDescription>\n            <ClipboardCopy\n              data-testid=\"podman-tag-clipboardcopy\"\n              isReadOnly\n              hoverTip=\"Copy\"\n              clickTip=\"Copied\"\n            >\n              {`podman pull ${domain}/${props.org}/${props.repo}:${props.tag}`}\n            </ClipboardCopy>\n          </DescriptionListDescription>\n        </DescriptionListGroup>\n        <DescriptionListGroup>\n          <DescriptionListTerm>Docker Pull (by tag)</DescriptionListTerm>\n          <DescriptionListDescription>\n            <ClipboardCopy\n              data-testid=\"docker-tag-clipboardcopy\"\n              isReadOnly\n              hoverTip=\"Copy\"\n              clickTip=\"Copied\"\n            >\n              {`docker pull ${domain}/${props.org}/${props.repo}:${props.tag}`}\n            </ClipboardCopy>\n          </DescriptionListDescription>\n        </DescriptionListGroup>\n        <DescriptionListGroup>\n          <DescriptionListTerm>Podman Pull (by digest)</DescriptionListTerm>\n          <DescriptionListDescription>\n            <ClipboardCopy\n              data-testid=\"podman-digest-clipboardcopy\"\n              isReadOnly\n              hoverTip=\"Copy\"\n              clickTip=\"Copied\"\n            >\n              {`podman pull ${domain}/${props.org}/${props.repo}@${props.digest}`}\n            </ClipboardCopy>\n          </DescriptionListDescription>\n        </DescriptionListGroup>\n        <DescriptionListGroup>\n          <DescriptionListTerm>Docker Pull (by digest)</DescriptionListTerm>\n          <DescriptionListDescription>\n            <ClipboardCopy\n              data-testid=\"docker-digest-clipboardcopy\"\n              isReadOnly\n              hoverTip=\"Copy\"\n              clickTip=\"Copied\"\n            >\n              {`docker pull ${domain}/${props.org}/${props.repo}@${props.digest}`}\n            </ClipboardCopy>\n          </DescriptionListDescription>\n        </DescriptionListGroup>\n      </DescriptionList>\n    </>\n  );\n}\n\ntype CopyTagsProps = {\n  org: string;\n  repo: string;\n  tag: string;\n  digest: string;\n};\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js!./Labels.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js!./Labels.css\";\n       export default content && content.locals ? content.locals : undefined;\n","import {useEffect, useState} from 'react';\nimport {\n  getLabels,\n  LabelsResponse,\n  Label as ImageLabel,\n} from 'src/resources/TagResource';\nimport {Label, Skeleton} from '@patternfly/react-core';\nimport './Labels.css';\n\nexport default function Labels(props: LabelsProps) {\n  const [labels, setLabels] = useState<ImageLabel[]>([]);\n  const [err, setErr] = useState<boolean>(false);\n  const [loading, setLoading] = useState<boolean>(true);\n\n  useEffect(() => {\n    (async () => {\n      try {\n        const labelsResp: LabelsResponse = await getLabels(\n          props.org,\n          props.repo,\n          props.digest,\n        );\n        setLabels(labelsResp.labels);\n      } catch (error: any) {\n        console.error('Unable to get labels: ', error);\n        setErr(true);\n      } finally {\n        setLoading(false);\n      }\n    })();\n  }, []);\n\n  if (err) {\n    return <>Unable to get labels</>;\n  }\n\n  if (loading) {\n    return <Skeleton width=\"100%\" />;\n  }\n\n  if (labels != null && labels.length === 0) {\n    return <>No labels found</>;\n  }\n\n  return (\n    <>\n      {labels.map((label: ImageLabel) => (\n        <>\n          <Label key={label.key} className=\"label\">\n            <span className=\"label-content\">\n              {label.key} = {label.value}\n            </span>\n          </Label>{' '}\n        </>\n      ))}\n    </>\n  );\n}\n\ninterface LabelsProps {\n  org: string;\n  repo: string;\n  digest: string;\n}\n","import {\n  DescriptionList,\n  DescriptionListTerm,\n  DescriptionListGroup,\n  DescriptionListDescription,\n  Divider,\n  PageSection,\n  PageSectionVariants,\n  ClipboardCopy,\n  Skeleton,\n  Page,\n} from '@patternfly/react-core';\nimport CopyTags from './DetailsCopyTags';\nimport {Tag} from 'src/resources/TagResource';\nimport {formatDate} from 'src/libs/utils';\nimport Labels from 'src/components/labels/Labels';\nimport SecurityDetails from 'src/routes/RepositoryDetails/Tags/SecurityDetails';\nimport ImageSize from 'src/components/Table/ImageSize';\n\nexport default function Details(props: DetailsProps) {\n  return (\n    <Page>\n      <PageSection variant={PageSectionVariants.light}>\n        <DescriptionList\n          columnModifier={{\n            default: '2Col',\n          }}\n          data-testid=\"tag-details\"\n        >\n          <DescriptionListGroup data-testid=\"name\">\n            <DescriptionListTerm>Name</DescriptionListTerm>\n            <DescriptionListDescription>\n              {props.tag.name ? (\n                props.tag.name\n              ) : (\n                <Skeleton width=\"100%\"></Skeleton>\n              )}\n            </DescriptionListDescription>\n          </DescriptionListGroup>\n          <DescriptionListGroup data-testid=\"creation\">\n            <DescriptionListTerm>Creation</DescriptionListTerm>\n            <DescriptionListDescription>\n              {props.tag.start_ts ? (\n                formatDate(props.tag.start_ts)\n              ) : (\n                <Skeleton width=\"100%\"></Skeleton>\n              )}\n            </DescriptionListDescription>\n          </DescriptionListGroup>\n          <DescriptionListGroup data-testid=\"repository\">\n            <DescriptionListTerm>Repository</DescriptionListTerm>\n            <DescriptionListDescription>\n              {props.repo ? props.repo : <Skeleton width=\"100%\"></Skeleton>}\n            </DescriptionListDescription>\n          </DescriptionListGroup>\n          <DescriptionListGroup data-testid=\"modified\">\n            <DescriptionListTerm>Modified</DescriptionListTerm>\n            <DescriptionListDescription>\n              {props.tag.last_modified ? (\n                formatDate(props.tag.last_modified)\n              ) : (\n                <Skeleton width=\"100%\"></Skeleton>\n              )}\n            </DescriptionListDescription>\n          </DescriptionListGroup>\n          <DescriptionListGroup>\n            <DescriptionListTerm>Digest</DescriptionListTerm>\n            <DescriptionListDescription>\n              {props.digest ? (\n                <ClipboardCopy\n                  data-testid=\"digest-clipboardcopy\"\n                  isReadOnly\n                  hoverTip=\"Copy\"\n                  clickTip=\"Copied\"\n                  variant=\"inline-compact\"\n                >\n                  {props.digest}\n                </ClipboardCopy>\n              ) : (\n                <Skeleton width=\"100%\"></Skeleton>\n              )}\n            </DescriptionListDescription>\n          </DescriptionListGroup>\n          <DescriptionListGroup data-testid=\"size\">\n            <DescriptionListTerm>Size</DescriptionListTerm>\n            <DescriptionListDescription>\n              {props.digest != '' ? (\n                <ImageSize\n                  org={props.org}\n                  repo={props.repo}\n                  digest={props.digest}\n                />\n              ) : (\n                <Skeleton width=\"100%\"></Skeleton>\n              )}\n            </DescriptionListDescription>\n          </DescriptionListGroup>\n          <DescriptionListGroup data-testid=\"vulnerabilities\">\n            <DescriptionListTerm>Vulnerabilities</DescriptionListTerm>\n            <DescriptionListDescription>\n              <SecurityDetails\n                org={props.org}\n                repo={props.repo}\n                digest={props.digest}\n                tag={props.tag.name}\n                cacheResults={true}\n              />\n            </DescriptionListDescription>\n          </DescriptionListGroup>\n          <DescriptionListGroup data-testid=\"labels\">\n            <DescriptionListTerm>Labels</DescriptionListTerm>\n            <DescriptionListDescription>\n              {props.tag.manifest_digest !== '' ? (\n                <Labels\n                  org={props.org}\n                  repo={props.repo}\n                  digest={props.tag.manifest_digest}\n                />\n              ) : (\n                <Skeleton width=\"100%\"></Skeleton>\n              )}\n            </DescriptionListDescription>\n          </DescriptionListGroup>\n        </DescriptionList>\n      </PageSection>\n      <Divider />\n      <PageSection variant={PageSectionVariants.light}>\n        <CopyTags\n          org={props.org}\n          repo={props.repo}\n          tag={props.tag.name}\n          digest={props.digest}\n        />\n      </PageSection>\n    </Page>\n  );\n}\n\ntype DetailsProps = {\n  tag: Tag;\n  org: string;\n  repo: string;\n  digest: string;\n};\n","import React from 'react';\nimport {Text, TextContent, TextVariants} from '@patternfly/react-core';\nimport {TableComposable, Tbody, Th, Thead, Tr} from '@patternfly/react-table';\nimport {VulnerabilityListItem} from 'src/atoms/VulnerabilityReportState';\nimport {ExclamationTriangleIcon} from '@patternfly/react-icons';\nimport {MinusCircleIcon} from '@patternfly/react-icons';\n\nconst getDistro = function (vuln: VulnerabilityListItem) {\n  if (vuln.Metadata.DistroName) {\n    return vuln.NamespaceName.split(':', 1);\n  }\n  return 'Unknown';\n};\n\nconst getSeverityTooltip = function (vuln: VulnerabilityListItem) {\n  const distro = getDistro(vuln);\n\n  let result =\n    'Note: This vulnerability was originally given a CVSSv3 score of ' +\n    vuln.Metadata.NVD.CVSSv3.Score +\n    ' by NVD';\n\n  if (vuln.Severity != 'Unknown') {\n    result =\n      result + ', but was subsequently reclassified as a ' + vuln.Severity;\n  }\n\n  if (distro != 'Unknown') {\n    result = result + ' issued by ' + distro;\n  }\n  return result;\n};\n\nconst getSeverityIcon = (severity: string) => {\n  switch (severity) {\n    case 'high':\n      return <ExclamationTriangleIcon color={'#C9190B'} />;\n    case 'medium':\n      return <ExclamationTriangleIcon color={'#EC7A08'} />;\n    case 'low':\n      return <MinusCircleIcon color={'#3E8635'} />;\n  }\n};\n\nexport function SecurityReportMetadataTable(\n  props: SecurityDetailsMetadataProps,\n) {\n  return (\n    <TextContent style={{paddingRight: '30px'}}>\n      <Text component={TextVariants.p}>Severity Note</Text>\n      <Text component={TextVariants.small}>\n        {getSeverityTooltip(props.vulnerability)}\n      </Text>\n\n      <Text component={TextVariants.p}>Vectors</Text>\n      <TableComposable aria-label=\"Vulnerabilities\" variant=\"compact\">\n        <Thead cellPadding={'5px'}>\n          <Tr marginWidth={0} className=\"pf-u-text-align-left\">\n            {props.vulnerability.Metadata.NVD.CVSSv3.Vectors.split('/')\n              .slice(1)\n              .map((vector, i) => {\n                return (\n                  <Th key={i} modifier=\"nowrap\">\n                    {NVD_VECTORS[vector.split(':')[0]]?.title}\n                  </Th>\n                );\n              })}\n          </Tr>\n        </Thead>\n        <Tbody>\n          <Tr>\n            {props.vulnerability.Metadata.NVD.CVSSv3.Vectors.split('/')\n              .slice(1)\n              .map((vector, i) => {\n                const vectorType = vector.split(':')[0];\n                const vectorValue = vector.split(':')[1];\n                const title = NVD_VECTORS[vectorType].values.filter(\n                  (value) => value.id == vectorValue,\n                )[0].title;\n                const severity = NVD_VECTORS[vectorType].values.filter(\n                  (value) => value.id == vectorValue,\n                )[0].severity;\n                return (\n                  <Th key={i} modifier=\"nowrap\">\n                    {getSeverityIcon(severity)} {title}\n                  </Th>\n                );\n              })}\n          </Tr>\n        </Tbody>\n      </TableComposable>\n      {props.vulnerability.Description && (\n        <>\n          <Text component={TextVariants.p}>Description</Text>\n          <Text component={TextVariants.small}>\n            {props.vulnerability.Description}\n          </Text>\n        </>\n      )}\n    </TextContent>\n  );\n}\n\nconst NVD_VECTORS = {\n  AV: {\n    title: 'Attack Vector',\n    description:\n      'This metric reflects how the vulnerability is exploited. The more remote an attacker can be to attack a host, the greater the vulnerability score.',\n    values: [\n      {\n        id: 'N',\n        title: 'Network',\n        description:\n          'A vulnerability exploitable with network access means the vulnerable software is bound to the network stack and the attacker does not require local network access or local access.  Such a vulnerability is often termed \"remotely exploitable\". For example, an attacker causing a denial of service (DoS) by sending a specially crafted TCP packet across a wide area network.',\n        severity: 'high',\n      },\n      {\n        id: 'A',\n        title: 'Adjacent Network',\n        description:\n          'A vulnerability exploitable with adjacent network access means the vulnerable software is bound to the network stack. The attack is limited at the protocol level to a logically adjacent topology. An attack can be launched from the same shared physical (e.g., Bluetooth or IEEE 802.11) or logical (e.g., local IP subnet) network, or from within a secure or otherwise limited administrative domain.',\n        severity: 'medium',\n      },\n      {\n        id: 'L',\n        title: 'Local',\n        description:\n          'A vulnerability exploitable with only local access requires the attacker to have local access to the target system (e.g., keyboard, console), or remotely (e.g., SSH); or rely on User Interaction by another person to perform actions to exploit the vulnerability (e.g., using social engineering techniques to trick a legitimate user into opening a malicious document).',\n        severity: 'low',\n      },\n      {\n        id: 'P',\n        title: 'Physical',\n        description:\n          'A vulnerability exploitable with Physical access requires the attacker to have physical access to the vulnerable system or a local (shell) account. Examples of locally exploitable vulnerabilities are peripheral attacks such as Firewire/USB DMA attacks.',\n        severity: 'low',\n      },\n    ],\n  },\n\n  AC: {\n    title: 'Attack Complexity',\n    description:\n      'This metric describes the conditions beyond the attacker’s control that must exist in order to exploit the vulnerability. The Base Score is greatest for the least complex attacks.',\n    values: [\n      {\n        id: 'L',\n        title: 'Low',\n        description:\n          'Specialized access conditions or extenuating circumstances do not exist making this easy to exploit',\n        severity: 'high',\n      },\n      {\n        id: 'H',\n        title: 'High',\n        description:\n          'Specialized access conditions exist making this harder to exploit',\n        severity: 'low',\n      },\n    ],\n  },\n\n  PR: {\n    title: 'Privileges Required',\n    description:\n      'This metric describes the level of privileges an attacker must possess before exploiting the vulnerability. If no privileges are required, the base score is greatest.',\n    values: [\n      {\n        id: 'N',\n        title: 'None',\n        description: 'The attacker is unauthorized prior to attack.',\n        severity: 'high',\n      },\n      {\n        id: 'L',\n        title: 'Low',\n        description:\n          'An attacker with Low privileges has the ability to access only non-sensitive resources.',\n        severity: 'medium',\n      },\n      {\n        id: 'H',\n        title: 'High',\n        description:\n          'The attacker requires privileges that provide significant control(e.g., component-wide settings and files) over the vulnerable component.',\n        severity: 'low',\n      },\n    ],\n  },\n\n  UI: {\n    title: 'User Interaction',\n    description:\n      'This metric captures the requirement for a human user, other than the attacker, to participate in the successful compromise of the vulnerable component. If no user interaction is required, the base score is greatest.',\n    values: [\n      {\n        id: 'N',\n        title: 'None',\n        description:\n          'The system can be exploited without interaction from any user.',\n        severity: 'high',\n      },\n      {\n        id: 'R',\n        title: 'Required',\n        description:\n          'The system can be exploited with user interaction(e.g., installation of an application).',\n        severity: 'medium',\n      },\n    ],\n  },\n\n  S: {\n    title: 'Scope',\n    description:\n      'This metric captures whether a vulnerability in one vulnerable component impacts resources in components beyond its security scope. The Base Score is greatest when a scope change occurs.',\n    values: [\n      {\n        id: 'U',\n        title: 'Unchanged',\n        description:\n          'An exploited vulnerability can only affect resources managed by the same security authority. The vulnerable component and the impacted component are either the same, or both are managed by the same security authority.',\n        severity: 'low',\n      },\n      {\n        id: 'C',\n        title: 'Changed',\n        description:\n          'An exploited vulnerability can affect resources beyond the security scope managed by the security authority of the vulnerable component. The vulnerable component and the impacted component are different and managed by different security authorities.',\n        severity: 'high',\n      },\n    ],\n  },\n\n  C: {\n    title: 'Confidentiality Impact',\n    description:\n      'This metric measures the impact on confidentiality of a successfully exploited vulnerability. Confidentiality refers to limiting information access and disclosure to only authorized users, as well as preventing access by, or disclosure to, unauthorized ones. Increased confidentiality impact increases the vulnerability score.',\n    values: [\n      {\n        id: 'H',\n        title: 'High',\n        description:\n          \"There is a total loss of confidentiality, resulting in disclosing all resources within the impacted component to the attacker. For example, an attacker steals the administrator's password, or private encryption keys of a web server.\",\n        severity: 'high',\n      },\n      {\n        id: 'L',\n        title: 'Low',\n        description:\n          'There is some loss of confidentiality. Access to some restricted information is obtained, but the attacker does not have control over what information is obtained, or the amount or kind of loss is limited. The information disclosure does not cause a direct, serious loss to the impacted component.',\n        severity: 'medium',\n      },\n      {\n        id: 'N',\n        title: 'None',\n        description: 'There is no impact to the confidentiality of the system.',\n        severity: 'low',\n      },\n    ],\n  },\n\n  I: {\n    title: 'Integrity Impact',\n    description:\n      'This metric measures the impact to integrity of a successfully exploited vulnerability. Integrity refers to the trustworthiness and guaranteed veracity of information. The vulnerability Score is greatest when the consequence to the impacted component is highest.',\n    values: [\n      {\n        id: 'H',\n        title: 'High',\n        description:\n          'There is a total compromise of system integrity. There is a complete loss of system protection, resulting in the entire system being compromised. For example, the attacker is able to modify any/all files on the target system',\n        severity: 'high',\n      },\n      {\n        id: 'L',\n        title: 'Low',\n        description:\n          'Modification of some system files or information is possible, but the attacker does not have control over what can be modified, or the scope of what the attacker can affect is limited. For example, system or application files may be overwritten or modified, but either the attacker has no control over which files are affected or the attacker can modify files within only a limited context or scope.',\n        severity: 'medium',\n      },\n      {\n        id: 'N',\n        title: 'None',\n        description: 'There is no impact to the integrity of the system.',\n        severity: 'low',\n      },\n    ],\n  },\n\n  A: {\n    title: 'Availability Impact',\n    description:\n      'This metric measures the impact to availability of a successfully exploited vulnerability. Availability refers to the accessibility of information resources. Attacks that consume network bandwidth, processor cycles, or disk space all impact the availability of a system. Increased availability impact increases the vulnerability score.',\n    values: [\n      {\n        id: 'H',\n        title: 'High',\n        description:\n          'There is a total shutdown of the affected resource. The attacker can render the resource completely unavailable.',\n        severity: 'high',\n      },\n      {\n        id: 'L',\n        title: 'Low',\n        description:\n          'There is reduced performance or interruptions in resource availability. An example is a network-based flood attack that permits a limited number of successful connections to an Internet service.',\n        severity: 'medium',\n      },\n      {\n        id: 'N',\n        title: 'None',\n        description: 'There is no impact to the availability of the system.',\n        severity: 'low',\n      },\n    ],\n  },\n\n  E: {\n    title: 'Exploit Code Maturity',\n    description:\n      'This metric measures the likelihood of the vulnerability being attacked, and is based on the current state of exploit techniques, code availability or active exploitation.',\n    values: [\n      {\n        id: 'X',\n        title: 'Not Defined',\n        description:\n          'Assigning this value indicates there is insufficient information to choose one of the other values, and has no impact on the overall Temporal Score.',\n        severity: 'high',\n      },\n      {\n        id: 'H',\n        title: 'High',\n        description:\n          'No exploit is required and details are widely available. Exploit code works in every situation, or is actively being delivered via an autonomous agent (such as a worm or virus).',\n        severity: 'high',\n      },\n      {\n        id: 'F',\n        title: 'Functional',\n        description:\n          'Functional exploit code is available. The code works in most situations where the vulnerability exists.',\n        severity: 'medium',\n      },\n      {\n        id: 'P',\n        title: 'Proof-of-Concept',\n        description:\n          'An attack demonstration is not practical for most systems. The code or technique is not functional in all situations and may require substantial modification by a skilled attacker.',\n        severity: 'medium',\n      },\n      {\n        id: 'U',\n        title: 'Unproven',\n        description:\n          'No exploit code is available, or an exploit is theoretical.',\n        severity: 'low',\n      },\n    ],\n  },\n\n  RL: {\n    title: 'Remediation Level',\n    description:\n      'A typical vulnerability is unpatched when initially published. Workarounds or hotfixes may offer interim remediation until an official patch or upgrade is issued. The less official and permanent a fix, the higher the vulnerability score.',\n    values: [\n      {\n        id: 'X',\n        title: 'Not Defined',\n        description:\n          'Assigning this value indicates there is insufficient information to choose one of the other values, and has no impact on the overall Temporal Score.',\n        severity: 'high',\n      },\n      {\n        id: 'U',\n        title: 'Unavailable',\n        description:\n          'There is either no solution available or it is impossible to apply.',\n        severity: 'high',\n      },\n      {\n        id: 'W',\n        title: 'Workaround',\n        description:\n          'There is an unofficial, non-vendor solution available. Users of the affected technology may create a patch of their own or provide steps to work around or mitigate the vulnerability.',\n        severity: 'medium',\n      },\n      {\n        id: 'T',\n        title: 'Temporary Fix',\n        description:\n          'There is an official but temporary fix available. This includes instances where the vendor issues a temporary hotfix, tool, or workaround.',\n        severity: 'medium',\n      },\n      {\n        id: 'O',\n        title: 'Official Fix',\n        description:\n          'A complete vendor solution is available. Either the vendor has issued an official patch, or an upgrade is available.',\n        severity: 'low',\n      },\n    ],\n  },\n\n  RC: {\n    title: 'Report Confidence',\n    description:\n      'This metric measures the degree of confidence in the existence of the vulnerability and the credibility of known technical details. The urgency of a vulnerability is higher when a vulnerability is known to exist with certainty. ',\n    values: [\n      {\n        id: 'X',\n        title: 'Not Defined',\n        description:\n          'Assigning this value indicates there is insufficient information to choose one of the other values, and has no impact on the overall Temporal Score.',\n        severity: 'high',\n      },\n      {\n        id: 'C',\n        title: 'Confirmed',\n        description:\n          'Detailed reports exist, or functional reproduction is possible (functional exploits may provide this).',\n        severity: 'high',\n      },\n      {\n        id: 'R',\n        title: 'Reasonable',\n        description:\n          'Significant details are published, but researchers do not have full confidence in the root cause. The bug is reproducible and at least one impact is able to be verified (proof-of-concept exploits may provide this).',\n        severity: 'medium',\n      },\n      {\n        id: 'U',\n        title: 'Unknown',\n        description:\n          'Reporters are uncertain of the true nature of the vulnerability, and there is little confidence in the validity of the reports.',\n        severity: 'low',\n      },\n    ],\n  },\n\n  CR: {\n    title: 'Confidentiality Requirement',\n    description:\n      'This metrics enables customization of CVSS score depending on the importance of the affected IT asset to a user’s organization, measured in terms of Confidentiality.',\n    values: [\n      {\n        id: 'X',\n        title: 'Not Defined',\n        description:\n          'Assigning this value indicates there is insufficient information to choose one of the other values, and has no impact on the overall Environmental Score.',\n        severity: 'high',\n      },\n      {\n        id: 'H',\n        title: 'High',\n        description:\n          'Loss of Confidentiality can have a catastrophic adverse effect on the organization or individuals associated (e.g., employees, customers).',\n        severity: 'high',\n      },\n      {\n        id: 'M',\n        title: 'Medium',\n        description:\n          'Loss of Confidentiality can have a serious adverse effect on the organization or individuals associated (e.g., employees, customers).',\n        severity: 'medium',\n      },\n      {\n        id: 'L',\n        title: 'Low',\n        description:\n          'Loss of Confidentiality can have only a limited adverse effect on the organization or individuals associated (e.g., employees, customers).',\n        severity: 'low',\n      },\n    ],\n  },\n\n  IR: {\n    title: 'Integrity Requirement',\n    description:\n      'This metrics enables customization of CVSS score depending on the importance of the affected IT asset to a user’s organization, measured in terms of Integrity.',\n    values: [\n      {\n        id: 'X',\n        title: 'Not Defined',\n        description:\n          'Assigning this value indicates there is insufficient information to choose one of the other values, and has no impact on the overall Environmental Score.',\n        severity: 'high',\n      },\n      {\n        id: 'H',\n        title: 'High',\n        description:\n          'Loss of Integrity can have a catastrophic adverse effect on the organization or individuals associated (e.g., employees, customers).',\n        severity: 'high',\n      },\n      {\n        id: 'M',\n        title: 'Medium',\n        description:\n          'Loss of Integrity can have a serious adverse effect on the organization or individuals associated (e.g., employees, customers).',\n        severity: 'medium',\n      },\n      {\n        id: 'L',\n        title: 'Low',\n        description:\n          'Loss of Integrity can have only a limited adverse effect on the organization or individuals associated (e.g., employees, customers).',\n        severity: 'low',\n      },\n    ],\n  },\n\n  AR: {\n    title: 'Availability Requirement',\n    description:\n      'This metrics enables customization of CVSS score depending on the importance of the affected IT asset to a user’s organization, measured in terms of Availability.',\n    values: [\n      {\n        id: 'X',\n        title: 'Not Defined',\n        description:\n          'Assigning this value indicates there is insufficient information to choose one of the other values, and has no impact on the overall Environmental Score.',\n        severity: 'high',\n      },\n      {\n        id: 'H',\n        title: 'High',\n        description:\n          'Loss of Availability can have a catastrophic adverse effect on the organization or individuals associated (e.g., employees, customers).',\n        severity: 'high',\n      },\n      {\n        id: 'M',\n        title: 'Medium',\n        description:\n          'Loss of Availability can have a serious adverse effect on the organization or individuals associated (e.g., employees, customers).',\n        severity: 'medium',\n      },\n      {\n        id: 'L',\n        title: 'Low',\n        description:\n          'Loss of Availability can have only a limited adverse effect on the organization or individuals associated (e.g., employees, customers).',\n        severity: 'low',\n      },\n    ],\n  },\n\n  MAV: {\n    title: 'Modified Attack Vector',\n    description:\n      'This metrics enables the override of base metrics based on specific characteristics of a user’s environment.',\n    values: [\n      {\n        id: 'X',\n        title: 'Not Defined',\n        description:\n          'Assigning this value indicates there is insufficient information to choose one of the other values, and has no impact on the overall Environmental Score.',\n        severity: 'high',\n      },\n      {\n        id: 'N',\n        title: 'Network',\n        description:\n          'A vulnerability exploitable with network access means the vulnerable software is bound to the network stack and the attacker does not require local network access or local access.  Such a vulnerability is often termed \"remotely exploitable\".  An example of a network attack is an RPC buffer overflow.',\n        severity: 'high',\n      },\n      {\n        id: 'A',\n        title: 'Adjacent Network',\n        description:\n          'A vulnerability exploitable with adjacent network access requires the attacker to have access to either the broadcast or collision domain of the vulnerable software.  Examples of local networks include local IP subnet, Bluetooth, IEEE 802.11, and local Ethernet segment.',\n        severity: 'medium',\n      },\n      {\n        id: 'L',\n        title: 'Local',\n        description:\n          'A vulnerability exploitable with only local access requires the attacker to have local access to the target system (e.g., keyboard, console), or remotely (e.g., SSH); or rely on User Interaction by another person to perform actions to exploit the vulnerability (e.g., using social engineering techniques to trick a legitimate user into opening a malicious document).',\n        severity: 'low',\n      },\n      {\n        id: 'P',\n        title: 'Physical',\n        description:\n          'A vulnerability exploitable with Physical access requires the attacker to have physical access to the vulnerable system or a local (shell) account. Examples of locally exploitable vulnerabilities are peripheral attacks such as Firewire/USB DMA attacks.',\n        severity: '??',\n      },\n    ],\n  },\n\n  MAC: {\n    title: 'Modified Attack Complexity',\n    description:\n      'This metrics enables the override of base metrics based on specific characteristics of a user’s environment.',\n    values: [\n      {\n        id: 'X',\n        title: 'Not Defined',\n        description:\n          'Assigning this value indicates there is insufficient information to choose one of the other values, and has no impact on the overall Environmental Score.',\n        severity: 'high',\n      },\n      {\n        id: 'L',\n        title: 'Low',\n        description:\n          'Specialized access conditions or extenuating circumstances do not exist making this easy to exploit',\n        severity: 'high',\n      },\n      {\n        id: 'H',\n        title: 'High',\n        description:\n          'Specialized access conditions exist making this harder to exploit',\n        severity: 'low',\n      },\n    ],\n  },\n\n  MPR: {\n    title: 'Modified Privileges Required',\n    description:\n      'This metrics enables the override of base metrics based on specific characteristics of a user’s environment.',\n    values: [\n      {\n        id: 'X',\n        title: 'Not Defined',\n        description:\n          'Assigning this value indicates there is insufficient information to choose one of the other values, and has no impact on the overall Environmental Score.',\n        severity: 'high',\n      },\n      {\n        id: 'N',\n        title: 'None',\n        description: 'The attacker is unauthorized prior to attack.',\n        severity: 'high',\n      },\n      {\n        id: 'L',\n        title: 'Low',\n        description:\n          'An attacker with Low privileges has the ability to access only non-sensitive resources.',\n        severity: 'medium',\n      },\n      {\n        id: 'H',\n        title: 'High',\n        description:\n          'The attacker requires privileges that provide significant control(e.g., component-wide settings and files) over the vulnerable component.',\n        severity: 'low',\n      },\n    ],\n  },\n\n  MUI: {\n    title: 'Modified User Interaction',\n    description:\n      'This metrics enables the override of base metrics based on specific characteristics of a user’s environment.',\n    values: [\n      {\n        id: 'X',\n        title: 'Not Defined',\n        description:\n          'Assigning this value indicates there is insufficient information to choose one of the other values, and has no impact on the overall Environmental Score.',\n        severity: 'high',\n      },\n      {\n        id: 'N',\n        title: 'None',\n        description:\n          'The system can be exploited without interaction from any user.',\n        severity: 'high',\n      },\n      {\n        id: 'R',\n        title: 'Required',\n        description:\n          'The system can be exploited with user interaction(e.g., installation of an application).',\n        severity: 'medium',\n      },\n    ],\n  },\n\n  MS: {\n    title: 'Modified Scope',\n    description:\n      'This metrics enables the override of base metrics based on specific characteristics of a user’s environment.',\n    values: [\n      {\n        id: 'X',\n        title: 'Not Defined',\n        description:\n          'Assigning this value indicates there is insufficient information to choose one of the other values, and has no impact on the overall Environmental Score.',\n        severity: 'high',\n      },\n      {\n        id: 'U',\n        title: 'Unchanged',\n        description:\n          'An exploited vulnerability can only affect resources managed by the same security authority. The vulnerable component and the impacted component are either the same, or both are managed by the same security authority.',\n        severity: 'low',\n      },\n      {\n        id: 'C',\n        title: 'Changed',\n        description:\n          'An exploited vulnerability can affect resources beyond the security scope managed by the security authority of the vulnerable component. The vulnerable component and the impacted component are different and managed by different security authorities.',\n        severity: 'high',\n      },\n    ],\n  },\n\n  MC: {\n    title: 'Modified Confidentiality Impact',\n    description:\n      'This metrics enables the override of base metrics based on specific characteristics of a user’s environment.',\n    values: [\n      {\n        id: 'X',\n        title: 'Not Defined',\n        description:\n          'Assigning this value indicates there is insufficient information to choose one of the other values, and has no impact on the overall Environmental Score.',\n        severity: 'high',\n      },\n      {\n        id: 'H',\n        title: 'High',\n        description:\n          \"There is total information disclosure, resulting in all system files being revealed. The attacker is able to read all of the system's data (memory, files, etc.)\",\n        severity: 'high',\n      },\n      {\n        id: 'L',\n        title: 'Low',\n        description:\n          'There is considerable informational disclosure. Access to some system files is possible, but the attacker does not have control over what is obtained, or the scope of the loss is constrained. An example is a vulnerability that divulges only certain tables in a database.',\n        severity: 'medium',\n      },\n      {\n        id: 'N',\n        title: 'None',\n        description: 'There is no impact to the confidentiality of the system.',\n        severity: 'low',\n      },\n    ],\n  },\n\n  MI: {\n    title: 'Modified Integrity Impact',\n    description:\n      'This metrics enables the override of base metrics based on specific characteristics of a user’s environment.',\n    values: [\n      {\n        id: 'X',\n        title: 'Not Defined',\n        description:\n          'Assigning this value indicates there is insufficient information to choose one of the other values, and has no impact on the overall Environmental Score.',\n        severity: 'high',\n      },\n      {\n        id: 'H',\n        title: 'High',\n        description:\n          'There is a total compromise of system integrity. There is a complete loss of system protection, resulting in the entire system being compromised. The attacker is able to modify any files on the target system',\n        severity: 'high',\n      },\n      {\n        id: 'L',\n        title: 'Low',\n        description:\n          'Modification of some system files or information is possible, but the attacker does not have control over what can be modified, or the scope of what the attacker can affect is limited. For example, system or application files may be overwritten or modified, but either the attacker has no control over which files are affected or the attacker can modify files within only a limited context or scope.',\n        severity: 'medium',\n      },\n      {\n        id: 'N',\n        title: 'None',\n        description: 'There is no impact to the integrity of the system.',\n        severity: 'low',\n      },\n    ],\n  },\n\n  MA: {\n    title: 'Modified Availability Impact',\n    description:\n      'This metrics enables the override of base metrics based on specific characteristics of a user’s environment.',\n    values: [\n      {\n        id: 'X',\n        title: 'Not Defined',\n        description:\n          'Assigning this value indicates there is insufficient information to choose one of the other values, and has no impact on the overall Environmental Score.',\n        severity: 'high',\n      },\n      {\n        id: 'H',\n        title: 'High',\n        description:\n          'There is a total shutdown of the affected resource. The attacker can render the resource completely unavailable.',\n        severity: 'high',\n      },\n      {\n        id: 'L',\n        title: 'Low',\n        description:\n          'There is reduced performance or interruptions in resource availability. An example is a network-based flood attack that permits a limited number of successful connections to an Internet service.',\n        severity: 'medium',\n      },\n      {\n        id: 'N',\n        title: 'None',\n        description: 'There is no impact to the availability of the system.',\n        severity: 'low',\n      },\n    ],\n  },\n};\n\nexport interface SecurityDetailsMetadataProps {\n  vulnerability: VulnerabilityListItem;\n}\n","import {useState} from 'react';\nimport {Checkbox, Flex, FlexItem, SearchInput} from '@patternfly/react-core';\nimport {VulnerabilityListItem} from './Types';\n\nexport function SecurityReportFilter(props: SecurityReportFilterProps) {\n  const [isFixedOnlyChecked, setIsFixedOnlyChecked] = useState<boolean>(false);\n  const [searchTerm, setSearchTerm] = useState<string>('');\n\n  const filterVulnList = (searchTerm: string, fixedOnlyChecked: boolean) => {\n    return props.vulnList.filter((item: VulnerabilityListItem) => {\n      const searchStr = item.PackageName + item.Advisory;\n      return (\n        searchStr.toLowerCase().includes(searchTerm.toLowerCase()) &&\n        (!fixedOnlyChecked || item.FixedInVersion)\n      );\n    });\n  };\n\n  const onSearchTermChanged = (newSearchTerm: string) => {\n    props.setPage(1);\n    setSearchTerm(newSearchTerm);\n    props.setFilteredVulnList(\n      filterVulnList(newSearchTerm, isFixedOnlyChecked),\n    );\n  };\n\n  const onShowOnlyFixableChanged = (checked: boolean) => {\n    props.setPage(1);\n    setIsFixedOnlyChecked(checked);\n    props.setFilteredVulnList(filterVulnList(searchTerm, checked));\n  };\n\n  return (\n    <Flex className=\"pf-u-mt-md\">\n      <FlexItem>\n        <SearchInput\n          name=\"vulnerability-search\"\n          placeholder=\"Filter Vulnerabilities...\"\n          value={searchTerm}\n          onChange={onSearchTermChanged}\n          onClear={(evt) => onSearchTermChanged('')}\n        />\n      </FlexItem>\n      <FlexItem>\n        <Checkbox\n          label=\"Only show fixable\"\n          aria-label=\"fixable\"\n          id=\"fixable-checkbox\"\n          isChecked={isFixedOnlyChecked}\n          onChange={onShowOnlyFixableChanged}\n        />\n      </FlexItem>\n    </Flex>\n  );\n}\n\ninterface SecurityReportFilterProps {\n  setPage: (page: number) => void;\n  vulnList: VulnerabilityListItem[];\n  setFilteredVulnList: (vulnList: VulnerabilityListItem[]) => void;\n}\n","\n      import API from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js!./SecurityReportTable.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js!./SecurityReportTable.css\";\n       export default content && content.locals ? content.locals : undefined;\n","import {useEffect, useState} from 'react';\nimport {Vulnerability, Feature} from 'src/resources/TagResource';\nimport React from 'react';\nimport {\n  TableComposable,\n  Thead,\n  Tr,\n  Th,\n  Tbody,\n  Td,\n  ExpandableRowContent,\n  ThProps,\n} from '@patternfly/react-table';\nimport {SecurityReportMetadataTable} from './SecurityReportMetadataTable';\nimport {\n  PageSection,\n  PageSectionVariants,\n  Spinner,\n  Title,\n  Toolbar,\n  ToolbarContent,\n} from '@patternfly/react-core';\nimport {SecurityReportFilter} from './SecurityReportFilter';\nimport sha1 from 'js-sha1';\nimport {\n  ArrowRightIcon,\n  ExclamationTriangleIcon,\n  ExternalLinkAltIcon,\n} from '@patternfly/react-icons';\nimport {getSeverityColor} from 'src/libs/utils';\n\nimport './SecurityReportTable.css';\nimport {ToolbarPagination} from 'src/components/toolbar/ToolbarPagination';\nimport {VulnerabilityListItem} from './Types';\n\nconst columnNames = {\n  advisory: 'Advisory',\n  severity: 'Severity',\n  package: 'Package',\n  currentVersion: 'Current Version',\n  fixedInVersion: 'Fixed in Version',\n};\n\nconst VulnSeverityOrder = {\n  Critical: 0,\n  High: 1,\n  Medium: 2,\n  Low: 3,\n  Unknown: 4,\n};\n\nfunction getVulnerabilityLink(vulnerability: VulnerabilityListItem) {\n  if (!vulnerability.Link) {\n    return '';\n  }\n\n  // by default return the first link\n  return vulnerability.Link.split(' ')[0];\n}\n\nfunction TableTitle() {\n  return <Title headingLevel={'h1'}> Vulnerabilities </Title>;\n}\n\nexport default function SecurityReportTable({features}: SecurityDetailsProps) {\n  const [vulnList, setVulnList] = useState<VulnerabilityListItem[]>([]);\n  const [filteredVulnList, setFilteredVulnList] = useState<\n    VulnerabilityListItem[]\n  >([]);\n\n  // Sorting states\n  const [activeSortIndex, setActiveSortIndex] = React.useState<number | null>(\n    1,\n  );\n  const [activeSortDirection, setActiveSortDirection] = React.useState<\n    'asc' | 'desc' | null\n  >('desc');\n\n  // Pagination state\n  const [page, setPage] = useState<number>(1);\n  const [perPage, setPerPage] = useState<number>(10);\n\n  const paginatedVulns: VulnerabilityListItem[] = filteredVulnList.slice(\n    (page - 1) * perPage,\n    page * perPage,\n  );\n\n  function sortVulnerabilities(sortIndex, direction) {\n    setFilteredVulnList((prevVulnList) => {\n      return prevVulnList.sort((a, b) => {\n        const aValue = VulnSeverityOrder[getSortableRowValues(a)[sortIndex]];\n        const bValue = VulnSeverityOrder[getSortableRowValues(b)[sortIndex]];\n        if (direction === 'desc') {\n          return (aValue as number) - (bValue as number);\n        }\n        return (bValue as number) - (aValue as number);\n      });\n    });\n  }\n\n  const [expandedVulnKeys, setExpandedVulnKeys] = React.useState<string[]>([]);\n\n  const sortBySeverity = (columnIndex: number): ThProps['sort'] => ({\n    sortBy: {\n      index: activeSortIndex,\n      direction: activeSortDirection,\n    },\n    onSort: (_event, index, direction) => {\n      setActiveSortIndex(index);\n      setActiveSortDirection(direction);\n      sortVulnerabilities(index, direction);\n    },\n    columnIndex,\n  });\n\n  const getSortableRowValues = (\n    vulnerability: VulnerabilityListItem,\n  ): (string | number)[] => {\n    const {Advisory, Severity, PackageName, CurrentVersion, FixedInVersion} =\n      vulnerability;\n    return [Advisory, Severity, PackageName, CurrentVersion, FixedInVersion];\n  };\n\n  function TableHead() {\n    return (\n      <Thead>\n        <Tr>\n          <Th />\n          <Th>{columnNames.advisory}</Th>\n          <Th sort={sortBySeverity(1)} id=\"severity-sort\">\n            {columnNames.severity}\n          </Th>\n          <Th>{columnNames.package}</Th>\n          <Th>{columnNames.currentVersion}</Th>\n          <Th>{columnNames.fixedInVersion}</Th>\n        </Tr>\n      </Thead>\n    );\n  }\n\n  const generateUniqueKey = (vulnerability: VulnerabilityListItem) => {\n    let hashInput =\n      vulnerability.PackageName +\n      vulnerability.Advisory +\n      vulnerability.Description +\n      vulnerability.Severity;\n\n    if (vulnerability.Metadata) {\n      hashInput += vulnerability.Metadata.RepoName;\n    }\n\n    return sha1(hashInput);\n  };\n\n  const setRepoExpanded = (key: string, isExpanding = true) =>\n    setExpandedVulnKeys((prevExpanded) => {\n      const otherExpandedKeys = prevExpanded.filter((k) => k !== key);\n      return isExpanding ? [...otherExpandedKeys, key] : otherExpandedKeys;\n    });\n\n  const isRepoExpanded = (key: string) => expandedVulnKeys.includes(key);\n\n  useEffect(() => {\n    if (features) {\n      const vulnList: VulnerabilityListItem[] = [];\n      features.map((feature: Feature) => {\n        feature.Vulnerabilities.map((vulnerability: Vulnerability) => {\n          vulnList.push({\n            PackageName: feature.Name,\n            CurrentVersion: feature.Version,\n            Description: vulnerability.Description,\n            NamespaceName: vulnerability.NamespaceName,\n            Advisory: vulnerability.Name,\n            Severity: vulnerability.Severity,\n            FixedInVersion: vulnerability.FixedBy,\n            Metadata: vulnerability.Metadata,\n            Link: vulnerability.Link,\n          } as VulnerabilityListItem);\n        });\n      });\n      setVulnList(vulnList);\n      setFilteredVulnList(vulnList);\n      sortVulnerabilities(activeSortIndex, activeSortDirection);\n    } else {\n      setVulnList([]);\n      setFilteredVulnList([]);\n    }\n  }, [features]);\n\n  return (\n    <PageSection variant={PageSectionVariants.light}>\n      <TableTitle />\n      <Toolbar>\n        <ToolbarContent>\n          <SecurityReportFilter\n            setPage={setPage}\n            vulnList={vulnList}\n            setFilteredVulnList={setFilteredVulnList}\n          />\n          <ToolbarPagination\n            itemsList={filteredVulnList}\n            perPage={perPage}\n            page={page}\n            setPage={setPage}\n            setPerPage={setPerPage}\n          />\n        </ToolbarContent>\n      </Toolbar>\n      <TableComposable\n        data-testid=\"vulnerability-table\"\n        aria-label=\"Expandable table\"\n      >\n        <TableHead />\n        {paginatedVulns.length !== 0 ? (\n          paginatedVulns.map(\n            (vulnerability: VulnerabilityListItem, rowIndex) => {\n              const uniqueKey = generateUniqueKey(vulnerability);\n              return (\n                <Tbody key={uniqueKey} isExpanded={isRepoExpanded(uniqueKey)}>\n                  <Tr className=\"security-table-row\">\n                    <Td\n                      expand={{\n                        rowIndex,\n                        isExpanded: isRepoExpanded(uniqueKey),\n                        onToggle: () =>\n                          setRepoExpanded(\n                            uniqueKey,\n                            !isRepoExpanded(uniqueKey),\n                          ),\n                      }}\n                    />\n\n                    <Td dataLabel={columnNames.advisory}>\n                      <>\n                        {vulnerability.Advisory}\n                        {vulnerability.Link ? (\n                          <a\n                            href={getVulnerabilityLink(vulnerability)}\n                            target=\"_blank\"\n                            rel=\"noreferrer\"\n                          >\n                            <ExternalLinkAltIcon style={{marginLeft: '5px'}} />\n                          </a>\n                        ) : null}\n                      </>\n                    </Td>\n                    <Td dataLabel={columnNames.severity}>\n                      <ExclamationTriangleIcon\n                        color={getSeverityColor(vulnerability.Severity)}\n                        style={{\n                          marginRight: '5px',\n                        }}\n                      />\n                      <span>{vulnerability.Severity}</span>\n                    </Td>\n                    <Td dataLabel={columnNames.package}>\n                      {vulnerability.PackageName}\n                    </Td>\n                    <Td dataLabel={columnNames.currentVersion}>\n                      {vulnerability.CurrentVersion}\n                    </Td>\n                    <Td dataLabel={columnNames.fixedInVersion}>\n                      {vulnerability.FixedInVersion ? (\n                        <>\n                          <ArrowRightIcon\n                            color={'green'}\n                            style={{marginRight: '5px'}}\n                          />\n                          <span>{vulnerability.FixedInVersion}</span>\n                        </>\n                      ) : (\n                        '(None)'\n                      )}\n                    </Td>\n                  </Tr>\n\n                  <Tr isExpanded={isRepoExpanded(uniqueKey)}>\n                    <Td\n                      dataLabel=\"Security Metadata\"\n                      colSpan={5}\n                      cellPadding=\"span\"\n                    >\n                      <ExpandableRowContent>\n                        <SecurityReportMetadataTable\n                          vulnerability={vulnerability}\n                        />\n                      </ExpandableRowContent>\n                    </Td>\n                  </Tr>\n                </Tbody>\n              );\n            },\n          )\n        ) : (\n          <Tbody>\n            <Tr>\n              <Td>\n                {!features ? (\n                  <Spinner size=\"lg\" />\n                ) : (\n                  <div>No Vulnerabilities Found</div>\n                )}\n              </Td>\n            </Tr>\n          </Tbody>\n        )}\n      </TableComposable>\n      <Toolbar>\n        <ToolbarContent>\n          <ToolbarPagination\n            itemsList={filteredVulnList}\n            perPage={perPage}\n            page={page}\n            setPage={setPage}\n            setPerPage={setPerPage}\n          />\n        </ToolbarContent>\n      </Toolbar>\n    </PageSection>\n  );\n}\n\nexport interface SecurityDetailsProps {\n  features: Feature[];\n}\n","import {ChartDonut} from '@patternfly/react-charts';\nimport {\n  PageSection,\n  PageSectionVariants,\n  Skeleton,\n  Split,\n  SplitItem,\n  Title,\n  TitleSizes,\n} from '@patternfly/react-core';\nimport {ExclamationTriangleIcon} from '@patternfly/react-icons';\nimport {Feature, VulnerabilitySeverity} from 'src/resources/TagResource';\nimport {getSeverityColor} from 'src/libs/utils';\n\nfunction VulnerabilitySummary(props: VulnerabilityStatsProps) {\n  let message = <Skeleton width=\"400px\" />;\n  if (props.stats[VulnerabilitySeverity.None] > 0) {\n    message = <> Quay Security Reporting has detected no vulnerabilities </>;\n  } else if (props.total > 0) {\n    message = (\n      <> Quay Security Reporting has detected {props.total} vulnerabilities </>\n    );\n  }\n\n  let patchesMessage = <Skeleton width=\"300px\" />;\n  if (props.stats[VulnerabilitySeverity.None] > 0) {\n    patchesMessage = <> </>;\n  } else if (props.total > 0) {\n    patchesMessage = (\n      <> Patches are available for {props.patchesAvailable} vulnerabilities</>\n    );\n  }\n\n  return (\n    <div>\n      <div className=\"pf-u-mt-xl pf-u-ml-2xl\">\n        <Title\n          headingLevel=\"h1\"\n          size={TitleSizes['3xl']}\n          className=\"pf-u-mb-sm\"\n        >\n          {message}\n        </Title>\n        <Title headingLevel=\"h3\" className=\"pf-u-mb-lg\">\n          {patchesMessage}\n        </Title>\n        {Object.keys(props.stats).map((vulnLevel) => {\n          if (\n            props.stats[vulnLevel] > 0 &&\n            vulnLevel != VulnerabilitySeverity.None\n          ) {\n            return;\n            {\n              props.stats.Pending === 0 ? (\n                <div className=\"pf-u-mb-sm\" key={vulnLevel}>\n                  <ExclamationTriangleIcon\n                    color={getSeverityColor(vulnLevel as VulnerabilitySeverity)}\n                    className=\"pf-u-mr-md\"\n                  />\n                  <b>{props.stats[vulnLevel]}</b> {vulnLevel}-level\n                  vulnerabilities\n                </div>\n              ) : (\n                <div></div>\n              );\n            }\n          }\n        })}\n      </div>\n    </div>\n  );\n}\n\nfunction VulnerabilityChart(props: VulnerabilityStatsProps) {\n  return (\n    <div style={{height: '20em', width: '20em'}}>\n      {props.stats.Pending > 0 ? (\n        <Skeleton shape=\"circle\" width=\"100%\" />\n      ) : (\n        <ChartDonut\n          ariaDesc=\"vulnerability chart\"\n          ariaTitle=\"vulnerability chart\"\n          constrainToVisibleArea={true}\n          data={[\n            {x: VulnerabilitySeverity.Critical, y: props.stats.Critical},\n            {x: VulnerabilitySeverity.High, y: props.stats.High},\n            {x: VulnerabilitySeverity.Medium, y: props.stats.Medium},\n            {x: VulnerabilitySeverity.Low, y: props.stats.Low},\n            {x: VulnerabilitySeverity.Negligible, y: props.stats.Negligible},\n            {x: VulnerabilitySeverity.Unknown, y: props.stats.Unknown},\n            {x: VulnerabilitySeverity.None, y: props.stats.None},\n          ]}\n          colorScale={[\n            getSeverityColor(VulnerabilitySeverity.Critical),\n            getSeverityColor(VulnerabilitySeverity.High),\n            getSeverityColor(VulnerabilitySeverity.Medium),\n            getSeverityColor(VulnerabilitySeverity.Low),\n            getSeverityColor(VulnerabilitySeverity.Negligible),\n            getSeverityColor(VulnerabilitySeverity.Unknown),\n            getSeverityColor(VulnerabilitySeverity.None),\n          ]}\n          labels={({datum}) => `${datum.x}: ${datum.y}`}\n          title={`${props.total}`}\n        />\n      )}\n    </div>\n  );\n}\n\nexport function SecurityReportChart(props: SecurityDetailsChartProps) {\n  const stats: VulnerabilityStats = {\n    Critical: 0,\n    High: 0,\n    Medium: 0,\n    Low: 0,\n    Negligible: 0,\n    Unknown: 0,\n    None: 0,\n    Pending: 0,\n  };\n\n  let patchesAvailable = 0;\n  let total = 0;\n\n  // Count vulnerabilities if API call has completed\n  if (props.features) {\n    props.features.map((feature) => {\n      feature.Vulnerabilities.map((vulnerability) => {\n        stats[vulnerability.Severity] += 1;\n        total += 1;\n        if (vulnerability.FixedBy.length > 0) {\n          patchesAvailable += 1;\n        }\n      });\n    });\n\n    // No vulnerabilities\n    if (total == 0) {\n      stats[VulnerabilitySeverity.None] = 1;\n    }\n  } else {\n    // Waiting on API call to finish\n    stats.Pending = 1;\n  }\n\n  return (\n    <PageSection variant={PageSectionVariants.light}>\n      <Split>\n        <SplitItem data-testid=\"vulnerability-chart\">\n          <VulnerabilityChart\n            stats={stats}\n            total={total}\n            patchesAvailable={patchesAvailable}\n          />\n        </SplitItem>\n        <SplitItem>\n          <VulnerabilitySummary\n            stats={stats}\n            total={total}\n            patchesAvailable={patchesAvailable}\n          />\n        </SplitItem>\n      </Split>\n    </PageSection>\n  );\n}\n\nexport interface VulnerabilityStats {\n  Critical: number;\n  High: number;\n  Medium: number;\n  Low: number;\n  Negligible: number;\n  Unknown: number;\n  None: number;\n  Pending: number;\n}\n\ninterface VulnerabilityStatsProps {\n  stats: VulnerabilityStats;\n  total: number;\n  patchesAvailable: number;\n}\n\ninterface SecurityDetailsChartProps {\n  features: Feature[];\n}\n","import {\n  Button,\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  Title,\n} from '@patternfly/react-core';\nimport {\n  BanIcon,\n  ExclamationCircleIcon,\n  PauseCircleIcon,\n} from '@patternfly/react-icons';\n\nexport function QueuedState() {\n  return (\n    <EmptyState variant=\"full\">\n      <EmptyStateIcon icon={PauseCircleIcon} />\n      <Title headingLevel=\"h1\" size=\"lg\">\n        Security scan is currently queued.\n      </Title>\n      <EmptyStateBody>Refresh page for updates in scan status.</EmptyStateBody>\n      <Button title=\"Home\" onClick={() => window.location.reload()}>\n        Reload\n      </Button>\n    </EmptyState>\n  );\n}\n\nexport function FailedState() {\n  const RedExclamationIcon = () => (\n    <ExclamationCircleIcon size=\"lg\" color=\"red\" />\n  );\n  return (\n    <EmptyState variant=\"full\">\n      <EmptyStateIcon icon={RedExclamationIcon} />\n      <Title headingLevel=\"h1\" size=\"lg\">\n        Security scan has failed.\n      </Title>\n      <EmptyStateBody>\n        The scan could not be completed due to error.\n      </EmptyStateBody>\n    </EmptyState>\n  );\n}\n\nexport function UnsupportedState() {\n  return (\n    <EmptyState variant=\"full\">\n      <EmptyStateIcon icon={BanIcon} />\n      <Title headingLevel=\"h1\" size=\"lg\">\n        Security scan is not supported.\n      </Title>\n      <EmptyStateBody>\n        Image does not have content the scanner recognizes.\n      </EmptyStateBody>\n    </EmptyState>\n  );\n}\n","import SecurityReportTable from './SecurityReportTable';\nimport {SecurityReportChart} from './SecurityReportChart';\nimport {useRecoilValue} from 'recoil';\nimport {\n  SecurityDetailsErrorState,\n  SecurityDetailsState,\n} from 'src/atoms/SecurityDetailsState';\nimport {isErrorString} from 'src/resources/ErrorHandling';\nimport RequestError from 'src/components/errors/RequestError';\nimport {\n  QueuedState,\n  FailedState,\n  UnsupportedState,\n} from './SecurityReportScanStates';\n\nexport default function SecurityReport() {\n  const data = useRecoilValue(SecurityDetailsState);\n  const error = useRecoilValue(SecurityDetailsErrorState);\n\n  if (isErrorString(error)) {\n    return <RequestError message={error} />;\n  }\n\n  // Return correct messages for the different scan states\n  if (data && data.status === 'queued') {\n    return <QueuedState />;\n  } else if (data && data.status === 'failed') {\n    return <FailedState />;\n  } else if (data && data.status === 'unsupported') {\n    return <UnsupportedState />;\n  }\n\n  // Set features to a default of null to distinuish between a completed API call and one that is in progress\n  const features = data ? data.data.Layer.Features : null;\n  return (\n    <>\n      <SecurityReportChart features={features} />\n      <hr />\n      <SecurityReportTable features={features} />\n    </>\n  );\n}\n","import {ChartDonut} from '@patternfly/react-charts';\nimport {\n  PageSection,\n  PageSectionVariants,\n  Skeleton,\n  Split,\n  SplitItem,\n  Title,\n  TitleSizes,\n} from '@patternfly/react-core';\nimport {BundleIcon} from '@patternfly/react-icons';\nimport {Feature, VulnerabilitySeverity} from 'src/resources/TagResource';\nimport {getSeverityColor} from 'src/libs/utils';\nimport {VulnerabilityStats} from '../SecurityReport/SecurityReportChart';\n\nfunction PackageMessage(props: PackageMessageProps) {\n  if (props.vulnLevel === 'None') {\n    return <> Packages with no vulnerabilities</>;\n  }\n  return <> Packages with {props.vulnLevel}-level vulnerabilities</>;\n}\n\nfunction PackagesSummary(props: PackageStatsProps) {\n  let packagesMessage = <Skeleton width=\"400px\" />;\n  let availableMessage = <Skeleton width=\"300px\" />;\n\n  // Check if API call has completed and if packages are found\n  if (props.stats[VulnerabilitySeverity.None] > 0 && props.total === 0) {\n    packagesMessage = (\n      <> Quay Security Reporting does not recognize any packages </>\n    );\n    availableMessage = <> No known patches are available </>;\n  } else if (props.total > 0) {\n    packagesMessage = (\n      <> Quay Security Reporting has recognized {props.total} packages </>\n    );\n    availableMessage = (\n      <> Patches are available for {props.patchesAvailable} vulnerabilities </>\n    );\n  }\n\n  return (\n    <div>\n      <div className=\"pf-u-mt-xl pf-u-ml-2xl\">\n        <Title\n          headingLevel=\"h1\"\n          size={TitleSizes['3xl']}\n          className=\"pf-u-mb-sm\"\n        >\n          {packagesMessage}\n        </Title>\n        <Title headingLevel=\"h3\" className=\"pf-u-mb-lg\">\n          {availableMessage}\n        </Title>\n\n        {Object.keys(props.stats).map((vulnLevel) => {\n          if (props.stats[vulnLevel] > 0) {\n            return;\n            {\n              props.stats.Pending === 0 ? (\n                <div className=\"pf-u-mb-sm\" key={vulnLevel}>\n                  <BundleIcon\n                    color={getSeverityColor(vulnLevel as VulnerabilitySeverity)}\n                    className=\"pf-u-mr-md\"\n                  />\n                  <b>{props.stats[vulnLevel]}</b>\n                  <PackageMessage vulnLevel={vulnLevel} />\n                </div>\n              ) : (\n                <div></div>\n              );\n            }\n          }\n        })}\n      </div>\n    </div>\n  );\n}\n\nfunction PackagesDonutChart(props: PackageStatsProps) {\n  return (\n    <div style={{height: '20em', width: '20em'}}>\n      {props.stats.Pending > 0 ? (\n        <Skeleton shape=\"circle\" width=\"100%\" />\n      ) : (\n        <ChartDonut\n          ariaDesc=\"packages chart\"\n          ariaTitle=\"packages chart\"\n          constrainToVisibleArea={true}\n          data={[\n            {x: VulnerabilitySeverity.Critical, y: props.stats.Critical},\n            {x: VulnerabilitySeverity.High, y: props.stats.High},\n            {x: VulnerabilitySeverity.Medium, y: props.stats.Medium},\n            {x: VulnerabilitySeverity.Unknown, y: props.stats.Unknown},\n            {x: VulnerabilitySeverity.None, y: props.stats.None},\n          ]}\n          colorScale={[\n            getSeverityColor(VulnerabilitySeverity.Critical),\n            getSeverityColor(VulnerabilitySeverity.High),\n            getSeverityColor(VulnerabilitySeverity.Medium),\n            getSeverityColor(VulnerabilitySeverity.Unknown),\n            getSeverityColor(VulnerabilitySeverity.None),\n          ]}\n          labels={({datum}) => `${datum.x}: ${datum.y}`}\n          title={`${props.total}`}\n        />\n      )}\n    </div>\n  );\n}\n\nexport function PackagesChart(props: PackageChartProps) {\n  const stats = {\n    Critical: 0,\n    High: 0,\n    Medium: 0,\n    Low: 0,\n    Negligible: 0,\n    Unknown: 0,\n    None: 0,\n    Pending: 0,\n  };\n\n  let patchesAvailable = 0;\n  let totalPackages = 0;\n  let totalPackagesPerSeverity = 0;\n\n  if (props.features) {\n    if (props.features.length > 0) {\n      props.features.map((feature) => {\n        totalPackages += 1;\n        const perPackageVulnStats = {\n          Critical: 0,\n          High: 0,\n          Medium: 0,\n          Low: 0,\n          Negligible: 0,\n          Unknown: 0,\n        };\n\n        feature.Vulnerabilities.map((vulnerability) => {\n          perPackageVulnStats[vulnerability.Severity] = 1;\n          if (vulnerability.FixedBy.length > 0) {\n            patchesAvailable += 1;\n          }\n        });\n\n        // add perPackageStats to totals\n        Object.keys(perPackageVulnStats).map((severity) => {\n          stats[severity] += perPackageVulnStats[severity];\n          if (perPackageVulnStats[severity] > 0) {\n            totalPackagesPerSeverity += 1;\n          }\n        });\n\n        if (feature.Vulnerabilities.length == 0) {\n          stats[VulnerabilitySeverity.None] += 1;\n          totalPackagesPerSeverity += 1;\n        }\n      });\n    } else {\n      // No packages found\n      stats[VulnerabilitySeverity.None] += 1;\n    }\n  } else {\n    // Waiting on API call to finish\n    stats.Pending = 1;\n  }\n\n  return (\n    <PageSection variant={PageSectionVariants.light}>\n      <Split>\n        <SplitItem data-testid=\"packages-chart\">\n          <PackagesDonutChart\n            stats={stats}\n            total={totalPackagesPerSeverity}\n            patchesAvailable={patchesAvailable}\n          />\n        </SplitItem>\n        <SplitItem>\n          <PackagesSummary\n            stats={stats}\n            total={totalPackages}\n            patchesAvailable={patchesAvailable}\n          />\n        </SplitItem>\n      </Split>\n    </PageSection>\n  );\n}\n\ninterface PackageStatsProps {\n  stats: VulnerabilityStats;\n  total: number;\n  patchesAvailable: number;\n}\n\ninterface PackageChartProps {\n  features: Feature[];\n}\n\ninterface PackageMessageProps {\n  vulnLevel: string;\n}\n","import {useState} from 'react';\nimport {Flex, FlexItem, SearchInput} from '@patternfly/react-core';\nimport {PackagesListItem} from './Types';\n\nexport function PackagesFilter(props: PackagesFilterProps) {\n  const [searchTerm, setSearchTerm] = useState<string>('');\n\n  const filterPackagesList = (searchTerm: string) => {\n    return props.packagesList.filter((item: PackagesListItem) => {\n      const searchStr = item.PackageName + item.CurrentVersion;\n      return searchStr.toLowerCase().includes(searchTerm.toLowerCase());\n    });\n  };\n\n  const onSearchTermChanged = (newSearchTerm: string) => {\n    props.setPage(1);\n    setSearchTerm(newSearchTerm);\n    props.setFilteredPackageList(filterPackagesList(newSearchTerm));\n  };\n\n  return (\n    <Flex className=\"pf-u-mt-md\">\n      <FlexItem>\n        <SearchInput\n          placeholder=\"Filter Packages...\"\n          value={searchTerm}\n          onChange={onSearchTermChanged}\n          onClear={() => onSearchTermChanged('')}\n        />\n      </FlexItem>\n    </Flex>\n  );\n}\n\ninterface PackagesFilterProps {\n  setPage: (page: number) => void;\n  packagesList: PackagesListItem[];\n  setFilteredPackageList: (packageList: PackagesListItem[]) => void;\n}\n","import {useEffect, useState} from 'react';\nimport {\n  Vulnerability,\n  Feature,\n  VulnerabilitySeverity,\n  VulnerabilityOrder,\n} from 'src/resources/TagResource';\nimport {\n  TableComposable,\n  Thead,\n  Tr,\n  Th,\n  Tbody,\n  Td,\n} from '@patternfly/react-table';\nimport {\n  PageSection,\n  PageSectionVariants,\n  Spinner,\n  Title,\n  Toolbar,\n  ToolbarContent,\n} from '@patternfly/react-core';\nimport {PackagesFilter} from './PackagesFilter';\nimport {\n  CheckCircleIcon,\n  ExclamationTriangleIcon,\n} from '@patternfly/react-icons';\nimport {getSeverityColor} from 'src/libs/utils';\nimport {VulnerabilityStats} from '../SecurityReport/SecurityReportChart';\nimport {ToolbarPagination} from 'src/components/toolbar/ToolbarPagination';\nimport {PackagesListItem} from './Types';\n\nconst columnNames = {\n  PackageName: 'Package Name',\n  PackageVersion: 'Package Version',\n  Vulnerabilities: 'Vulnerabilities',\n  RemainingAfterUpgrade: 'Remaining After Upgrade',\n};\n\nfunction sortPackages(packagesList: PackagesListItem[]) {\n  return packagesList.sort((p1, p2) => {\n    if (p1.HighestVulnerabilitySeverity == p2.HighestVulnerabilitySeverity) {\n      return (\n        VulnerabilityOrder[p1.HighestVulnerabilitySeverityAfterFix] -\n        VulnerabilityOrder[p2.HighestVulnerabilitySeverityAfterFix]\n      );\n    }\n    return (\n      VulnerabilityOrder[p1.HighestVulnerabilitySeverity] -\n      VulnerabilityOrder[p2.HighestVulnerabilitySeverity]\n    );\n  });\n}\n\nfunction getVulnerabilitiesCount(\n  vulnerabilities: Vulnerability[],\n  after_fix = false,\n): VulnerabilityStats {\n  const counts: VulnerabilityStats = {\n    [VulnerabilitySeverity.Critical]: 0,\n    [VulnerabilitySeverity.High]: 0,\n    [VulnerabilitySeverity.Medium]: 0,\n    [VulnerabilitySeverity.Low]: 0,\n    [VulnerabilitySeverity.Negligible]: 0,\n    [VulnerabilitySeverity.Unknown]: 0,\n    [VulnerabilitySeverity.None]: 0,\n  };\n\n  for (let i = 0; i < vulnerabilities.length; i++) {\n    const currentVuln = vulnerabilities[i];\n    if (!after_fix || (after_fix && currentVuln.FixedBy == '')) {\n      counts[currentVuln.Severity] += 1;\n    }\n  }\n  return counts;\n}\n\nfunction getHighestVulnerabilitySeverity(\n  vulnerabilities: Vulnerability[],\n  after_fix = false,\n) {\n  let highestSeverity = VulnerabilitySeverity.Unknown;\n  for (let i = 0; i < vulnerabilities.length; i++) {\n    const currentVuln = vulnerabilities[i];\n    if (!after_fix || (after_fix && currentVuln.FixedBy == '')) {\n      if (\n        VulnerabilityOrder[currentVuln.Severity] <\n        VulnerabilityOrder[highestSeverity]\n      ) {\n        highestSeverity = currentVuln.Severity;\n      }\n    }\n  }\n\n  return highestSeverity;\n}\n\nfunction TableTitle() {\n  return <Title headingLevel={'h1'}> Packages </Title>;\n}\n\nfunction TableHead() {\n  return (\n    <Thead>\n      <Tr>\n        <Th>{columnNames.PackageName}</Th>\n        <Th>{columnNames.PackageVersion}</Th>\n        <Th>{columnNames.Vulnerabilities}</Th>\n        <Th>{columnNames.RemainingAfterUpgrade}</Th>\n      </Tr>\n    </Thead>\n  );\n}\n\nfunction VulnerabilitiesEntry(props: VulnerabilitiesEntryProps) {\n  if (!props.counts[props.highestSeverity]) {\n    return (\n      <>\n        <CheckCircleIcon color={getSeverityColor(VulnerabilitySeverity.None)} />\n        {' None detected'}\n      </>\n    );\n  }\n\n  let total = 0;\n  Object.values(props.counts).map((v) => (total += v));\n\n  const remaining = total - props.counts[props.highestSeverity];\n\n  return (\n    <>\n      <ExclamationTriangleIcon\n        color={getSeverityColor(props.highestSeverity)}\n      />\n      {` ${props.counts[props.highestSeverity]} ${props.highestSeverity}`}\n      {remaining > 0 ? ` + ${remaining} Additional` : ''}\n    </>\n  );\n}\n\nexport default function PackagesTable({features}: PackagesProps) {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const [packagesList, setPackagesList] = useState<PackagesListItem[]>([]);\n  const [filteredPackagesList, setFilteredPackagesList] = useState<\n    PackagesListItem[]\n  >([]);\n\n  // Pagination state\n  const [page, setPage] = useState<number>(1);\n  const [perPage, setPerPage] = useState<number>(10);\n  const paginatedPackagList: PackagesListItem[] = filteredPackagesList.slice(\n    (page - 1) * perPage,\n    page * perPage,\n  );\n\n  useEffect(() => {\n    if (features) {\n      const packagesList: PackagesListItem[] = [];\n      features.map((feature: Feature) => {\n        packagesList.push({\n          PackageName: feature.Name,\n          CurrentVersion: feature.Version,\n          Vulnerabilities: feature.Vulnerabilities,\n\n          VulnerabilityCounts: getVulnerabilitiesCount(feature.Vulnerabilities),\n          HighestVulnerabilitySeverity: getHighestVulnerabilitySeverity(\n            feature.Vulnerabilities,\n          ),\n\n          VulnerabilityCountsAfterFix: getVulnerabilitiesCount(\n            feature.Vulnerabilities,\n            true,\n          ),\n          HighestVulnerabilitySeverityAfterFix: getHighestVulnerabilitySeverity(\n            feature.Vulnerabilities,\n            true,\n          ),\n        } as PackagesListItem);\n      });\n\n      const sortedPackagesList = sortPackages(packagesList);\n      setPackagesList(sortedPackagesList);\n      setFilteredPackagesList(sortedPackagesList);\n    } else {\n      setPackagesList([]);\n      setFilteredPackagesList([]);\n    }\n  }, [features]);\n\n  return (\n    <PageSection variant={PageSectionVariants.light}>\n      <TableTitle />\n      <Toolbar>\n        <ToolbarContent>\n          <PackagesFilter\n            setPage={setPage}\n            packagesList={packagesList}\n            setFilteredPackageList={setFilteredPackagesList}\n          />\n          <ToolbarPagination\n            itemsList={filteredPackagesList}\n            perPage={perPage}\n            page={page}\n            setPage={setPage}\n            setPerPage={setPerPage}\n            id=\"packages-table-pagination\"\n          />\n        </ToolbarContent>\n      </Toolbar>\n      <TableComposable aria-label=\"packages table\" data-testid=\"packages-table\">\n        <TableHead />\n        {paginatedPackagList.length !== 0 ? (\n          paginatedPackagList.map((pkg: PackagesListItem) => {\n            return (\n              <Tbody key={pkg.PackageName + pkg.CurrentVersion}>\n                <Tr>\n                  <Td dataLabel={columnNames.PackageName}>\n                    <span>{pkg.PackageName} </span>\n                  </Td>\n                  <Td dataLabel={columnNames.PackageVersion}>\n                    <span>{pkg.CurrentVersion}</span>\n                  </Td>\n                  <Td dataLabel={columnNames.Vulnerabilities}>\n                    <VulnerabilitiesEntry\n                      counts={pkg.VulnerabilityCounts}\n                      highestSeverity={pkg.HighestVulnerabilitySeverity}\n                    />\n                  </Td>\n                  <Td dataLabel={columnNames.RemainingAfterUpgrade}>\n                    <VulnerabilitiesEntry\n                      counts={pkg.VulnerabilityCountsAfterFix}\n                      highestSeverity={pkg.HighestVulnerabilitySeverityAfterFix}\n                    />\n                  </Td>\n                </Tr>\n              </Tbody>\n            );\n          })\n        ) : (\n          <Tbody>\n            <Tr>\n              <Td>\n                {!features ? (\n                  <Spinner size=\"lg\" />\n                ) : (\n                  <div>No Packages Found</div>\n                )}\n              </Td>\n            </Tr>\n          </Tbody>\n        )}\n      </TableComposable>\n      <ToolbarPagination\n        itemsList={filteredPackagesList}\n        perPage={perPage}\n        page={page}\n        setPage={setPage}\n        setPerPage={setPerPage}\n      />\n    </PageSection>\n  );\n}\n\nexport interface PackagesProps {\n  features: Feature[];\n}\n\nexport interface VulnerabilitiesEntryProps {\n  counts: VulnerabilityStats;\n  highestSeverity: VulnerabilitySeverity;\n}\n\nexport interface RemainingAfterUpgradeProps {\n  counts: VulnerabilityStats;\n  highestSeverity: VulnerabilitySeverity;\n}\n","import {PackagesChart} from './PackagesChart';\nimport PackagesTable from './PackagesTable';\nimport {useRecoilState, useRecoilValue} from 'recoil';\nimport {\n  SecurityDetailsErrorState,\n  SecurityDetailsState,\n} from 'src/atoms/SecurityDetailsState';\nimport {isErrorString} from 'src/resources/ErrorHandling';\nimport RequestError from 'src/components/errors/RequestError';\nimport {\n  QueuedState,\n  FailedState,\n  UnsupportedState,\n} from 'src/routes/TagDetails/SecurityReport/SecurityReportScanStates';\n\nexport function Packages() {\n  const data = useRecoilValue(SecurityDetailsState);\n  const error = useRecoilValue(SecurityDetailsErrorState);\n\n  if (isErrorString(error)) {\n    return <RequestError message={error} />;\n  }\n\n  // Return correct messages for the different scan states\n  if (data && data.status === 'queued') {\n    return <QueuedState />;\n  } else if (data && data.status === 'failed') {\n    return <FailedState />;\n  } else if (data && data.status === 'unsupported') {\n    return <UnsupportedState />;\n  }\n\n  // Set features to a default of null to distinguish between a completed API call and one that is in progress\n  const features = data ? data.data.Layer.Features : null;\n  return (\n    <>\n      <PackagesChart features={features} />\n      <hr />\n      <PackagesTable features={features} />\n    </>\n  );\n}\n","import {Tabs, Tab, TabTitleText} from '@patternfly/react-core';\nimport {useSearchParams, useNavigate} from 'react-router-dom';\nimport {useState} from 'react';\nimport Details from './Details/Details';\nimport SecurityReport from './SecurityReport/SecurityReport';\nimport {Tag} from 'src/resources/TagResource';\nimport {TabIndex} from './Types';\nimport {Packages} from './Packages/Packages';\nimport ErrorBoundary from 'src/components/errors/ErrorBoundary';\nimport {isErrorString} from 'src/resources/ErrorHandling';\nimport RequestError from 'src/components/errors/RequestError';\n\n// Return the tab as an enum or null if it does not exist\nfunction getTabIndex(tab: string) {\n  if (Object.values(TabIndex).includes(tab as TabIndex)) {\n    return tab as TabIndex;\n  }\n}\n\nexport default function TagTabs(props: TagTabsProps) {\n  const [activeTabKey, setActiveTabKey] = useState<TabIndex>(TabIndex.Details);\n  const navigate = useNavigate();\n\n  // Navigate to the correct tab\n  const [searchParams] = useSearchParams();\n  const requestedTabIndex = getTabIndex(searchParams.get('tab'));\n  if (requestedTabIndex && requestedTabIndex !== activeTabKey) {\n    setActiveTabKey(requestedTabIndex);\n  }\n  return (\n    <Tabs\n      activeKey={activeTabKey}\n      onSelect={(e, tabIndex) => {\n        navigate(`${location.pathname}?tab=${tabIndex}`);\n      }}\n    >\n      <Tab\n        eventKey={TabIndex.Details}\n        title={<TabTitleText>Details</TabTitleText>}\n      >\n        <Details\n          org={props.org}\n          repo={props.repo}\n          tag={props.tag}\n          digest={props.digest}\n        />\n      </Tab>\n      <Tab\n        eventKey={TabIndex.SecurityReport}\n        title={<TabTitleText>Security Report</TabTitleText>}\n      >\n        <SecurityReport />\n      </Tab>\n      <Tab\n        eventKey={TabIndex.Packages}\n        title={<TabTitleText>Packages</TabTitleText>}\n      >\n        <Packages />\n      </Tab>\n    </Tabs>\n  );\n}\n\ntype TagTabsProps = {\n  tag: Tag;\n  org: string;\n  repo: string;\n  digest: string;\n  err: string;\n};\n","import {\n  Page,\n  PageSection,\n  PageSectionVariants,\n  Title,\n} from '@patternfly/react-core';\nimport {useSearchParams, useLocation} from 'react-router-dom';\nimport {useState, useEffect} from 'react';\nimport TagArchSelect from './TagDetailsArchSelect';\nimport TagTabs from './TagDetailsTabs';\nimport {\n  TagsResponse,\n  getTags,\n  getManifestByDigest,\n  Tag,\n  ManifestByDigestResponse,\n} from 'src/resources/TagResource';\nimport {addDisplayError, isErrorString} from 'src/resources/ErrorHandling';\nimport {QuayBreadcrumb} from 'src/components/breadcrumb/Breadcrumb';\nimport ErrorBoundary from 'src/components/errors/ErrorBoundary';\nimport RequestError from 'src/components/errors/RequestError';\nimport {useResetRecoilState} from 'recoil';\nimport {\n  SecurityDetailsErrorState,\n  SecurityDetailsState,\n} from 'src/atoms/SecurityDetailsState';\nimport {\n  parseOrgNameFromUrl,\n  parseRepoNameFromUrl,\n  parseTagNameFromUrl,\n} from '../../libs/utils';\n\nexport default function TagDetails() {\n  const [searchParams] = useSearchParams();\n  const [digest, setDigest] = useState<string>('');\n  const [err, setErr] = useState<string>();\n  const resetSecurityDetails = useResetRecoilState(SecurityDetailsState);\n  const resetSecurityError = useResetRecoilState(SecurityDetailsErrorState);\n  const [tagDetails, setTagDetails] = useState<Tag>({\n    name: '',\n    is_manifest_list: false,\n    last_modified: '',\n    manifest_digest: '',\n    reversion: false,\n    size: 0,\n    start_ts: 0,\n    manifest_list: {\n      schemaVersion: 0,\n      mediaType: '',\n      manifests: [],\n    },\n  });\n\n  // TODO: refactor, need more checks when parsing path\n  const location = useLocation();\n\n  const org = parseOrgNameFromUrl(location.pathname);\n  const repo = parseRepoNameFromUrl(location.pathname);\n  const tag = parseTagNameFromUrl(location.pathname);\n\n  useEffect(() => {\n    (async () => {\n      resetSecurityDetails();\n      resetSecurityError();\n      try {\n        const resp: TagsResponse = await getTags(org, repo, 1, 100, tag);\n\n        // These should never happen but checking for errors just in case\n        if (resp.tags.length === 0) {\n          throw new Error('Could not find tag');\n        }\n        if (resp.tags.length > 1) {\n          throw new Error(\n            'Unexpected response from API: more than one tag returned',\n          );\n        }\n\n        const tagResp: Tag = resp.tags[0];\n        if (tagResp.is_manifest_list) {\n          const manifestResp: ManifestByDigestResponse =\n            await getManifestByDigest(org, repo, tagResp.manifest_digest);\n          tagResp.manifest_list = JSON.parse(manifestResp.manifest_data);\n        }\n\n        // Confirm requested digest exists for this tag\n        const requestedDigest = searchParams.get('digest');\n        if (\n          requestedDigest &&\n          requestedDigest !== tagResp.manifest_digest &&\n          !tagResp.manifest_list?.manifests?.some(\n            (m) => m.digest === requestedDigest,\n          )\n        ) {\n          throw new Error(`Requested digest not found: ${requestedDigest}`);\n        }\n\n        let currentDigest =\n          tagResp.is_manifest_list &&\n          tagResp.manifest_list?.manifests?.length > 0\n            ? tagResp.manifest_list.manifests[0].digest\n            : tagResp.manifest_digest;\n        currentDigest = searchParams.get('digest')\n          ? searchParams.get('digest')\n          : currentDigest;\n        setDigest(currentDigest);\n        setTagDetails(tagResp);\n      } catch (error: any) {\n        console.error(error);\n        setErr(addDisplayError('Unable to get details for tag', error));\n      }\n    })();\n  }, []);\n\n  return (\n    <Page>\n      <QuayBreadcrumb />\n      <PageSection\n        variant={PageSectionVariants.light}\n        className=\"no-padding-bottom\"\n      >\n        <Title headingLevel=\"h1\">{tag}</Title>\n        <TagArchSelect\n          digest={digest}\n          options={tagDetails.manifest_list?.manifests}\n          setDigest={setDigest}\n          render={tagDetails.is_manifest_list}\n        />\n      </PageSection>\n      <PageSection\n        variant={PageSectionVariants.light}\n        className=\"no-padding-on-sides\"\n      >\n        <ErrorBoundary\n          hasError={isErrorString(err)}\n          fallback={<RequestError message={err} />}\n        >\n          <TagTabs\n            org={org}\n            repo={repo}\n            tag={tagDetails}\n            digest={digest}\n            err={err}\n          />\n        </ErrorBoundary>\n      </PageSection>\n    </Page>\n  );\n}\n","import OrganizationsList from 'src/routes/OrganizationsList/OrganizationsList';\nimport Organization from './OrganizationsList/Organization/Organization';\nimport RepositoryDetails from 'src/routes/RepositoryDetails/RepositoryDetails';\nimport RepositoriesList from './RepositoriesList/RepositoriesList';\nimport TagDetails from 'src/routes/TagDetails/TagDetails';\n\nconst organizationNameBreadcrumb = (match) => {\n  return <span>{match.params.organizationName}</span>;\n};\n\nconst repositoryNameBreadcrumb = (match) => {\n  return <span>{match.params.repositoryName}</span>;\n};\n\nconst tagNameBreadcrumb = (match) => {\n  return <span>{match.params.tagName}</span>;\n};\n\nconst Breadcrumb = {\n  organizationsListBreadcrumb: 'Organization',\n  repositoriesListBreadcrumb: 'Repository',\n  organizationDetailBreadcrumb: organizationNameBreadcrumb,\n  repositoryDetailBreadcrumb: repositoryNameBreadcrumb,\n  tagDetailBreadcrumb: tagNameBreadcrumb,\n};\n\nexport enum NavigationPath {\n  // Side Nav\n  home = '/',\n  organizationsList = '/organization',\n\n  repositoriesList = '/repository',\n\n  // Organization detail\n  organizationDetail = '/organization/:organizationName',\n\n  // Repository detail\n  repositoryDetail = '/repository/:organizationName/*',\n\n  // Tag Detail\n  tagDetail = '/repository/:organizationName/:repositoryName/tag/:tagName',\n}\n\nexport function getRepoDetailPath(\n  currentRoute: string,\n  org: string,\n  repo: string,\n) {\n  // return relative path to repository detail page from repo list table\n  let repoPath = NavigationPath.repositoryDetail.toString();\n  repoPath = repoPath.replace(':organizationName', org);\n  repoPath = repoPath.replace('*', repo);\n  return domainRoute(currentRoute, repoPath);\n}\n\nexport function getTagDetailPath(\n  currentRoute: string,\n  org: string,\n  repo: string,\n  tagName: string,\n  queryParams: Map<string, string> = null,\n) {\n  let tagPath = NavigationPath.tagDetail.toString();\n  tagPath = tagPath.replace(':organizationName', org);\n  tagPath = tagPath.replace(':repositoryName', repo);\n  tagPath = tagPath.replace(':tagName', tagName);\n\n  if (queryParams) {\n    const params = [];\n    for (const entry of Array.from(queryParams.entries())) {\n      params.push(entry[0] + '=' + entry[1]);\n    }\n    tagPath = tagPath + '?' + params.join('&');\n  }\n  return domainRoute(currentRoute, tagPath);\n}\n\nexport function getDomain() {\n  return process.env.REACT_APP_QUAY_DOMAIN || 'quay.io';\n}\n\nfunction domainRoute(currentRoute, definedRoute) {\n  /***\n   * This function returns prefix + route.\n   Eg:If quay is hosted on https://stage.foo.redhat.com:1337/settings/quay/organization,\n   window.location.pathname here is `/settings/quay/organization`,\n   the regex removes everything after organization and returns /settings/quay.\n   So, the function returns /settings/quay/<route> .\n   ***/\n  return (\n    currentRoute.replace(/\\/(organization|repository|signin)(?!.*\\1).*/, '') +\n    definedRoute\n  );\n}\n\nconst currentRoute = window.location.pathname;\n\nconst NavigationRoutes = [\n  {\n    path: domainRoute(currentRoute, NavigationPath.organizationsList),\n    Component: <OrganizationsList />,\n    breadcrumb: Breadcrumb.organizationsListBreadcrumb,\n  },\n  {\n    path: domainRoute(currentRoute, NavigationPath.organizationDetail),\n    Component: <Organization />,\n    breadcrumb: Breadcrumb.organizationDetailBreadcrumb,\n  },\n  {\n    path: domainRoute(currentRoute, NavigationPath.repositoriesList),\n    Component: <RepositoriesList />,\n    breadcrumb: Breadcrumb.repositoriesListBreadcrumb,\n  },\n  {\n    path: domainRoute(currentRoute, NavigationPath.repositoryDetail),\n    Component: <RepositoryDetails />,\n    breadcrumb: Breadcrumb.repositoryDetailBreadcrumb,\n  },\n  {\n    path: domainRoute(currentRoute, NavigationPath.tagDetail),\n    Component: <TagDetails />,\n    breadcrumb: Breadcrumb.tagDetailBreadcrumb,\n  },\n];\nexport {NavigationRoutes};\n","import React from 'react';\nimport {\n  Button,\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  Page,\n  PageSection,\n  Title,\n} from '@patternfly/react-core';\nimport {ExclamationTriangleIcon} from '@patternfly/react-icons';\n\nexport default function NotFound() {\n  return (\n    <Page>\n      <PageSection>\n        <EmptyState variant=\"full\">\n          <EmptyStateIcon icon={ExclamationTriangleIcon} />\n          <Title headingLevel=\"h1\" size=\"lg\">\n            404 Page not found\n          </Title>\n          <EmptyStateBody>\n            We didn&apos;t find a page that matches the address you navigated\n            to.\n          </EmptyStateBody>\n        </EmptyState>\n      </PageSection>\n    </Page>\n  );\n}\n","import {atom} from 'recoil';\n\nexport const QuayConfigState = atom({\n  key: 'quayConfigState',\n  default: null,\n});\n\nexport const IsPluginState = atom({\n  key: 'isPlugin',\n  default: false,\n});\n","import {\n  Modal,\n  ModalVariant,\n  Button,\n  Form,\n  FormGroup,\n  Popover,\n  TextInput,\n} from '@patternfly/react-core';\nimport ExclamationCircleIcon from '@patternfly/react-icons/dist/esm/icons/exclamation-circle-icon';\nimport {useState} from 'react';\nimport {IUserResource, updateUser} from 'src/resources/UserResource';\nimport {getUser, getOrganization} from 'src/resources/AuthResource';\n\ntype validate = 'success' | 'error' | 'default';\n\nexport function CreateNewUser(props: CreateNewUserProps) {\n  const [username, setUsername] = useState(props.user.username);\n  const [validatedUsername, setValidatedUsername] = useState<validate>('success');\n  const [helperText, setHelperText] = useState('');\n\n  const handleModalToggle = () => {\n    props.setModalOpen(!props.isModalOpen);\n  };\n\n  const handleUsernameChange = async (value: string) => {\n    setUsername(value);\n    if (!value) {\n      setValidatedUsername('error');\n      setHelperText('Username cannot be empty');\n      return;\n    }\n\n    if (value == props.user.username) {\n      setHelperText('');\n      setValidatedUsername('success');\n      return;\n    }\n\n    setHelperText('Validating...');\n    setValidatedUsername('default');\n\n    // Check username in Existing users\n    try {\n      const userResponse = await getUser(value);\n      if (userResponse.status == 200) {\n        setValidatedUsername('error');\n        setHelperText('Username already taken');\n        return;\n      }\n    } catch (e) {\n      if (e.response.status != 404) {\n        setValidatedUsername('error');\n        setHelperText('Error validating');\n      }\n    }\n\n    // Check username in logged-in User's orgs\n    try {\n      const orgResponse = await getOrganization(value);\n      if (orgResponse.status == 200) {\n        setValidatedUsername('error');\n        setHelperText('Username already taken');\n        return;\n      }\n    } catch (e) {\n      if (e.response.status != 404) {\n        setValidatedUsername('error');\n        setHelperText('Error validating');\n      }\n    }\n\n    setValidatedUsername('success');\n    setHelperText('');\n  };\n\n  function fetchDescription() {\n    return `The username ${props.user.username} was automatically generated to conform to the Docker CLI guidelines\n     for use as a namespace in Quay Container Registry.\n     Please confirm the selected username or enter a different username below:`\n  }\n\n  const updateUsername = async() => {\n    await updateUser(username);\n    handleModalToggle();\n    window.location.reload();\n  }\n\n  return (\n    <Modal\n      variant={ModalVariant.small}\n      title=\"Confirm Username\"\n      description={fetchDescription()}\n      isOpen={props.isModalOpen}\n      onClose={handleModalToggle}\n      actions={[\n        <Button\n          key=\"create\"\n          variant=\"primary\"\n          isDisabled={validatedUsername != 'success'}\n          onClick={() => updateUsername()}\n        >\n          Confirm Username\n        </Button>,\n        <Button key=\"cancel\" variant=\"link\" onClick={handleModalToggle}>\n          Cancel\n        </Button>,\n      ]}\n    >\n\n      <Form id=\"confirm-username-form\">\n        <FormGroup\n          isRequired\n          fieldId=\"confirm-username-form-group\"\n          helperText={helperText}\n          helperTextInvalid={helperText}\n          helperTextInvalidIcon={<ExclamationCircleIcon />}\n          validated={validatedUsername}\n        >\n          <TextInput\n            isRequired\n            type=\"text\"\n            id=\"confirm-username-input\"\n            name=\"confirm-username-input\"\n            value={username}\n            onChange={handleUsernameChange}\n            validated={validatedUsername}\n          />\n        </FormGroup>\n      </Form>\n    </Modal>\n  );\n}\n\ntype CreateNewUserProps = {\n  user: IUserResource;\n  isModalOpen: boolean;\n  setModalOpen: (boolean) => void;\n};\n","import {\n  Page,\n  PageSection,\n  PageSectionVariants,\n  EmptyState,\n  EmptyStateVariant,\n  EmptyStateIcon,\n  Title,\n  EmptyStateBody,\n  Button,\n} from '@patternfly/react-core';\nimport {UserIcon} from \"@patternfly/react-icons\";\n\nexport default function NewUserEmptyPage(props: NewUserEmptyPageProps) {\n  return (\n    <Page>\n      <PageSection variant={PageSectionVariants.light}>\n        <EmptyState variant={EmptyStateVariant.large}>\n          <EmptyStateIcon icon={UserIcon} color='black'/>\n          <Title headingLevel=\"h5\" size=\"4xl\">\n            Welcome to Quay\n          </Title>\n          <EmptyStateBody>\n            To gain access to organizations and repositories on Quay.io you must <br />\n            create a username.\n          </EmptyStateBody>\n          <Button variant=\"primary\" onClick={() => props.setCreateUserModalOpen(true)}>Create username</Button>\n        </EmptyState>\n      </PageSection>\n    </Page>\n  );\n}\n\ninterface NewUserEmptyPageProps {\n  setCreateUserModalOpen: (boolean) => void;\n}\n","import {Banner, Flex, FlexItem, Page} from '@patternfly/react-core';\n\nimport {Navigate, Outlet, Route, Router, Routes} from 'react-router-dom';\nimport {RecoilRoot, useSetRecoilState} from 'recoil';\nimport {QueryClient, QueryClientProvider} from '@tanstack/react-query';\n\nimport useChrome from '@redhat-cloud-services/frontend-components/useChrome';\n\nimport {NavigationPath} from './NavigationPath';\nimport OrganizationsList from './OrganizationsList/OrganizationsList';\nimport Organization from './OrganizationsList/Organization/Organization';\nimport RepositoryDetails from 'src/routes/RepositoryDetails/RepositoryDetails';\nimport RepositoriesList from './RepositoriesList/RepositoriesList';\nimport TagDetails from 'src/routes/TagDetails/TagDetails';\nimport {useEffect, useState, useMemo} from 'react';\nimport {useQuayConfig} from 'src/hooks/UseQuayConfig';\nimport NotFound from 'src/components/errors/404';\nimport {useCurrentUser} from 'src/hooks/UseCurrentUser';\nimport {InfoCircleIcon} from '@patternfly/react-icons';\nimport {GlobalAuthState} from '../resources/AuthResource';\nimport {IsPluginState} from '../atoms/QuayConfigState';\nimport {CreateNewUser} from 'src/components/modals/CreateNewUser';\nimport NewUserEmptyPage from 'src/components/NewUserEmptyPage';\nimport axios from 'axios';\nimport axiosIns from 'src/libs/axios';\n\n\nconst NavigationRoutes = [\n  {\n    path: NavigationPath.organizationsList,\n    Component: <OrganizationsList />,\n  },\n  {\n    path: NavigationPath.organizationDetail,\n    Component: <Organization />,\n  },\n  {\n    path: NavigationPath.repositoriesList,\n    Component: <RepositoriesList />,\n  },\n  {\n    path: NavigationPath.repositoryDetail,\n    Component: <RepositoryDetails />,\n  },\n  {\n    path: NavigationPath.tagDetail,\n    Component: <TagDetails />,\n  },\n];\n\nfunction PluginMain() {\n  const chrome = useChrome();\n  if (!chrome) {\n    return null;\n  }\n\n  if (chrome?.isProd()) {\n    axios.defaults.baseURL = 'https://quay.io';\n    axiosIns.defaults.baseURL = 'https://quay.io';\n  } else {\n    axios.defaults.baseURL = 'https://stage.quay.io';\n    axiosIns.defaults.baseURL = 'https://stage.quay.io';\n  }\n\n  const quayConfig = useQuayConfig();\n  const {user, loading, error} = useCurrentUser();\n\n  const setIsPluginState = useSetRecoilState(IsPluginState);\n  const [isConfirmUserModalOpen, setConfirmUserModalOpen] = useState(false);\n\n  chrome?.auth?.getToken().then((token) => {\n    GlobalAuthState.bearerToken = token;\n  });\n\n  useEffect(() => {\n    if (quayConfig?.config?.REGISTRY_TITLE) {\n      document.title = quayConfig.config.REGISTRY_TITLE;\n    }\n  }, [quayConfig]);\n\n  useEffect(() => {\n    setIsPluginState(true);\n    if (user?.prompts && user.prompts.includes(\"confirm_username\")) {\n      setConfirmUserModalOpen(true);\n    }\n  }, [user]);\n\n  if (loading) {\n    return null;\n  }\n\n  return (\n    <Page style={{height: '100vh'}}>\n    <CreateNewUser\n      user={user}\n      isModalOpen={isConfirmUserModalOpen}\n      setModalOpen={setConfirmUserModalOpen}\n      />\n      <Banner variant=\"info\">\n        <Flex\n          spaceItems={{default: 'spaceItemsSm'}}\n          justifyContent={{default: 'justifyContentCenter'}}\n        >\n          <FlexItem>\n            <InfoCircleIcon />\n          </FlexItem>\n          <FlexItem>\n            Please use{' '}\n            <a\n              href=\"https://forms.gle/M2CtyneF3iaMT5UVA\"\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              this form\n            </a>{' '}\n            to provide feedback on your experience\n          </FlexItem>\n        </Flex>\n      </Banner>\n      {user?.prompts && user.prompts.includes('confirm_username') ? (\n        <NewUserEmptyPage\n          setCreateUserModalOpen={setConfirmUserModalOpen}\n        />\n      ) : (\n        <Routes>\n          <Route index element={<Navigate to=\"organization\" replace />} />\n          {NavigationRoutes.map(({path, Component}, key) => (\n            <Route path={path} key={key} element={Component} />\n          ))}\n          <Route path=\"*\" element={<NotFound />} />\n        </Routes>\n      )}\n      <Outlet />\n    </Page>\n  );\n}\n\n// Wraps the plugin with necessary context providers\nexport default function PluginMainRoot() {\n  // initialize the client only on itial render\n  const queryClient = useMemo(() => {\n    return new QueryClient({\n      defaultOptions: {\n        queries: {\n          retry: false,\n          refetchOnWindowFocus: false,\n        },\n      },\n    });\n  }, []);\n\n  return (\n    <RecoilRoot>\n      <QueryClientProvider client={queryClient}>\n        <PluginMain />\n      </QueryClientProvider>\n    </RecoilRoot>\n  );\n}\n","import axios from 'axios';\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport MockAdapter from 'axios-mock-adapter';\n\nexport const mock = new MockAdapter(axios);\n","import {AxiosRequestConfig} from 'axios';\nimport {mock} from 'src/tests/fake-db/MockAxios';\n\nconst response = {\n  success: true,\n};\n\nconst csrfResponse = {\n  csrf_token: 'test-csrf-token',\n};\n\nmock.onPost('/api/v1/signin').reply((request: AxiosRequestConfig) => {\n  const {username, password} = JSON.parse(request.data);\n  return [200, response];\n});\n\nmock.onGet('/csrf_token').reply((request: AxiosRequestConfig) => {\n  return [200, csrfResponse];\n});\n","import {mock} from '../../MockAxios';\n\nconst response = {\n  robots: [\n    {\n      name: 'syed+podman',\n      created: 'Thu, 04 Nov 2021 16:14:13 -0000',\n      last_accessed: null,\n      teams: [],\n      repositories: ['quay'],\n      description: '',\n    },\n    {\n      name: 'syed+test',\n      created: 'Wed, 25 Aug 2021 18:47:41 -0000',\n      last_accessed: null,\n      teams: [],\n      repositories: [],\n      description: 'test',\n    },\n  ],\n};\n\nconst robotsPathRegex = new RegExp(\n  `/api/v1/user/robots\\\\?permissions=true&token=false`,\n);\nmock.onGet(robotsPathRegex).reply(() => {\n  return [200, response];\n});\n","import {AxiosRequestConfig} from 'axios';\nimport {mock} from 'src/tests/fake-db/MockAxios';\n\nconst response = {\n  anonymous: false,\n  username: 'user1',\n  avatar: {\n    name: 'user1',\n    hash: 'd27382531c5b7ec00bbec3865cea775',\n    color: '#17becf',\n    kind: 'user',\n  },\n  can_create_repo: true,\n  is_me: true,\n  verified: true,\n  email: 'user1@redhat.com',\n  logins: [\n    {\n      service: 'rhsso',\n      service_identifier:\n        'f:9f97392e-a27f-4e15-91ae-81da814b530f:user1@redhat.com',\n      metadata: {\n        service_username: 'user1',\n      },\n    },\n  ],\n  invoice_email: false,\n  invoice_email_address: null,\n  preferred_namespace: false,\n  tag_expiration_s: 1209600,\n  prompts: [],\n  super_user: false,\n  company: '',\n  family_name: null,\n  given_name: null,\n  location: null,\n  is_free_account: true,\n  has_password_set: true,\n  organizations: [\n    {\n      name: 'quay',\n      avatar: {\n        name: 'quay',\n        hash: '641eefcb35fec8d5622b495879a91653',\n        color: '#2ca02c',\n        kind: 'org',\n      },\n      can_create_repo: true,\n      public: false,\n      is_org_admin: true,\n      preferred_namespace: true,\n    },\n    {\n      name: 'projectquay',\n      avatar: {\n        name: 'projectquay',\n        hash: 'f203c4cdecd4445765750deafa7d589d',\n        color: '#17becf',\n        kind: 'org',\n      },\n      can_create_repo: true,\n      public: false,\n      is_org_admin: true,\n      preferred_namespace: false,\n    },\n    {\n      name: 'testorg',\n      avatar: {\n        name: 'testorg',\n        hash: '80d7b15766626006f56d6dbbcb831767',\n        color: '#969696',\n        kind: 'org',\n      },\n      can_create_repo: true,\n      public: false,\n      is_org_admin: true,\n      preferred_namespace: false,\n    },\n  ],\n};\n\nmock.onGet('/api/v1/user/').reply((request: AxiosRequestConfig) => {\n  return [200, response];\n});\n\nconst superUserUsersResponse = {\n  users: [\n    {\n      username: 'syed',\n    },\n    {\n      username: 'dconnor',\n    },\n    {\n      username: 'jonathankingfc',\n    },\n    {\n      username: 'bcaton',\n    },\n  ],\n};\n\nmock.onGet('/api/v1/superuser/users/').reply((request: AxiosRequestConfig) => {\n  return [200, superUserUsersResponse];\n});\n","import {mock} from '../../MockAxios';\n\nconst noSeverityFeatures = [\n  {\n    Name: 'trousers-lib',\n    VersionFormat: '',\n    NamespaceName: '',\n    AddedBy:\n      'sha256:76c3fc91354b01af7567241f118c944f5f4ca3ba2de10829d6cdd2066c760c34',\n    Version: '0.3.15-1.el8',\n    Vulnerabilities: [],\n  },\n  {\n    Name: 'centos-gpg-keys',\n    VersionFormat: '',\n    NamespaceName: '',\n    AddedBy:\n      'sha256:76c3fc91354b01af7567241f118c944f5f4ca3ba2de10829d6cdd2066c760c34',\n    Version: '1:8-3.el8',\n    Vulnerabilities: [],\n  },\n  {\n    Name: 'less',\n    VersionFormat: '',\n    NamespaceName: '',\n    AddedBy:\n      'sha256:a1d0c75327776413fa0db9ed3adcdbadedc95a662eb1d360dad82bb913f8a1d1',\n    Version: '530-1.el8',\n    Vulnerabilities: [],\n  },\n  {\n    Name: 'libselinux',\n    VersionFormat: '',\n    NamespaceName: '',\n    AddedBy:\n      'sha256:a1d0c75327776413fa0db9ed3adcdbadedc95a662eb1d360dad82bb913f8a1d1',\n    Version: '2.9-5.el8',\n    Vulnerabilities: [],\n  },\n  {\n    Name: 'libX11-xcb',\n    VersionFormat: '',\n    NamespaceName: '',\n    AddedBy:\n      'sha256:76c3fc91354b01af7567241f118c944f5f4ca3ba2de10829d6cdd2066c760c34',\n    Version: '1.6.8-4.el8',\n    Vulnerabilities: [],\n  },\n  {\n    Name: 'kbd-misc',\n    VersionFormat: '',\n    NamespaceName: '',\n    AddedBy:\n      'sha256:76c3fc91354b01af7567241f118c944f5f4ca3ba2de10829d6cdd2066c760c34',\n    Version: '2.0.4-10.el8',\n    Vulnerabilities: [],\n  },\n  {\n    Name: 'ncurses-libs',\n    VersionFormat: '',\n    NamespaceName: '',\n    AddedBy:\n      'sha256:a1d0c75327776413fa0db9ed3adcdbadedc95a662eb1d360dad82bb913f8a1d1',\n    Version: '6.1-7.20180224.el8',\n    Vulnerabilities: [],\n  },\n  {\n    Name: 'python3-dnf',\n    VersionFormat: '',\n    NamespaceName: '',\n    AddedBy:\n      'sha256:a1d0c75327776413fa0db9ed3adcdbadedc95a662eb1d360dad82bb913f8a1d1',\n    Version: '4.4.2-11.el8',\n    Vulnerabilities: [],\n  },\n  {\n    Name: 'chkconfig',\n    VersionFormat: '',\n    NamespaceName: '',\n    AddedBy:\n      'sha256:a1d0c75327776413fa0db9ed3adcdbadedc95a662eb1d360dad82bb913f8a1d1',\n    Version: '1.13-2.el8',\n    Vulnerabilities: [],\n  },\n  {\n    Name: 'lz4-libs',\n    VersionFormat: '',\n    NamespaceName: '',\n    AddedBy:\n      'sha256:76c3fc91354b01af7567241f118c944f5f4ca3ba2de10829d6cdd2066c760c34',\n    Version: '1.8.3-3.el8_4',\n    Vulnerabilities: [],\n  },\n  {\n    Name: 'dbus-common',\n    VersionFormat: '',\n    NamespaceName: '',\n    AddedBy:\n      'sha256:76c3fc91354b01af7567241f118c944f5f4ca3ba2de10829d6cdd2066c760c34',\n    Version: '1:1.12.8-12.el8_4.2',\n    Vulnerabilities: [],\n  },\n  {\n    Name: 'ima-evm-utils',\n    VersionFormat: '',\n    NamespaceName: '',\n    AddedBy:\n      'sha256:a1d0c75327776413fa0db9ed3adcdbadedc95a662eb1d360dad82bb913f8a1d1',\n    Version: '1.3.2-12.el8',\n    Vulnerabilities: [],\n  },\n  {\n    Name: 'qemu-kvm-block-rbd',\n    VersionFormat: '',\n    NamespaceName: '',\n    AddedBy:\n      'sha256:76c3fc91354b01af7567241f118c944f5f4ca3ba2de10829d6cdd2066c760c34',\n    Version: '15:4.2.0-48.module_el8.4.0+885+5e18b468.3',\n    Vulnerabilities: [],\n  },\n  {\n    Name: 'libnl3',\n    VersionFormat: '',\n    NamespaceName: '',\n    AddedBy:\n      'sha256:a1d0c75327776413fa0db9ed3adcdbadedc95a662eb1d360dad82bb913f8a1d1',\n    Version: '3.5.0-1.el8',\n    Vulnerabilities: [],\n  },\n  {\n    Name: 'iso-codes',\n    VersionFormat: '',\n    NamespaceName: '',\n    AddedBy:\n      'sha256:76c3fc91354b01af7567241f118c944f5f4ca3ba2de10829d6cdd2066c760c34',\n    Version: '3.79-2.el8',\n    Vulnerabilities: [],\n  },\n  {\n    Name: 'libffi',\n    VersionFormat: '',\n    NamespaceName: '',\n    AddedBy:\n      'sha256:a1d0c75327776413fa0db9ed3adcdbadedc95a662eb1d360dad82bb913f8a1d1',\n    Version: '3.1-22.el8',\n    Vulnerabilities: [],\n  },\n  {\n    Name: 'boost-date-time',\n    VersionFormat: '',\n    NamespaceName: '',\n    AddedBy:\n      'sha256:76c3fc91354b01af7567241f118c944f5f4ca3ba2de10829d6cdd2066c760c34',\n    Version: '1.66.0-10.el8',\n    Vulnerabilities: [],\n  },\n  {\n    Name: 'libwayland-cursor',\n    VersionFormat: '',\n    NamespaceName: '',\n    AddedBy:\n      'sha256:76c3fc91354b01af7567241f118c944f5f4ca3ba2de10829d6cdd2066c760c34',\n    Version: '1.17.0-1.el8',\n    Vulnerabilities: [],\n  },\n  {\n    Name: 'platform-python',\n    VersionFormat: '',\n    NamespaceName: '',\n    AddedBy:\n      'sha256:a1d0c75327776413fa0db9ed3adcdbadedc95a662eb1d360dad82bb913f8a1d1',\n    Version: '3.6.8-37.el8',\n    Vulnerabilities: [],\n  },\n  {\n    Name: 'libgcrypt',\n    VersionFormat: '',\n    NamespaceName: '',\n    AddedBy:\n      'sha256:a1d0c75327776413fa0db9ed3adcdbadedc95a662eb1d360dad82bb913f8a1d1',\n    Version: '1.8.5-4.el8',\n    Vulnerabilities: [],\n  },\n];\n\nconst criticalSeverityFeatures = [\n  {\n    Name: 'libbz2',\n    VersionFormat: '',\n    NamespaceName: '',\n    AddedBy:\n      'sha256:940580c848a703886ff3e6f8ce4f9e7e876c4362c174f3152a8255a6431f4ab9',\n    Version: '1.0.6-r6',\n    Vulnerabilities: [\n      {\n        Severity: 'Critical',\n        NamespaceName: 'alpine-main-v3.9-updater',\n        Link: 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-12900',\n        FixedBy: '1.0.6-r7',\n        Description: '',\n        Name: 'CVE-2019-12900',\n        Metadata: {\n          UpdatedBy: 'alpine-main-v3.9-updater',\n          RepoName: null,\n          RepoLink: null,\n          DistroName: 'Alpine Linux',\n          DistroVersion: '',\n          NVD: {\n            CVSSv3: {\n              Vectors: 'CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H',\n              Score: 9.8,\n            },\n          },\n        },\n      },\n    ],\n  },\n  {\n    Name: 'musl',\n    VersionFormat: '',\n    NamespaceName: '',\n    AddedBy:\n      'sha256:a4c1e43a7431a562d92c5eb6e09e96b4731a474af51cad1c46e2d305ede29005',\n    Version: '1.1.20-r3',\n    Vulnerabilities: [\n      {\n        Severity: 'Critical',\n        NamespaceName: 'alpine-main-v3.9-updater',\n        Link: 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-14697',\n        FixedBy: '1.1.20-r5',\n        Description: '',\n        Name: 'CVE-2019-14697',\n        Metadata: {\n          UpdatedBy: 'alpine-main-v3.9-updater',\n          RepoName: null,\n          RepoLink: null,\n          DistroName: 'Alpine Linux',\n          DistroVersion: '',\n          NVD: {\n            CVSSv3: {\n              Vectors: 'CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H',\n              Score: 9.8,\n            },\n          },\n        },\n      },\n    ],\n  },\n  {\n    Name: 'musl-utils',\n    VersionFormat: '',\n    NamespaceName: '',\n    AddedBy:\n      'sha256:a4c1e43a7431a562d92c5eb6e09e96b4731a474af51cad1c46e2d305ede29005',\n    Version: '1.1.20-r3',\n    Vulnerabilities: [\n      {\n        Severity: 'Critical',\n        NamespaceName: 'alpine-main-v3.9-updater',\n        Link: 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-14697',\n        FixedBy: '1.1.20-r5',\n        Description: '',\n        Name: 'CVE-2019-14697',\n        Metadata: {\n          UpdatedBy: 'alpine-main-v3.9-updater',\n          RepoName: null,\n          RepoLink: null,\n          DistroName: 'Alpine Linux',\n          DistroVersion: '',\n          NVD: {\n            CVSSv3: {\n              Vectors: 'CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H',\n              Score: 9.8,\n            },\n          },\n        },\n      },\n    ],\n  },\n];\n\nconst highSeverityFeatures = [\n  {\n    Name: 'gzip',\n    VersionFormat: '',\n    NamespaceName: '',\n    AddedBy:\n      'sha256:57fce60a81bf84e6b61ce2b64643c9e4c61da77869b95e0641360b42429c0cff',\n    Version: '1.9-12.el8',\n    Vulnerabilities: [\n      {\n        Severity: 'High',\n        NamespaceName: 'RHEL8-rhel-8.4-eus',\n        Link: 'https://access.redhat.com/errata/RHSA-2022:1676 https://access.redhat.com/security/cve/CVE-2022-1271',\n        FixedBy: '0:1.9-13.el8_4',\n        Description:\n          'The gzip packages contain the gzip (GNU zip) data compression utility. gzip is used to compress regular files. It replaces them with files containing the .gz extension, while retaining ownership modes, access, and modification times.\\n\\nSecurity Fix(es):\\n\\n* gzip: arbitrary-file-write vulnerability (CVE-2022-1271)\\n\\nFor more details about the security issue(s), including the impact, a CVSS score, acknowledgments, and other related information, refer to the CVE page(s) listed in the References section.',\n        Name: 'RHSA-2022:1676: gzip security update (Important)',\n        Metadata: {\n          UpdatedBy: 'RHEL8-rhel-8.4-eus',\n          RepoName: 'cpe:/a:redhat:rhel_eus:8.4::appstream',\n          RepoLink: null,\n          DistroName: 'Red Hat Enterprise Linux Server',\n          DistroVersion: '8',\n          NVD: {CVSSv3: {Vectors: '', Score: ''}},\n        },\n      },\n      {\n        Severity: 'High',\n        NamespaceName: 'RHEL8-rhel-8.4-eus',\n        Link: 'https://access.redhat.com/errata/RHSA-2022:1676 https://access.redhat.com/security/cve/CVE-2022-1271',\n        FixedBy: '0:1.9-13.el8_4',\n        Description:\n          'The gzip packages contain the gzip (GNU zip) data compression utility. gzip is used to compress regular files. It replaces them with files containing the .gz extension, while retaining ownership modes, access, and modification times.\\n\\nSecurity Fix(es):\\n\\n* gzip: arbitrary-file-write vulnerability (CVE-2022-1271)\\n\\nFor more details about the security issue(s), including the impact, a CVSS score, acknowledgments, and other related information, refer to the CVE page(s) listed in the References section.',\n        Name: 'RHSA-2022:1676: gzip security update (Important)',\n        Metadata: {\n          UpdatedBy: 'RHEL8-rhel-8.4-eus',\n          RepoName: 'cpe:/o:redhat:rhel_eus:8.4::baseos',\n          RepoLink: null,\n          DistroName: 'Red Hat Enterprise Linux Server',\n          DistroVersion: '8',\n          NVD: {CVSSv3: {Vectors: '', Score: ''}},\n        },\n      },\n    ],\n  },\n  {\n    Name: 'urllib3',\n    VersionFormat: '',\n    NamespaceName: '',\n    AddedBy:\n      'sha256:57fce60a81bf84e6b61ce2b64643c9e4c61da77869b95e0641360b42429c0cff',\n    Version: '1.24.2',\n    Vulnerabilities: [\n      {\n        Severity: 'High',\n        NamespaceName: 'pyupio',\n        Link: '',\n        FixedBy: '',\n        Description:\n          'urllib3 before 1.25.9 allows CRLF injection if the attacker controls the HTTP request method, as demonstrated by inserting CR and LF control characters in the first argument of putrequest(). See: CVE-2020-26137. NOTE: this is similar to CVE-2020-26116.',\n        Name: 'pyup.io-38834 (CVE-2020-26137)',\n        Metadata: {\n          UpdatedBy: 'pyupio',\n          RepoName: 'pypi',\n          RepoLink: 'https://pypi.org/simple',\n          DistroName: '',\n          DistroVersion: '',\n          NVD: {\n            CVSSv3: {\n              Vectors: 'CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:C/C:L/I:L/A:N',\n              Score: 7.2,\n            },\n          },\n        },\n      },\n      {\n        Severity: 'High',\n        NamespaceName: 'pyupio',\n        Link: '',\n        FixedBy: '',\n        Description:\n          'urllib3 before 1.25.9 allows CRLF injection if the attacker controls the HTTP request method, as demonstrated by inserting CR and LF control characters in the first argument of putrequest(). NOTE: this is similar to CVE-2020-26116.',\n        Name: 'pyup.io-38834 (CVE-2020-26137)',\n        Metadata: {\n          UpdatedBy: 'pyupio',\n          RepoName: 'pypi',\n          RepoLink: 'https://pypi.org/simple',\n          DistroName: '',\n          DistroVersion: '',\n          NVD: {\n            CVSSv3: {\n              Vectors: 'CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:C/C:L/I:L/A:N',\n              Score: 7.2,\n            },\n          },\n        },\n      },\n      {\n        Severity: 'High',\n        NamespaceName: 'pyupio',\n        Link: '',\n        FixedBy: '',\n        Description:\n          'Urllib3 1.25.9 includes a fix for CVE-2020-26137: Urllib3 before 1.25.9 allows CRLF injection if the attacker controls the HTTP request method, as demonstrated by inserting CR and LF control characters in the first argument of putrequest(). NOTE: this is similar to CVE-2020-26116.\\r\\nhttps://bugs.python.org/issue39603\\r\\nhttps://github.com/urllib3/urllib3/commit/1dd69c5c5982fae7c87a620d487c2ebf7a6b436b\\r\\nhttps://github.com/urllib3/urllib3/pull/1800',\n        Name: 'pyup.io-38834 (CVE-2020-26137)',\n        Metadata: {\n          UpdatedBy: 'pyupio',\n          RepoName: 'pypi',\n          RepoLink: 'https://pypi.org/simple',\n          DistroName: '',\n          DistroVersion: '',\n          NVD: {\n            CVSSv3: {\n              Vectors: 'CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:C/C:L/I:L/A:N',\n              Score: 7.2,\n            },\n          },\n        },\n      },\n      {\n        Severity: 'High',\n        NamespaceName: 'pyupio',\n        Link: '',\n        FixedBy: '',\n        Description:\n          'Urllib3 1.26.5 includes a fix for CVE-2021-33503: An issue was discovered in urllib3 before 1.26.5. When provided with a URL containing many @ characters in the authority component, the authority regular expression exhibits catastrophic backtracking, causing a denial of service if a URL were passed as a parameter or redirected to via an HTTP redirect.\\r\\nhttps://github.com/advisories/GHSA-q2q7-5pp4-w6pg',\n        Name: 'pyup.io-43975 (CVE-2021-33503)',\n        Metadata: {\n          UpdatedBy: 'pyupio',\n          RepoName: 'pypi',\n          RepoLink: 'https://pypi.org/simple',\n          DistroName: '',\n          DistroVersion: '',\n          NVD: {\n            CVSSv3: {\n              Vectors: 'CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H',\n              Score: 7.5,\n            },\n          },\n        },\n      },\n    ],\n  },\n  {\n    Name: 'rsync',\n    VersionFormat: '',\n    NamespaceName: '',\n    AddedBy:\n      'sha256:f606edb6a32a7c5bce00ab71be5f987ba16eb6bc68bd6c5cefe48bc8199552ca',\n    Version: '3.1.3-12.el8',\n    Vulnerabilities: [\n      {\n        Severity: 'High',\n        NamespaceName: 'RHEL8-rhel-8.4-eus',\n        Link: 'https://access.redhat.com/errata/RHSA-2022:2198 https://access.redhat.com/security/cve/CVE-2018-25032',\n        FixedBy: '0:3.1.3-12.el8_4.1',\n        Description:\n          'The rsync utility enables the users to copy and synchronize files locally or across a network. Synchronization with rsync is fast because rsync only sends the differences in files over the network instead of sending whole files. The rsync utility is also used as a mirroring tool.\\n\\nSecurity Fix(es):\\n\\n* zlib: A flaw found in zlib when compressing (not decompressing) certain inputs (CVE-2018-25032)\\n\\nFor more details about the security issue(s), including the impact, a CVSS score, acknowledgments, and other related information, refer to the CVE page(s) listed in the References section.',\n        Name: 'RHSA-2022:2198: rsync security update (Important)',\n        Metadata: {\n          UpdatedBy: 'RHEL8-rhel-8.4-eus',\n          RepoName: 'cpe:/a:redhat:rhel_eus:8.4::appstream',\n          RepoLink: null,\n          DistroName: 'Red Hat Enterprise Linux Server',\n          DistroVersion: '8',\n          NVD: {\n            CVSSv3: {\n              Vectors: 'CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H',\n              Score: 7.5,\n            },\n          },\n        },\n      },\n      {\n        Severity: 'High',\n        NamespaceName: 'RHEL8-rhel-8.4-eus',\n        Link: 'https://access.redhat.com/errata/RHSA-2022:2198 https://access.redhat.com/security/cve/CVE-2018-25032',\n        FixedBy: '0:3.1.3-12.el8_4.1',\n        Description:\n          'The rsync utility enables the users to copy and synchronize files locally or across a network. Synchronization with rsync is fast because rsync only sends the differences in files over the network instead of sending whole files. The rsync utility is also used as a mirroring tool.\\n\\nSecurity Fix(es):\\n\\n* zlib: A flaw found in zlib when compressing (not decompressing) certain inputs (CVE-2018-25032)\\n\\nFor more details about the security issue(s), including the impact, a CVSS score, acknowledgments, and other related information, refer to the CVE page(s) listed in the References section.',\n        Name: 'RHSA-2022:2198: rsync security update (Important)',\n        Metadata: {\n          UpdatedBy: 'RHEL8-rhel-8.4-eus',\n          RepoName: 'cpe:/o:redhat:rhel_eus:8.4::baseos',\n          RepoLink: null,\n          DistroName: 'Red Hat Enterprise Linux Server',\n          DistroVersion: '8',\n          NVD: {\n            CVSSv3: {\n              Vectors: 'CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H',\n              Score: 7.5,\n            },\n          },\n        },\n      },\n    ],\n  },\n  {\n    Name: 'zlib',\n    VersionFormat: '',\n    NamespaceName: '',\n    AddedBy:\n      'sha256:57fce60a81bf84e6b61ce2b64643c9e4c61da77869b95e0641360b42429c0cff',\n    Version: '1.2.11-17.el8',\n    Vulnerabilities: [\n      {\n        Severity: 'High',\n        NamespaceName: 'RHEL8-rhel-8.4-eus',\n        Link: 'https://access.redhat.com/errata/RHSA-2022:4845 https://access.redhat.com/security/cve/CVE-2018-25032',\n        FixedBy: '0:1.2.11-18.el8_4',\n        Description:\n          'The zlib packages provide a general-purpose lossless data compression library that is used by many different programs.\\n\\nSecurity Fix(es):\\n\\n* zlib: A flaw found in zlib when compressing (not decompressing) certain inputs (CVE-2018-25032)\\n\\nFor more details about the security issue(s), including the impact, a CVSS score, acknowledgments, and other related information, refer to the CVE page(s) listed in the References section.',\n        Name: 'RHSA-2022:4845: zlib security update (Important)',\n        Metadata: {\n          UpdatedBy: 'RHEL8-rhel-8.4-eus',\n          RepoName: 'cpe:/a:redhat:rhel_eus:8.4::appstream',\n          RepoLink: null,\n          DistroName: 'Red Hat Enterprise Linux Server',\n          DistroVersion: '8',\n          NVD: {\n            CVSSv3: {\n              Vectors: 'CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H',\n              Score: 7.5,\n            },\n          },\n        },\n      },\n      {\n        Severity: 'High',\n        NamespaceName: 'RHEL8-rhel-8.4-eus',\n        Link: 'https://access.redhat.com/errata/RHSA-2022:4845 https://access.redhat.com/security/cve/CVE-2018-25032',\n        FixedBy: '0:1.2.11-18.el8_4',\n        Description:\n          'The zlib packages provide a general-purpose lossless data compression library that is used by many different programs.\\n\\nSecurity Fix(es):\\n\\n* zlib: A flaw found in zlib when compressing (not decompressing) certain inputs (CVE-2018-25032)\\n\\nFor more details about the security issue(s), including the impact, a CVSS score, acknowledgments, and other related information, refer to the CVE page(s) listed in the References section.',\n        Name: 'RHSA-2022:4845: zlib security update (Important)',\n        Metadata: {\n          UpdatedBy: 'RHEL8-rhel-8.4-eus',\n          RepoName: 'cpe:/o:redhat:rhel_eus:8.4::baseos',\n          RepoLink: null,\n          DistroName: 'Red Hat Enterprise Linux Server',\n          DistroVersion: '8',\n          NVD: {\n            CVSSv3: {\n              Vectors: 'CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H',\n              Score: 7.5,\n            },\n          },\n        },\n      },\n    ],\n  },\n  {\n    Name: 'pip',\n    VersionFormat: '',\n    NamespaceName: '',\n    AddedBy:\n      'sha256:f606edb6a32a7c5bce00ab71be5f987ba16eb6bc68bd6c5cefe48bc8199552ca',\n    Version: '9.0.3',\n    Vulnerabilities: [\n      {\n        Severity: 'High',\n        NamespaceName: 'pyupio',\n        Link: '',\n        FixedBy: '',\n        Description:\n          'The pip package before 19.2 for Python allows Directory Traversal when a URL is given in an install command, because a Content-Disposition header can have ../ in a filename, as demonstrated by overwriting the /root/.ssh/authorized_keys file. This occurs in _download_http_url in _internal/download.py.',\n        Name: 'pyup.io-38765 (CVE-2019-20916)',\n        Metadata: {\n          UpdatedBy: 'pyupio',\n          RepoName: 'pypi',\n          RepoLink: 'https://pypi.org/simple',\n          DistroName: '',\n          DistroVersion: '',\n          NVD: {\n            CVSSv3: {\n              Vectors: 'CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N',\n              Score: 7.5,\n            },\n          },\n        },\n      },\n      {\n        Severity: 'High',\n        NamespaceName: 'pyupio',\n        Link: '',\n        FixedBy: '',\n        Description:\n          'Pip before 19.2 for Python allows Directory Traversal when a URL is given in an install command, because a Content-Disposition header can have ../ in a filename, as demonstrated by overwriting the /root/.ssh/authorized_keys file. This occurs in _download_http_url in _internal/download.py.',\n        Name: 'pyup.io-38765 (CVE-2019-20916)',\n        Metadata: {\n          UpdatedBy: 'pyupio',\n          RepoName: 'pypi',\n          RepoLink: 'https://pypi.org/simple',\n          DistroName: '',\n          DistroVersion: '',\n          NVD: {\n            CVSSv3: {\n              Vectors: 'CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N',\n              Score: 7.5,\n            },\n          },\n        },\n      },\n    ],\n  },\n];\n\nconst mediumSeverityFeatures = [\n  {\n    Name: 'expat',\n    VersionFormat: '',\n    NamespaceName: '',\n    AddedBy:\n      'sha256:9a8fb512735a1ed60cd080c4e4907c295a1f2027a07c16f01da093fdc1c22c85',\n    Version: '2.2.5-4.el8_4.2',\n    Vulnerabilities: [\n      {\n        Severity: 'Medium',\n        NamespaceName: 'RHEL8-rhel-8.4-eus',\n        Link: 'https://access.redhat.com/errata/RHSA-2022:4834 https://access.redhat.com/security/cve/CVE-2022-23852',\n        FixedBy: '0:2.2.5-4.el8_4.3',\n        Description:\n          'Expat is a C library for parsing XML documents.\\n\\nSecurity Fix(es):\\n\\n* expat: Integer overflow in function XML_GetBuffer (CVE-2022-23852)\\n\\nFor more details about the security issue(s), including the impact, a CVSS score, acknowledgments, and other related information, refer to the CVE page(s) listed in the References section.',\n        Name: 'RHSA-2022:4834: expat security update (Moderate)',\n        Metadata: {\n          UpdatedBy: 'RHEL8-rhel-8.4-eus',\n          RepoName: 'cpe:/a:redhat:rhel_eus:8.4::appstream',\n          RepoLink: null,\n          DistroName: 'Red Hat Enterprise Linux Server',\n          DistroVersion: '8',\n          NVD: {\n            CVSSv3: {\n              Vectors: 'CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H',\n              Score: 9.8,\n            },\n          },\n        },\n      },\n      {\n        Severity: 'Medium',\n        NamespaceName: 'RHEL8-rhel-8.4-eus',\n        Link: 'https://access.redhat.com/errata/RHSA-2022:4834 https://access.redhat.com/security/cve/CVE-2022-23852',\n        FixedBy: '0:2.2.5-4.el8_4.3',\n        Description:\n          'Expat is a C library for parsing XML documents.\\n\\nSecurity Fix(es):\\n\\n* expat: Integer overflow in function XML_GetBuffer (CVE-2022-23852)\\n\\nFor more details about the security issue(s), including the impact, a CVSS score, acknowledgments, and other related information, refer to the CVE page(s) listed in the References section.',\n        Name: 'RHSA-2022:4834: expat security update (Moderate)',\n        Metadata: {\n          UpdatedBy: 'RHEL8-rhel-8.4-eus',\n          RepoName: 'cpe:/o:redhat:rhel_eus:8.4::baseos',\n          RepoLink: null,\n          DistroName: 'Red Hat Enterprise Linux Server',\n          DistroVersion: '8',\n          NVD: {\n            CVSSv3: {\n              Vectors: 'CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H',\n              Score: 9.8,\n            },\n          },\n        },\n      },\n    ],\n  },\n  {\n    Name: 'libtiff',\n    VersionFormat: '',\n    NamespaceName: '',\n    AddedBy:\n      'sha256:b71f31ebaac9f435ee0f837b5c63b1c2a02eadd0ce52a4736d2ae927bb59835b',\n    Version: '4.0.9-20.el8',\n    Vulnerabilities: [\n      {\n        Severity: 'Medium',\n        NamespaceName: 'RHEL8-rhel-8-including-unpatched',\n        Link: 'https://access.redhat.com/errata/RHSA-2022:1810 https://access.redhat.com/security/cve/CVE-2020-19131',\n        FixedBy: '0:4.0.9-21.el8',\n        Description:\n          'The libtiff packages contain a library of functions for manipulating Tagged Image File Format (TIFF) files.\\n\\nSecurity Fix(es):\\n\\n* libtiff: a buffer overflow via the \"invertImage()\" may lead to DoS (CVE-2020-19131)\\n\\nFor more details about the security issue(s), including the impact, a CVSS score, acknowledgments, and other related information, refer to the CVE page(s) listed in the References section.\\n\\nAdditional Changes:\\n\\nFor detailed information on changes in this release, see the Red Hat Enterprise Linux 8.6 Release Notes linked from the References section.',\n        Name: 'RHSA-2022:1810: libtiff security update (Moderate)',\n        Metadata: {\n          UpdatedBy: 'RHEL8-rhel-8-including-unpatched',\n          RepoName: 'cpe:/o:redhat:enterprise_linux:8::baseos',\n          RepoLink: null,\n          DistroName: 'Red Hat Enterprise Linux Server',\n          DistroVersion: '8',\n          NVD: {\n            CVSSv3: {\n              Vectors: 'CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H',\n              Score: 7.5,\n            },\n          },\n        },\n      },\n    ],\n  },\n  {\n    Name: 'glibc',\n    VersionFormat: '',\n    NamespaceName: '',\n    AddedBy:\n      'sha256:8dfe9326f733b815c486432e93e0a97f03e90e7cc35def9511cd1efa7f917f56',\n    Version: '2.28-164.el8',\n    Vulnerabilities: [\n      {\n        Severity: 'Medium',\n        NamespaceName: 'RHEL8-rhel-8',\n        Link: 'https://access.redhat.com/errata/RHSA-2022:0896 https://access.redhat.com/security/cve/CVE-2021-3999 https://access.redhat.com/security/cve/CVE-2022-23218 https://access.redhat.com/security/cve/CVE-2022-23219',\n        FixedBy: '0:2.28-164.el8_5.3',\n        Description:\n          'The glibc packages provide the standard C libraries (libc), POSIX thread libraries (libpthread), standard math libraries (libm), and the name service cache daemon (nscd) used by multiple programs on the system. Without these libraries, the Linux system cannot function correctly.\\n\\nSecurity Fix(es):\\n\\n* glibc: Off-by-one buffer overflow/underflow in getcwd() (CVE-2021-3999)\\n\\n* glibc: Stack-based buffer overflow in svcunix_create via long pathnames (CVE-2022-23218)\\n\\n* glibc: Stack-based buffer overflow in sunrpc clnt_create via a long pathname (CVE-2022-23219)\\n\\nFor more details about the security issue(s), including the impact, a CVSS score, acknowledgments, and other related information, refer to the CVE page(s) listed in the References section.',\n        Name: 'RHSA-2022:0896: glibc security update (Moderate)',\n        Metadata: {\n          UpdatedBy: 'RHEL8-rhel-8',\n          RepoName: 'cpe:/o:redhat:enterprise_linux:8::baseos',\n          RepoLink: null,\n          DistroName: 'Red Hat Enterprise Linux Server',\n          DistroVersion: '8',\n          NVD: {\n            CVSSv3: {\n              Vectors: 'CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H',\n              Score: 9.8,\n            },\n          },\n        },\n      },\n    ],\n  },\n  {\n    Name: 'cryptography',\n    VersionFormat: '',\n    NamespaceName: '',\n    AddedBy:\n      'sha256:6c5d27ae7a2aa08ebc449d61ed339dfcb3324450ceaded23eec1fbc8d3f10499',\n    Version: '3.3.2',\n    Vulnerabilities: [\n      {\n        Severity: 'Medium',\n        NamespaceName: 'pyupio',\n        Link: '',\n        FixedBy: '',\n        Description:\n          'Cryptography 39.0.0 drops support for C library \"LibreSSL\" < 3.4, as these versions are not receiving security support anymore.',\n        Name: 'pyup.io-51159 (CVE-2021-41581)',\n        Metadata: {\n          UpdatedBy: 'pyupio',\n          RepoName: 'pypi',\n          RepoLink: 'https://pypi.org/simple',\n          DistroName: '',\n          DistroVersion: '',\n          NVD: {\n            CVSSv3: {\n              Vectors: 'CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H',\n              Score: 5.5,\n            },\n          },\n        },\n      },\n    ],\n  },\n  {\n    Name: 'platform-python',\n    VersionFormat: '',\n    NamespaceName: '',\n    AddedBy:\n      'sha256:8dfe9326f733b815c486432e93e0a97f03e90e7cc35def9511cd1efa7f917f56',\n    Version: '3.6.8-41.el8',\n    Vulnerabilities: [\n      {\n        Severity: 'Medium',\n        NamespaceName: 'RHEL8-rhel-8-including-unpatched',\n        Link: 'https://access.redhat.com/errata/RHSA-2022:1986 https://access.redhat.com/security/cve/CVE-2021-3737 https://access.redhat.com/security/cve/CVE-2021-4189',\n        FixedBy: '0:3.6.8-45.el8',\n        Description:\n          'Python is an interpreted, interactive, object-oriented programming language, which includes modules, classes, exceptions, very high level dynamic data types and dynamic typing. Python supports interfaces to many system calls and libraries, as well as to various windowing systems. \\n\\nSecurity Fix(es):\\n\\n* python: ftplib should not use the host from the PASV response (CVE-2021-4189)\\n\\n* python: urllib: HTTP client possible infinite loop on a 100 Continue response (CVE-2021-3737)\\n\\nFor more details about the security issue(s), including the impact, a CVSS score, acknowledgments, and other related information, refer to the CVE page(s) listed in the References section.\\n\\nAdditional Changes:\\n\\nFor detailed information on changes in this release, see the Red Hat Enterprise Linux 8.6 Release Notes linked from the References section.',\n        Name: 'RHSA-2022:1986: python3 security update (Moderate)',\n        Metadata: {\n          UpdatedBy: 'RHEL8-rhel-8-including-unpatched',\n          RepoName: 'cpe:/o:redhat:enterprise_linux:8::baseos',\n          RepoLink: null,\n          DistroName: 'Red Hat Enterprise Linux Server',\n          DistroVersion: '8',\n          NVD: {\n            CVSSv3: {\n              Vectors: 'CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H',\n              Score: 7.5,\n            },\n          },\n        },\n      },\n      {\n        Severity: 'Medium',\n        NamespaceName: 'RHEL8-rhel-8-including-unpatched',\n        Link: 'https://access.redhat.com/errata/RHSA-2022:6457 https://access.redhat.com/security/cve/CVE-2015-20107 https://access.redhat.com/security/cve/CVE-2022-0391',\n        FixedBy: '0:3.6.8-47.el8_6',\n        Description:\n          'Python is an interpreted, interactive, object-oriented programming language, which includes modules, classes, exceptions, very high level dynamic data types and dynamic typing. Python supports interfaces to many system calls and libraries, as well as to various windowing systems. \\n\\nSecurity Fix(es):\\n\\n* python(mailcap): findmatch() function does not sanitise the second argument (CVE-2015-20107)\\n\\n* python: urllib.parse does not sanitize URLs containing ASCII newline and tabs (CVE-2022-0391)\\n\\nFor more details about the security issue(s), including the impact, a CVSS score, acknowledgments, and other related information, refer to the CVE page(s) listed in the References section.',\n        Name: 'RHSA-2022:6457: python3 security update (Moderate)',\n        Metadata: {\n          UpdatedBy: 'RHEL8-rhel-8-including-unpatched',\n          RepoName: 'cpe:/o:redhat:enterprise_linux:8::baseos',\n          RepoLink: null,\n          DistroName: 'Red Hat Enterprise Linux Server',\n          DistroVersion: '8',\n          NVD: {\n            CVSSv3: {\n              Vectors: 'CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H',\n              Score: 9.8,\n            },\n          },\n        },\n      },\n    ],\n  },\n  {\n    Name: 'pypdf2',\n    VersionFormat: '',\n    NamespaceName: '',\n    AddedBy:\n      'sha256:6c5d27ae7a2aa08ebc449d61ed339dfcb3324450ceaded23eec1fbc8d3f10499',\n    Version: '1.26.0',\n    Vulnerabilities: [\n      {\n        Severity: 'Medium',\n        NamespaceName: 'pyupio',\n        Link: '',\n        FixedBy: '',\n        Description:\n          \"PyPDF2 1.27.5 includes a fix for CVE-2022-24859: In versions prior to 1.27.5 an attacker can craft a PDF which leads to an infinite loop if PyPDF2 code attempts to get the content stream. The reason is that the last while-loop in 'ContentStream._readInlineImage' only terminates when it finds the 'EI' token, but never actually checks if the stream has already ended. Users unable to upgrade should validate PDFs prior to iterating over their content stream.\\r\\nhttps://github.com/py-pdf/PyPDF2/security/advisories/GHSA-xcjx-m2pj-8g79\",\n        Name: 'pyup.io-48186 (CVE-2022-24859)',\n        Metadata: {\n          UpdatedBy: 'pyupio',\n          RepoName: 'pypi',\n          RepoLink: 'https://pypi.org/simple',\n          DistroName: '',\n          DistroVersion: '',\n          NVD: {\n            CVSSv3: {\n              Vectors: 'CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H',\n              Score: 5.5,\n            },\n          },\n        },\n      },\n    ],\n  },\n  {\n    Name: 'python-keystoneclient',\n    VersionFormat: '',\n    NamespaceName: '',\n    AddedBy:\n      'sha256:6c5d27ae7a2aa08ebc449d61ed339dfcb3324450ceaded23eec1fbc8d3f10499',\n    Version: '3.22.0',\n    Vulnerabilities: [\n      {\n        Severity: 'Medium',\n        NamespaceName: 'pyupio',\n        Link: '',\n        FixedBy: '',\n        Description:\n          'A flaw was found in Keystone. There is a time lag (up to one hour in a default configuration) between when security policy says a token should be revoked from when it is actually revoked. This could allow a remote administrator to secretly maintain access for longer than expected.',\n        Name: 'pyup.io-50880 (CVE-2022-2447)',\n        Metadata: {\n          UpdatedBy: 'pyupio',\n          RepoName: 'pypi',\n          RepoLink: 'https://pypi.org/simple',\n          DistroName: '',\n          DistroVersion: '',\n          NVD: {\n            CVSSv3: {\n              Vectors: 'CVSS:3.1/AV:N/AC:H/PR:H/UI:N/S:U/C:H/I:H/A:H',\n              Score: 6.6,\n            },\n          },\n        },\n      },\n    ],\n  },\n  {\n    Name: 'pcre2',\n    VersionFormat: '',\n    NamespaceName: '',\n    AddedBy:\n      'sha256:8dfe9326f733b815c486432e93e0a97f03e90e7cc35def9511cd1efa7f917f56',\n    Version: '10.32-2.el8',\n    Vulnerabilities: [\n      {\n        Severity: 'Medium',\n        NamespaceName: 'RHEL8-rhel-8',\n        Link: 'https://access.redhat.com/errata/RHSA-2022:5809 https://access.redhat.com/security/cve/CVE-2022-1586',\n        FixedBy: '0:10.32-3.el8_6',\n        Description:\n          'The pcre2 package contains a new generation of the Perl Compatible Regular Expression libraries for implementing regular expression pattern matching using the same syntax and semantics as Perl. \\n\\nSecurity Fix(es):\\n\\n* pcre2: Out-of-bounds read in compile_xclass_matchingpath in pcre2_jit_compile.c (CVE-2022-1586)\\n\\nFor more details about the security issue(s), including the impact, a CVSS score, acknowledgments, and other related information, refer to the CVE page(s) listed in the References section.',\n        Name: 'RHSA-2022:5809: pcre2 security update (Moderate)',\n        Metadata: {\n          UpdatedBy: 'RHEL8-rhel-8',\n          RepoName: 'cpe:/o:redhat:enterprise_linux:8::baseos',\n          RepoLink: null,\n          DistroName: 'Red Hat Enterprise Linux Server',\n          DistroVersion: '8',\n          NVD: {\n            CVSSv3: {\n              Vectors: 'CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:H',\n              Score: 9.1,\n            },\n          },\n        },\n      },\n    ],\n  },\n  {\n    Name: 'python3-libs',\n    VersionFormat: '',\n    NamespaceName: '',\n    AddedBy:\n      'sha256:8dfe9326f733b815c486432e93e0a97f03e90e7cc35def9511cd1efa7f917f56',\n    Version: '3.6.8-41.el8',\n    Vulnerabilities: [\n      {\n        Severity: 'Medium',\n        NamespaceName: 'RHEL8-rhel-8-including-unpatched',\n        Link: 'https://access.redhat.com/errata/RHSA-2022:1986 https://access.redhat.com/security/cve/CVE-2021-3737 https://access.redhat.com/security/cve/CVE-2021-4189',\n        FixedBy: '0:3.6.8-45.el8',\n        Description:\n          'Python is an interpreted, interactive, object-oriented programming language, which includes modules, classes, exceptions, very high level dynamic data types and dynamic typing. Python supports interfaces to many system calls and libraries, as well as to various windowing systems. \\n\\nSecurity Fix(es):\\n\\n* python: ftplib should not use the host from the PASV response (CVE-2021-4189)\\n\\n* python: urllib: HTTP client possible infinite loop on a 100 Continue response (CVE-2021-3737)\\n\\nFor more details about the security issue(s), including the impact, a CVSS score, acknowledgments, and other related information, refer to the CVE page(s) listed in the References section.\\n\\nAdditional Changes:\\n\\nFor detailed information on changes in this release, see the Red Hat Enterprise Linux 8.6 Release Notes linked from the References section.',\n        Name: 'RHSA-2022:1986: python3 security update (Moderate)',\n        Metadata: {\n          UpdatedBy: 'RHEL8-rhel-8-including-unpatched',\n          RepoName: 'cpe:/o:redhat:enterprise_linux:8::baseos',\n          RepoLink: null,\n          DistroName: 'Red Hat Enterprise Linux Server',\n          DistroVersion: '8',\n          NVD: {\n            CVSSv3: {\n              Vectors: 'CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H',\n              Score: 7.5,\n            },\n          },\n        },\n      },\n      {\n        Severity: 'Medium',\n        NamespaceName: 'RHEL8-rhel-8-including-unpatched',\n        Link: 'https://access.redhat.com/errata/RHSA-2022:6457 https://access.redhat.com/security/cve/CVE-2015-20107 https://access.redhat.com/security/cve/CVE-2022-0391',\n        FixedBy: '0:3.6.8-47.el8_6',\n        Description:\n          'Python is an interpreted, interactive, object-oriented programming language, which includes modules, classes, exceptions, very high level dynamic data types and dynamic typing. Python supports interfaces to many system calls and libraries, as well as to various windowing systems. \\n\\nSecurity Fix(es):\\n\\n* python(mailcap): findmatch() function does not sanitise the second argument (CVE-2015-20107)\\n\\n* python: urllib.parse does not sanitize URLs containing ASCII newline and tabs (CVE-2022-0391)\\n\\nFor more details about the security issue(s), including the impact, a CVSS score, acknowledgments, and other related information, refer to the CVE page(s) listed in the References section.',\n        Name: 'RHSA-2022:6457: python3 security update (Moderate)',\n        Metadata: {\n          UpdatedBy: 'RHEL8-rhel-8-including-unpatched',\n          RepoName: 'cpe:/o:redhat:enterprise_linux:8::baseos',\n          RepoLink: null,\n          DistroName: 'Red Hat Enterprise Linux Server',\n          DistroVersion: '8',\n          NVD: {\n            CVSSv3: {\n              Vectors: 'CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H',\n              Score: 9.8,\n            },\n          },\n        },\n      },\n    ],\n  },\n  {\n    Name: 'python38-pip',\n    VersionFormat: '',\n    NamespaceName: '',\n    AddedBy:\n      'sha256:b71f31ebaac9f435ee0f837b5c63b1c2a02eadd0ce52a4736d2ae927bb59835b',\n    Version: '19.3.1-4.module+el8.5.0+12205+a865257a',\n    Vulnerabilities: [\n      {\n        Severity: 'Medium',\n        NamespaceName: 'RHEL8-rhel-8-including-unpatched',\n        Link: 'https://access.redhat.com/errata/RHSA-2022:1764 https://access.redhat.com/security/cve/CVE-2021-3733 https://access.redhat.com/security/cve/CVE-2021-3737 https://access.redhat.com/security/cve/CVE-2021-43818 https://access.redhat.com/security/cve/CVE-2022-0391',\n        FixedBy: '0:19.3.1-5.module+el8.6.0+13002+70cfc74a',\n        Description:\n          'Python is an interpreted, interactive, object-oriented programming language, which includes modules, classes, exceptions, very high level dynamic data types and dynamic typing. Python supports interfaces to many system calls and libraries, as well as to various windowing systems. \\n\\nThe following packages have been upgraded to a later upstream version: python38 (3.8), python38-devel (3.8). (BZ#1997680, BZ#1997860)\\n\\nSecurity Fix(es):\\n\\n* python: urllib: Regular expression DoS in AbstractBasicAuthHandler (CVE-2021-3733)\\n\\n* python-lxml: HTML Cleaner allows crafted and SVG embedded scripts to pass through (CVE-2021-43818)\\n\\n* python: urllib.parse does not sanitize URLs containing ASCII newline and tabs (CVE-2022-0391)\\n\\n* python: urllib: HTTP client possible infinite loop on a 100 Continue response (CVE-2021-3737)\\n\\nFor more details about the security issue(s), including the impact, a CVSS score, acknowledgments, and other related information, refer to the CVE page(s) listed in the References section.\\n\\nAdditional Changes:\\n\\nFor detailed information on changes in this release, see the Red Hat Enterprise Linux 8.6 Release Notes linked from the References section.',\n        Name: 'RHSA-2022:1764: python38:3.8 and python38-devel:3.8 security update (Moderate)',\n        Metadata: {\n          UpdatedBy: 'RHEL8-rhel-8-including-unpatched',\n          RepoName: 'cpe:/o:redhat:enterprise_linux:8::baseos',\n          RepoLink: null,\n          DistroName: 'Red Hat Enterprise Linux Server',\n          DistroVersion: '8',\n          NVD: {\n            CVSSv3: {\n              Vectors: 'CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N',\n              Score: 7.5,\n            },\n          },\n        },\n      },\n    ],\n  },\n  {\n    Name: 'libgcrypt',\n    VersionFormat: '',\n    NamespaceName: '',\n    AddedBy:\n      'sha256:8dfe9326f733b815c486432e93e0a97f03e90e7cc35def9511cd1efa7f917f56',\n    Version: '1.8.5-6.el8',\n    Vulnerabilities: [\n      {\n        Severity: 'Medium',\n        NamespaceName: 'RHEL8-rhel-8-including-unpatched',\n        Link: 'https://access.redhat.com/errata/RHSA-2022:5311 https://access.redhat.com/security/cve/CVE-2021-40528',\n        FixedBy: '0:1.8.5-7.el8_6',\n        Description:\n          'The libgcrypt library provides general-purpose implementations of various cryptographic algorithms.\\n\\nSecurity Fix(es):\\n\\n* libgcrypt: ElGamal implementation allows plaintext recovery (CVE-2021-40528)\\n\\nFor more details about the security issue(s), including the impact, a CVSS score, acknowledgments, and other related information, refer to the CVE page(s) listed in the References section.',\n        Name: 'RHSA-2022:5311: libgcrypt security update (Moderate)',\n        Metadata: {\n          UpdatedBy: 'RHEL8-rhel-8-including-unpatched',\n          RepoName: 'cpe:/o:redhat:enterprise_linux:8::baseos',\n          RepoLink: null,\n          DistroName: 'Red Hat Enterprise Linux Server',\n          DistroVersion: '8',\n          NVD: {\n            CVSSv3: {\n              Vectors: 'CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N',\n              Score: 5.9,\n            },\n          },\n        },\n      },\n    ],\n  },\n  {\n    Name: 'python38-pip-wheel',\n    VersionFormat: '',\n    NamespaceName: '',\n    AddedBy:\n      'sha256:b71f31ebaac9f435ee0f837b5c63b1c2a02eadd0ce52a4736d2ae927bb59835b',\n    Version: '19.3.1-4.module+el8.5.0+12205+a865257a',\n    Vulnerabilities: [\n      {\n        Severity: 'Medium',\n        NamespaceName: 'RHEL8-rhel-8-including-unpatched',\n        Link: 'https://access.redhat.com/errata/RHSA-2022:1764 https://access.redhat.com/security/cve/CVE-2021-3733 https://access.redhat.com/security/cve/CVE-2021-3737 https://access.redhat.com/security/cve/CVE-2021-43818 https://access.redhat.com/security/cve/CVE-2022-0391',\n        FixedBy: '0:19.3.1-5.module+el8.6.0+13002+70cfc74a',\n        Description:\n          'Python is an interpreted, interactive, object-oriented programming language, which includes modules, classes, exceptions, very high level dynamic data types and dynamic typing. Python supports interfaces to many system calls and libraries, as well as to various windowing systems. \\n\\nThe following packages have been upgraded to a later upstream version: python38 (3.8), python38-devel (3.8). (BZ#1997680, BZ#1997860)\\n\\nSecurity Fix(es):\\n\\n* python: urllib: Regular expression DoS in AbstractBasicAuthHandler (CVE-2021-3733)\\n\\n* python-lxml: HTML Cleaner allows crafted and SVG embedded scripts to pass through (CVE-2021-43818)\\n\\n* python: urllib.parse does not sanitize URLs containing ASCII newline and tabs (CVE-2022-0391)\\n\\n* python: urllib: HTTP client possible infinite loop on a 100 Continue response (CVE-2021-3737)\\n\\nFor more details about the security issue(s), including the impact, a CVSS score, acknowledgments, and other related information, refer to the CVE page(s) listed in the References section.\\n\\nAdditional Changes:\\n\\nFor detailed information on changes in this release, see the Red Hat Enterprise Linux 8.6 Release Notes linked from the References section.',\n        Name: 'RHSA-2022:1764: python38:3.8 and python38-devel:3.8 security update (Moderate)',\n        Metadata: {\n          UpdatedBy: 'RHEL8-rhel-8-including-unpatched',\n          RepoName: 'cpe:/o:redhat:enterprise_linux:8::baseos',\n          RepoLink: null,\n          DistroName: 'Red Hat Enterprise Linux Server',\n          DistroVersion: '8',\n          NVD: {\n            CVSSv3: {\n              Vectors: 'CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N',\n              Score: 7.5,\n            },\n          },\n        },\n      },\n    ],\n  },\n  {\n    Name: 'glibc-minimal-langpack',\n    VersionFormat: '',\n    NamespaceName: '',\n    AddedBy:\n      'sha256:8dfe9326f733b815c486432e93e0a97f03e90e7cc35def9511cd1efa7f917f56',\n    Version: '2.28-164.el8',\n    Vulnerabilities: [\n      {\n        Severity: 'Medium',\n        NamespaceName: 'RHEL8-rhel-8',\n        Link: 'https://access.redhat.com/errata/RHSA-2022:0896 https://access.redhat.com/security/cve/CVE-2021-3999 https://access.redhat.com/security/cve/CVE-2022-23218 https://access.redhat.com/security/cve/CVE-2022-23219',\n        FixedBy: '0:2.28-164.el8_5.3',\n        Description:\n          'The glibc packages provide the standard C libraries (libc), POSIX thread libraries (libpthread), standard math libraries (libm), and the name service cache daemon (nscd) used by multiple programs on the system. Without these libraries, the Linux system cannot function correctly.\\n\\nSecurity Fix(es):\\n\\n* glibc: Off-by-one buffer overflow/underflow in getcwd() (CVE-2021-3999)\\n\\n* glibc: Stack-based buffer overflow in svcunix_create via long pathnames (CVE-2022-23218)\\n\\n* glibc: Stack-based buffer overflow in sunrpc clnt_create via a long pathname (CVE-2022-23219)\\n\\nFor more details about the security issue(s), including the impact, a CVSS score, acknowledgments, and other related information, refer to the CVE page(s) listed in the References section.',\n        Name: 'RHSA-2022:0896: glibc security update (Moderate)',\n        Metadata: {\n          UpdatedBy: 'RHEL8-rhel-8',\n          RepoName: 'cpe:/o:redhat:enterprise_linux:8::baseos',\n          RepoLink: null,\n          DistroName: 'Red Hat Enterprise Linux Server',\n          DistroVersion: '8',\n          NVD: {\n            CVSSv3: {\n              Vectors: 'CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H',\n              Score: 9.8,\n            },\n          },\n        },\n      },\n    ],\n  },\n  {\n    Name: 'glibc-common',\n    VersionFormat: '',\n    NamespaceName: '',\n    AddedBy:\n      'sha256:8dfe9326f733b815c486432e93e0a97f03e90e7cc35def9511cd1efa7f917f56',\n    Version: '2.28-164.el8',\n    Vulnerabilities: [\n      {\n        Severity: 'Medium',\n        NamespaceName: 'RHEL8-rhel-8',\n        Link: 'https://access.redhat.com/errata/RHSA-2022:0896 https://access.redhat.com/security/cve/CVE-2021-3999 https://access.redhat.com/security/cve/CVE-2022-23218 https://access.redhat.com/security/cve/CVE-2022-23219',\n        FixedBy: '0:2.28-164.el8_5.3',\n        Description:\n          'The glibc packages provide the standard C libraries (libc), POSIX thread libraries (libpthread), standard math libraries (libm), and the name service cache daemon (nscd) used by multiple programs on the system. Without these libraries, the Linux system cannot function correctly.\\n\\nSecurity Fix(es):\\n\\n* glibc: Off-by-one buffer overflow/underflow in getcwd() (CVE-2021-3999)\\n\\n* glibc: Stack-based buffer overflow in svcunix_create via long pathnames (CVE-2022-23218)\\n\\n* glibc: Stack-based buffer overflow in sunrpc clnt_create via a long pathname (CVE-2022-23219)\\n\\nFor more details about the security issue(s), including the impact, a CVSS score, acknowledgments, and other related information, refer to the CVE page(s) listed in the References section.',\n        Name: 'RHSA-2022:0896: glibc security update (Moderate)',\n        Metadata: {\n          UpdatedBy: 'RHEL8-rhel-8',\n          RepoName: 'cpe:/o:redhat:enterprise_linux:8::baseos',\n          RepoLink: null,\n          DistroName: 'Red Hat Enterprise Linux Server',\n          DistroVersion: '8',\n          NVD: {\n            CVSSv3: {\n              Vectors: 'CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H',\n              Score: 9.8,\n            },\n          },\n        },\n      },\n    ],\n  },\n  {\n    Name: 'curl',\n    VersionFormat: '',\n    NamespaceName: '',\n    AddedBy:\n      'sha256:8dfe9326f733b815c486432e93e0a97f03e90e7cc35def9511cd1efa7f917f56',\n    Version: '7.61.1-22.el8',\n    Vulnerabilities: [\n      {\n        Severity: 'Medium',\n        NamespaceName: 'RHEL8-rhel-8-including-unpatched',\n        Link: 'https://access.redhat.com/errata/RHSA-2022:5313 https://access.redhat.com/security/cve/CVE-2022-22576 https://access.redhat.com/security/cve/CVE-2022-27774 https://access.redhat.com/security/cve/CVE-2022-27776 https://access.redhat.com/security/cve/CVE-2022-27782',\n        FixedBy: '0:7.61.1-22.el8_6.3',\n        Description:\n          'The curl packages provide the libcurl library and the curl utility for downloading files from servers using various protocols, including HTTP, FTP, and LDAP.\\n\\nSecurity Fix(es):\\n\\n* curl: OAUTH2 bearer bypass in connection re-use (CVE-2022-22576)\\n\\n* curl: credential leak on redirect (CVE-2022-27774)\\n\\n* curl: auth/cookie leak on redirect (CVE-2022-27776)\\n\\n* curl: TLS and SSH connection too eager reuse (CVE-2022-27782)\\n\\nFor more details about the security issue(s), including the impact, a CVSS score, acknowledgments, and other related information, refer to the CVE page(s) listed in the References section.',\n        Name: 'RHSA-2022:5313: curl security update (Moderate)',\n        Metadata: {\n          UpdatedBy: 'RHEL8-rhel-8-including-unpatched',\n          RepoName: 'cpe:/o:redhat:enterprise_linux:8::baseos',\n          RepoLink: null,\n          DistroName: 'Red Hat Enterprise Linux Server',\n          DistroVersion: '8',\n          NVD: {\n            CVSSv3: {\n              Vectors: 'CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:N',\n              Score: 8.1,\n            },\n          },\n        },\n      },\n      {\n        Severity: 'Medium',\n        NamespaceName: 'RHEL8-rhel-8-including-unpatched',\n        Link: 'https://access.redhat.com/errata/RHSA-2022:6159 https://access.redhat.com/security/cve/CVE-2022-32206 https://access.redhat.com/security/cve/CVE-2022-32208',\n        FixedBy: '0:7.61.1-22.el8_6.4',\n        Description:\n          'The curl packages provide the libcurl library and the curl utility for downloading files from servers using various protocols, including HTTP, FTP, and LDAP.\\n\\nSecurity Fix(es):\\n\\n* curl: HTTP compression denial of service (CVE-2022-32206)\\n\\n* curl: FTP-KRB bad message verification (CVE-2022-32208)\\n\\nFor more details about the security issue(s), including the impact, a CVSS score, acknowledgments, and other related information, refer to the CVE page(s) listed in the References section.',\n        Name: 'RHSA-2022:6159: curl security update (Moderate)',\n        Metadata: {\n          UpdatedBy: 'RHEL8-rhel-8-including-unpatched',\n          RepoName: 'cpe:/o:redhat:enterprise_linux:8::baseos',\n          RepoLink: null,\n          DistroName: 'Red Hat Enterprise Linux Server',\n          DistroVersion: '8',\n          NVD: {\n            CVSSv3: {\n              Vectors: 'CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H',\n              Score: 6.5,\n            },\n          },\n        },\n      },\n    ],\n  },\n  {\n    Name: 'libcurl',\n    VersionFormat: '',\n    NamespaceName: '',\n    AddedBy:\n      'sha256:8dfe9326f733b815c486432e93e0a97f03e90e7cc35def9511cd1efa7f917f56',\n    Version: '7.61.1-22.el8',\n    Vulnerabilities: [\n      {\n        Severity: 'Medium',\n        NamespaceName: 'RHEL8-rhel-8-including-unpatched',\n        Link: 'https://access.redhat.com/errata/RHSA-2022:5313 https://access.redhat.com/security/cve/CVE-2022-22576 https://access.redhat.com/security/cve/CVE-2022-27774 https://access.redhat.com/security/cve/CVE-2022-27776 https://access.redhat.com/security/cve/CVE-2022-27782',\n        FixedBy: '0:7.61.1-22.el8_6.3',\n        Description:\n          'The curl packages provide the libcurl library and the curl utility for downloading files from servers using various protocols, including HTTP, FTP, and LDAP.\\n\\nSecurity Fix(es):\\n\\n* curl: OAUTH2 bearer bypass in connection re-use (CVE-2022-22576)\\n\\n* curl: credential leak on redirect (CVE-2022-27774)\\n\\n* curl: auth/cookie leak on redirect (CVE-2022-27776)\\n\\n* curl: TLS and SSH connection too eager reuse (CVE-2022-27782)\\n\\nFor more details about the security issue(s), including the impact, a CVSS score, acknowledgments, and other related information, refer to the CVE page(s) listed in the References section.',\n        Name: 'RHSA-2022:5313: curl security update (Moderate)',\n        Metadata: {\n          UpdatedBy: 'RHEL8-rhel-8-including-unpatched',\n          RepoName: 'cpe:/o:redhat:enterprise_linux:8::baseos',\n          RepoLink: null,\n          DistroName: 'Red Hat Enterprise Linux Server',\n          DistroVersion: '8',\n          NVD: {\n            CVSSv3: {\n              Vectors: 'CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:N',\n              Score: 8.1,\n            },\n          },\n        },\n      },\n      {\n        Severity: 'Medium',\n        NamespaceName: 'RHEL8-rhel-8-including-unpatched',\n        Link: 'https://access.redhat.com/errata/RHSA-2022:6159 https://access.redhat.com/security/cve/CVE-2022-32206 https://access.redhat.com/security/cve/CVE-2022-32208',\n        FixedBy: '0:7.61.1-22.el8_6.4',\n        Description:\n          'The curl packages provide the libcurl library and the curl utility for downloading files from servers using various protocols, including HTTP, FTP, and LDAP.\\n\\nSecurity Fix(es):\\n\\n* curl: HTTP compression denial of service (CVE-2022-32206)\\n\\n* curl: FTP-KRB bad message verification (CVE-2022-32208)\\n\\nFor more details about the security issue(s), including the impact, a CVSS score, acknowledgments, and other related information, refer to the CVE page(s) listed in the References section.',\n        Name: 'RHSA-2022:6159: curl security update (Moderate)',\n        Metadata: {\n          UpdatedBy: 'RHEL8-rhel-8-including-unpatched',\n          RepoName: 'cpe:/o:redhat:enterprise_linux:8::baseos',\n          RepoLink: null,\n          DistroName: 'Red Hat Enterprise Linux Server',\n          DistroVersion: '8',\n          NVD: {\n            CVSSv3: {\n              Vectors: 'CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H',\n              Score: 6.5,\n            },\n          },\n        },\n      },\n    ],\n  },\n  {\n    Name: 'gnupg2',\n    VersionFormat: '',\n    NamespaceName: '',\n    AddedBy:\n      'sha256:8dfe9326f733b815c486432e93e0a97f03e90e7cc35def9511cd1efa7f917f56',\n    Version: '2.2.20-2.el8',\n    Vulnerabilities: [\n      {\n        Severity: 'Medium',\n        NamespaceName: 'RHEL8-rhel-8-including-unpatched',\n        Link: 'https://access.redhat.com/errata/RHSA-2022:6463 https://access.redhat.com/security/cve/CVE-2022-34903',\n        FixedBy: '0:2.2.20-3.el8_6',\n        Description:\n          'The GNU Privacy Guard (GnuPG or GPG) is a tool for encrypting data and creating digital signatures, compliant with OpenPGP and S/MIME standards.\\n\\nSecurity Fix(es):\\n\\n* gpg: Signature spoofing via status line injection (CVE-2022-34903)\\n\\nFor more details about the security issue(s), including the impact, a CVSS score, acknowledgments, and other related information, refer to the CVE page(s) listed in the References section.',\n        Name: 'RHSA-2022:6463: gnupg2 security update (Moderate)',\n        Metadata: {\n          UpdatedBy: 'RHEL8-rhel-8-including-unpatched',\n          RepoName: 'cpe:/o:redhat:enterprise_linux:8::baseos',\n          RepoLin: null,\n          DistroName: 'Red Hat Enterprise Linux Server',\n          DistroVersion: '8',\n          NVD: {\n            CVSSv3: {\n              Vectors: 'CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:L/A:N',\n              Score: 6.5,\n            },\n          },\n        },\n      },\n    ],\n  },\n];\n\nconst lowSeverityFeatures = [\n  {\n    Name: 'libssh',\n    VersionFormat: '',\n    NamespaceName: '',\n    AddedBy:\n      'sha256:8dfe9326f733b815c486432e93e0a97f03e90e7cc35def9511cd1efa7f917f56',\n    Version: '0.9.4-3.el8',\n    Vulnerabilities: [\n      {\n        Severity: 'Low',\n        NamespaceName: 'RHEL8-rhel-8-including-unpatched',\n        Link: 'https://access.redhat.com/errata/RHSA-2022:2031 https://access.redhat.com/security/cve/CVE-2021-3634',\n        FixedBy: '0:0.9.6-3.el8',\n        Description:\n          'libssh is a library which implements the SSH protocol. It can be used to implement client and server applications.\\n\\nThe following packages have been upgraded to a later upstream version: libssh (0.9.6). (BZ#1896651)\\n\\nSecurity Fix(es):\\n\\n* libssh: possible heap-based buffer overflow when rekeying (CVE-2021-3634)\\n\\nFor more details about the security issue(s), including the impact, a CVSS score, acknowledgments, and other related information, refer to the CVE page(s) listed in the References section.\\n\\nAdditional Changes:\\n\\nFor detailed information on changes in this release, see the Red Hat Enterprise Linux 8.6 Release Notes linked from the References section.',\n        Name: 'RHSA-2022:2031: libssh security, bug fix, and enhancement update (Low)',\n        Metadata: {\n          UpdatedBy: 'RHEL8-rhel-8-including-unpatched',\n          RepoName: 'cpe:/o:redhat:enterprise_linux:8::baseos',\n          RepoLink: null,\n          DistroName: 'Red Hat Enterprise Linux Server',\n          DistroVersion: '8',\n          NVD: {\n            CVSSv3: {\n              Vectors: 'CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H',\n              Score: 6.5,\n            },\n          },\n        },\n      },\n    ],\n  },\n  {\n    Name: 'libssh-config',\n    VersionFormat: '',\n    NamespaceName: '',\n    AddedBy:\n      'sha256:8dfe9326f733b815c486432e93e0a97f03e90e7cc35def9511cd1efa7f917f56',\n    Version: '0.9.4-3.el8',\n    Vulnerabilities: [\n      {\n        Severity: 'Low',\n        NamespaceName: 'RHEL8-rhel-8-including-unpatched',\n        Link: 'https://access.redhat.com/errata/RHSA-2022:2031 https://access.redhat.com/security/cve/CVE-2021-3634',\n        FixedBy: '0:0.9.6-3.el8',\n        Description:\n          'libssh is a library which implements the SSH protocol. It can be used to implement client and server applications.\\n\\nThe following packages have been upgraded to a later upstream version: libssh (0.9.6). (BZ#1896651)\\n\\nSecurity Fix(es):\\n\\n* libssh: possible heap-based buffer overflow when rekeying (CVE-2021-3634)\\n\\nFor more details about the security issue(s), including the impact, a CVSS score, acknowledgments, and other related information, refer to the CVE page(s) listed in the References section.\\n\\nAdditional Changes:\\n\\nFor detailed information on changes in this release, see the Red Hat Enterprise Linux 8.6 Release Notes linked from the References section.',\n        Name: 'RHSA-2022:2031: libssh security, bug fix, and enhancement update (Low)',\n        Metadata: {\n          UpdatedBy: 'RHEL8-rhel-8-including-unpatched',\n          RepoName: 'cpe:/o:redhat:enterprise_linux:8::baseos',\n          RepoLink: null,\n          DistroName: 'Red Hat Enterprise Linux Server',\n          DistroVersion: '8',\n          NVD: {\n            CVSSv3: {\n              Vectors: 'CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H',\n              Score: 6.5,\n            },\n          },\n        },\n      },\n    ],\n  },\n];\n\nconst unknownSeverityFeatures = [\n  {\n    Name: 'mako',\n    VersionFormat: '',\n    NamespaceName: '',\n    AddedBy:\n      'sha256:6c5d27ae7a2aa08ebc449d61ed339dfcb3324450ceaded23eec1fbc8d3f10499',\n    Version: '1.1.1',\n    Vulnerabilities: [\n      {\n        Severity: 'Unknown',\n        NamespaceName: 'pyupio',\n        Link: '',\n        FixedBy: '',\n        Description:\n          'Mako 1.2.2 includes a fix for a REDoS vulnerability.\\r\\nhttps://github.com/sqlalchemy/mako/issues/366',\n        Name: 'pyup.io-50870 (PVE-2022-50870)',\n        Metadata: {\n          UpdatedBy: 'pyupio',\n          RepoName: 'pypi',\n          RepoLink: 'https://pypi.org/simple',\n          DistroName: '',\n          DistroVersion: '',\n          NVD: {\n            CVSSv3: {\n              Vectors: '',\n              Score: '',\n            },\n          },\n        },\n      },\n    ],\n  },\n  {\n    Name: 'click',\n    VersionFormat: '',\n    NamespaceName: '',\n    AddedBy:\n      'sha256:6c5d27ae7a2aa08ebc449d61ed339dfcb3324450ceaded23eec1fbc8d3f10499',\n    Version: '7.1.2',\n    Vulnerabilities: [\n      {\n        Severity: 'Unknown',\n        NamespaceName: 'pyupio',\n        Link: '',\n        FixedBy: '',\n        Description:\n          \"Click 8.0.0 uses 'mkstemp()' instead of the deprecated & insecure 'mktemp()'.\\r\\nhttps://github.com/pallets/click/issues/1752\",\n        Name: 'pyup.io-47833 (PVE-2022-47833)',\n        Metadata: {\n          UpdatedBy: 'pyupio',\n          RepoName: 'pypi',\n          RepoLink: 'https://pypi.org/simple',\n          DistroName: '',\n          DistroVersion: '',\n          NVD: {\n            CVSSv3: {\n              Vectors: '',\n              Score: '',\n            },\n          },\n        },\n      },\n    ],\n  },\n];\n\nconst mockResponseMixedVulns = {\n  status: 'scanned',\n  data: {\n    Layer: {\n      Name: 'sha256:ee4e8b351f1976248ad72cc4420b9e747c4fc9ca4a9443783dba824f50954a91',\n      ParentName: '',\n      NamespaceName: '',\n      IndexedByVersion: 4,\n      Features: [\n        ...noSeverityFeatures,\n        ...criticalSeverityFeatures,\n        ...highSeverityFeatures,\n        ...mediumSeverityFeatures,\n        ...lowSeverityFeatures,\n        ...unknownSeverityFeatures,\n      ],\n    },\n  },\n};\n\nconst mockResponseNoVulns = {\n  status: 'scanned',\n  data: {\n    Layer: {\n      Name: 'sha256:ee4e8b351f1976248ad72cc4420b9e747c4fc9ca4a9443783dba824f50954a91',\n      ParentName: '',\n      NamespaceName: '',\n      IndexedByVersion: 4,\n      Features: noSeverityFeatures,\n    },\n  },\n};\n\nconst mockResponseNoPackages = {\n  status: 'scanned',\n  data: {\n    Layer: {\n      Name: 'sha256:ee4e8b351f1976248ad72cc4420b9e747c4fc9ca4a9443783dba824f50954a91',\n      ParentName: '',\n      NamespaceName: '',\n      IndexedByVersion: 4,\n      Features: [],\n    },\n  },\n};\n\nconst mockResponseHighVulns = {\n  status: 'scanned',\n  data: {\n    Layer: {\n      Name: 'sha256:ee4e8b351f1976248ad72cc4420b9e747c4fc9ca4a9443783dba824f50954a91',\n      ParentName: '',\n      NamespaceName: '',\n      IndexedByVersion: 4,\n      Features: [...noSeverityFeatures, ...highSeverityFeatures],\n    },\n  },\n};\n\n// TODO: Does queued state still return the Layer field?\nconst mockResponseQueued = {\n  status: 'queued',\n  data: {\n    Layer: {\n      Name: 'sha256:ee4e8b351f1976248ad72cc4420b9e747c4fc9ca4a9443783dba824f50954a91',\n      ParentName: '',\n      NamespaceName: '',\n      IndexedByVersion: 4,\n      Features: [],\n    },\n  },\n};\n\n// TODO: Does failed state still return the Layer field?\nconst mockResponseFailed = {\n  status: 'failed',\n  data: {\n    Layer: {\n      Name: 'sha256:ee4e8b351f1976248ad72cc4420b9e747c4fc9ca4a9443783dba824f50954a91',\n      ParentName: '',\n      NamespaceName: '',\n      IndexedByVersion: 4,\n      Features: [],\n    },\n  },\n};\n\n// TODO: Does unsupported state still return the Layer field?\nconst mockResponseUnsupported = {\n  status: 'unsupported',\n  data: {\n    Layer: {\n      Name: 'sha256:ee4e8b351f1976248ad72cc4420b9e747c4fc9ca4a9443783dba824f50954a91',\n      ParentName: '',\n      NamespaceName: '',\n      IndexedByVersion: 4,\n      Features: [],\n    },\n  },\n};\n\nconst securityUrl =\n  /api\\/v1\\/repository\\/.+\\/.+\\/manifest\\/sha256:1234567890101112150f0d3de5f80a38f65a85e709b77fd24491253990f306be\\/security\\?vulnerabilities=true/;\nmock.onGet(securityUrl).reply(200, mockResponseHighVulns);\n\nconst mixedVulns =\n  /api\\/v1\\/repository\\/.+\\/.+\\/manifest\\/sha256:securityreportmixedvulns5f80a38f65a85e709b77fd24491253990f30b6be\\/security\\?vulnerabilities=true/;\nmock.onGet(mixedVulns).reply(200, mockResponseMixedVulns);\n\nconst ppc64lesubmanifest =\n  /api\\/v1\\/repository\\/.+\\/.+\\/manifest\\/sha256:ppc64lesubmanifest11f826dd35a24e31eadb507111deae66b0cfea7c52a824\\/security\\?vulnerabilities=true/;\nmock.onGet(ppc64lesubmanifest).reply(200, mockResponseNoVulns);\n\nconst amd64submanifest =\n  /api\\/v1\\/repository\\/.+\\/.+\\/manifest\\/sha256:amd64submanifest11f34826dd35a24e31eadb507111deae66b0cfea7c52a824\\/security\\?vulnerabilities=true/;\nmock.onGet(amd64submanifest).reply(200, mockResponseQueued);\n\nconst securityReportFailed =\n  /api\\/v1\\/repository\\/.+\\/.+\\/manifest\\/sha256:securityreportfailedd3de5f80a38f65a85e709b77fd24491253990f30b6be\\/security\\?vulnerabilities=true/;\nmock.onGet(securityReportFailed).reply(200, mockResponseFailed);\n\nconst securityReportUnsupported =\n  /api\\/v1\\/repository\\/.+\\/.+\\/manifest\\/sha256:securityreportunsupported80a38f65a85e709b77dfd24491253990f30b6be\\/security\\?vulnerabilities=true/;\nmock.onGet(securityReportUnsupported).reply(200, mockResponseUnsupported);\n\nconst securityReportQueued =\n  /api\\/v1\\/repository\\/.+\\/.+\\/manifest\\/sha256:securityreportqueuedd3de5f80a38f65a85e709b77fd24491253990f30b6be\\/security\\?vulnerabilities=true/;\nmock.onGet(securityReportQueued).reply(200, mockResponseQueued);\n\nconst securityReportNoVulns =\n  /api\\/v1\\/repository\\/.+\\/.+\\/manifest\\/sha256:securityreportnovulns3de5f80a38f65a85e709b77fd24491253990f30b6be\\/security\\?vulnerabilities=true/;\nmock.onGet(securityReportNoVulns).reply(200, mockResponseNoVulns);\n\nconst packagesReportNoPackages =\n  /api\\/v1\\/repository\\/.+\\/.+\\/manifest\\/sha256:packagesreportnopackages5f80a38f65a85e709b77fd24491253990f30b6be\\/security\\?vulnerabilities=true/;\nmock.onGet(packagesReportNoPackages).reply(200, mockResponseNoPackages);\n","import {mock} from 'src/tests/fake-db/MockAxios';\nimport {AxiosRequestConfig} from 'axios';\nimport {TagsResponse, Tag} from 'src/resources/TagResource';\n\nlet tags: Tag[] = [\n  {\n    name: 'latest',\n    is_manifest_list: false,\n    last_modified: 'Thu, 02 Jun 2022 19:12:32 -0000',\n    size: 100,\n    manifest_digest:\n      'sha256:1234567890101112150f0d3de5f80a38f65a85e709b77fd24491253990f306be',\n    reversion: false,\n    start_ts: 1654197152,\n    manifest_list: undefined,\n  },\n  {\n    name: 'manifestlist',\n    is_manifest_list: true,\n    last_modified: 'Thu, 02 Jun 2022 19:12:32 -0000',\n    size: 100,\n    manifest_digest:\n      'sha256:abcdefghij3759fb50f0d3de5f80a38f65a85e709b77fd24491253990f30b6be',\n    reversion: false,\n    start_ts: 1654197152,\n    manifest_list: {\n      schemaVersion: 2,\n      mediaType: '',\n      manifests: [],\n    },\n  },\n  {\n    name: 'securityreportqueued',\n    is_manifest_list: false,\n    last_modified: 'Thu, 02 Jun 2022 19:12:32 -0000',\n    size: 100,\n    manifest_digest:\n      'sha256:securityreportqueuedd3de5f80a38f65a85e709b77fd24491253990f30b6be',\n    reversion: false,\n    start_ts: 1654197152,\n    manifest_list: undefined,\n  },\n  {\n    name: 'securityreportfailed',\n    is_manifest_list: false,\n    last_modified: 'Thu, 02 Jun 2022 19:12:32 -0000',\n    size: 100,\n    manifest_digest:\n      'sha256:securityreportfailedd3de5f80a38f65a85e709b77fd24491253990f30b6be',\n    reversion: false,\n    start_ts: 1654197152,\n    manifest_list: undefined,\n  },\n  {\n    name: 'securityreportunsupported',\n    is_manifest_list: false,\n    last_modified: 'Thu, 02 Jun 2022 19:12:32 -0000',\n    size: 100,\n    manifest_digest:\n      'sha256:securityreportunsupported80a38f65a85e709b77dfd24491253990f30b6be',\n    reversion: false,\n    start_ts: 1654197152,\n    manifest_list: undefined,\n  },\n  {\n    name: 'securityreportnovulns',\n    is_manifest_list: false,\n    last_modified: 'Thu, 02 Jun 2022 19:12:32 -0000',\n    size: 100,\n    manifest_digest:\n      'sha256:securityreportnovulns3de5f80a38f65a85e709b77fd24491253990f30b6be',\n    reversion: false,\n    start_ts: 1654197152,\n    manifest_list: undefined,\n  },\n  {\n    name: 'securityreportmixedvulns',\n    is_manifest_list: false,\n    last_modified: 'Thu, 02 Jun 2022 19:12:32 -0000',\n    size: 100,\n    manifest_digest:\n      'sha256:securityreportmixedvulns5f80a38f65a85e709b77fd24491253990f30b6be',\n    reversion: false,\n    start_ts: 1654197152,\n    manifest_list: undefined,\n  },\n  {\n    name: 'packagesreportnopackages',\n    is_manifest_list: false,\n    last_modified: 'Thu, 02 Jun 2022 19:12:32 -0000',\n    size: 100,\n    manifest_digest:\n      'sha256:packagesreportnopackages5f80a38f65a85e709b77fd24491253990f30b6be',\n    reversion: false,\n    start_ts: 1654197152,\n    manifest_list: undefined,\n  },\n];\n\nconst specificTagPathRegex = new RegExp(\n  `/api/v1/repository/.+/.+/tag/?.+&specificTag=.+`,\n);\nmock.onGet(specificTagPathRegex).reply((request: AxiosRequestConfig) => {\n  const searchParams = new URLSearchParams(request.url);\n  const tagResponse: TagsResponse = {\n    page: 1,\n    has_additional: false,\n    tags: tags.filter((tag) => tag.name === searchParams.get('specificTag')),\n  };\n  return [200, tagResponse];\n});\n\nconst tagPathRegex = new RegExp(\n  `/api/v1/repository/.+/.+/tag/\\\\?.+onlyActiveTags=true$`,\n);\nmock.onGet(tagPathRegex).reply((request: AxiosRequestConfig) => {\n  return [\n    200,\n    {\n      page: 1,\n      has_additional: false,\n      tags: tags,\n    },\n  ];\n});\n\nconst deleteTagRegex = new RegExp(`/api/v1/repository/.+/.+/tag/.+`);\nmock.onDelete(deleteTagRegex).reply((request: AxiosRequestConfig) => {\n  const tagName: string = request.url.split('/').pop();\n  tags = tags.filter((tag) => tag.name !== tagName);\n  return [204, {}];\n});\n","import {mock} from 'src/tests/fake-db/MockAxios';\nimport {getLabels, LabelsResponse} from 'src/resources/TagResource';\n\nconst labelsResponse: LabelsResponse = {\n  labels: [\n    {\n      id: '5bebb8a4-e917-4d99-89ac-gdfgdg3434g1',\n      key: 'description',\n      value: 'This is an example description label',\n      source_type: 'manifest',\n      media_type: 'text/plain',\n    },\n    {\n      id: 'ff31310a-5857-4e7b-bcd4-vdfbdfgerge2',\n      key: 'maintainer',\n      value: 'maintainer@test.io',\n      source_type: 'manifest',\n      media_type: 'text/plain',\n    },\n    {\n      id: '01c77159-da60-49ff-9cc3-vdfbdfgerge3',\n      key: 'name',\n      value: 'testname',\n      source_type: 'manifest',\n      media_type: 'text/plain',\n    },\n    {\n      id: 'ec2eaea2-e62f-4e49-93a5-vdfbdfgerge4',\n      key: 'release',\n      value: '1',\n      source_type: 'manifest',\n      media_type: 'text/plain',\n    },\n    {\n      id: '144d0215-8340-4377-a201-vdfbdfgerge5',\n      key: 'summary',\n      value: 'Example docker image',\n      source_type: 'manifest',\n      media_type: 'text/plain',\n    },\n    {\n      id: 'd710893b-c0af-45ba-9ee4-vdfbdfgerge6',\n      key: 'vendor',\n      value: 'Redhat',\n      source_type: 'manifest',\n      media_type: 'text/plain',\n    },\n    {\n      id: 'defcb097-8326-432b-a4d2-vdfbdfgerge7',\n      key: 'version',\n      value: '1.0.0',\n      source_type: 'manifest',\n      media_type: 'text/plain',\n    },\n  ],\n};\n\nconst tagPathRegex = new RegExp(`/api/v1/repository/.+/.+/manifest/.+/label`);\nmock.onGet(tagPathRegex).reply(() => {\n  return [200, labelsResponse];\n});\n","import {mock} from 'src/tests/fake-db/MockAxios';\nimport {AxiosRequestConfig} from 'axios';\nimport {ManifestByDigestResponse, Manifest} from 'src/resources/TagResource';\n\nconst manifest = {\n  schemaVersion: 2,\n  mediaType: 'application/vnd.oci.image.index.v1+json',\n  manifests: [\n    {\n      digest:\n        'sha256:ppc64lesubmanifest11f826dd35a24e31eadb507111deae66b0cfea7c52a824',\n      size: 1000,\n      platform: {\n        architecture: 'ppc64le',\n        os: 'linux',\n      },\n    },\n    {\n      digest:\n        'sha256:amd64submanifest11f34826dd35a24e31eadb507111deae66b0cfea7c52a824',\n      size: 2000,\n      platform: {\n        architecture: 'amd64',\n        os: 'linux',\n      },\n    },\n  ],\n};\n\nconst manifestPathRegex = new RegExp('/api/v1/repository/.+/.+/manifest/.+');\nmock.onGet(manifestPathRegex).reply((request: AxiosRequestConfig) => {\n  const manifestResponse: ManifestByDigestResponse = {\n    digest: '',\n    manifest_data: '',\n    is_manifest_list: true,\n  };\n  const digest = request.baseURL.split('/').pop();\n  manifestResponse.digest = digest;\n  manifestResponse.manifest_data = JSON.stringify(manifest);\n  return [200, manifestResponse];\n});\n","import {AxiosRequestConfig} from 'axios';\nimport {IRepository} from 'src/resources/RepositoryResource';\nimport {mock} from 'src/tests/fake-db/MockAxios';\n\nconst responses = {\n  user1: {\n    repositories: [\n      {\n        namespace: 'user1',\n        name: 'postgres',\n        description: null,\n        is_public: false,\n        kind: 'image',\n        state: 'NORMAL',\n        quota_report: {\n          quota_bytes: 132459661,\n          configured_quota: 104857600,\n        },\n        last_modified: 1656432090,\n        popularity: 0.0,\n        is_starred: false,\n      },\n      {\n        namespace: 'user1',\n        name: 'nested/repository',\n        description: null,\n        is_public: false,\n        kind: 'image',\n        state: 'NORMAL',\n        quota_report: {\n          quota_bytes: 132459661,\n          configured_quota: 104857600,\n        },\n        last_modified: 1656432090,\n        popularity: 0.0,\n        is_starred: false,\n      },\n    ],\n  },\n  quay: {\n    repositories: [\n      {\n        namespace: 'quay',\n        name: 'postgres',\n        description: null,\n        is_public: false,\n        kind: 'image',\n        state: 'NORMAL',\n        quota_report: {\n          quota_bytes: 132459661,\n          configured_quota: 104857600,\n        },\n        last_modified: 1656428008,\n        popularity: 0.0,\n        is_starred: false,\n      },\n      {\n        namespace: 'quay',\n        name: 'python',\n        description: null,\n        is_public: false,\n        kind: 'image',\n        state: 'NORMAL',\n        quota_report: {\n          quota_bytes: 132459661,\n          configured_quota: 104857600,\n        },\n        last_modified: 1656428008,\n        popularity: 0.0,\n        is_starred: false,\n      },\n      {\n        namespace: 'quay',\n        name: 'clair',\n        description: null,\n        is_public: false,\n        kind: 'image',\n        state: 'NORMAL',\n        quota_report: {\n          quota_bytes: 132459661,\n          configured_quota: 104857600,\n        },\n        last_modified: 1656428008,\n        popularity: 0.0,\n        is_starred: false,\n      },\n      {\n        namespace: 'quay',\n        name: 'redis',\n        description: null,\n        is_public: false,\n        kind: 'image',\n        state: 'NORMAL',\n        quota_report: {\n          quota_bytes: 132459661,\n          configured_quota: 104857600,\n        },\n        last_modified: 1656428008,\n        popularity: 0.0,\n        is_starred: false,\n      },\n      {\n        namespace: 'quay',\n        name: 'ansible',\n        description: null,\n        is_public: false,\n        kind: 'image',\n        state: 'NORMAL',\n        quota_report: {\n          quota_bytes: 132459661,\n          configured_quota: 104857600,\n        },\n        last_modified: 1656428008,\n        popularity: 0.0,\n        is_starred: false,\n      },\n      {\n        namespace: 'quay',\n        name: 'busybox',\n        description: null,\n        is_public: false,\n        kind: 'image',\n        state: 'NORMAL',\n        quota_report: {\n          quota_bytes: 132459661,\n          configured_quota: 104857600,\n        },\n        last_modified: 1656428008,\n        popularity: 0.0,\n        is_starred: false,\n      },\n    ],\n  },\n  projectquay: {\n    repositories: [],\n  },\n  testorg: {\n    repositories: [\n      {\n        namespace: 'testorg',\n        name: 'redis',\n        description: null,\n        is_public: false,\n        kind: 'image',\n        state: 'NORMAL',\n        quota_report: {\n          quota_bytes: 0,\n          configured_quota: 104857600,\n        },\n        last_modified: null,\n        popularity: 1.0,\n        is_starred: false,\n      },\n      {\n        namespace: 'testorg',\n        name: 'postgres',\n        description: null,\n        is_public: false,\n        kind: 'image',\n        state: 'NORMAL',\n        quota_report: {\n          quota_bytes: 132459661,\n          configured_quota: 104857600,\n        },\n        last_modified: 1656426723,\n        popularity: 1.0,\n        is_starred: false,\n      },\n    ],\n  },\n};\n\nconst response = {\n  namespace: 'quay',\n  name: 'testrepo',\n  kind: 'image',\n};\n\nconst successResponse = {\n  success: true,\n};\n\nconst repoDetailsResponse = {\n  state: 'NORMAL',\n};\n\nmock\n  .onGet('/api/v1/repository?last_modified=true&namespace=quay&public=true')\n  .reply(200, responses.quay);\nmock\n  .onGet(\n    '/api/v1/repository?last_modified=true&namespace=projectquay&public=true',\n  )\n  .reply(200, responses.projectquay);\nmock\n  .onGet('/api/v1/repository?last_modified=true&namespace=testorg&public=true')\n  .reply(200, responses.testorg);\nmock\n  .onGet('/api/v1/repository?last_modified=true&namespace=user1&public=true')\n  .reply(200, responses.user1);\nmock\n  .onGet('/api/v1/repository?last_modified=true&namespace=&public=true')\n  .reply(200, {repositories: []});\nmock\n  .onGet(\n    '/api/v1/repository?last_modified=true&namespace=manyrepositories&public=true',\n  )\n  .reply((request: AxiosRequestConfig) => {\n    const repos = [];\n    for (let i = 0; i < 50; i++) {\n      const repo: IRepository = {\n        namespace: 'manyrepositories',\n        name: '',\n        description: null,\n        is_public: false,\n        kind: 'image',\n        state: 'NORMAL',\n        quota_report: {\n          quota_bytes: 132459661,\n          configured_quota: 104857600,\n        },\n        last_modified: 1656432090,\n        popularity: 0.0,\n        is_starred: false,\n      };\n      repo.name = `repo${i}`;\n      repos.push(repo);\n    }\n    return [200, {repositories: repos}];\n  });\n\nconst repoDetailsPathRegex = new RegExp(\n  `/api/v1/repository/.+/.+?includeStats=false&includeTags=false`,\n);\nmock.onGet(repoDetailsPathRegex).reply(200, repoDetailsResponse);\n\nmock.onPost('/api/v1/repository').reply((request: AxiosRequestConfig) => {\n  const {namespace, repository, visibility, description, repo_kind} =\n    JSON.parse(request.data);\n  responses[namespace].repositories.push({\n    namespace: namespace,\n    name: repository,\n    description: description,\n    is_public: visibility == 'public',\n    kind: repo_kind,\n    state: 'NORMAL',\n    quota_report: {\n      quota_bytes: 132459661,\n      configured_quota: 104857600,\n    },\n    last_modified: 1656426723,\n    popularity: 1.0,\n    is_starred: false,\n  });\n  return [201, successResponse];\n});\n\nconst visibilityPathRegex = new RegExp(\n  `/api/v1/repository/.+/.+/changevisibility`,\n);\nmock.onPost(visibilityPathRegex).reply((request: AxiosRequestConfig) => {\n  const {visibility} = JSON.parse(request.data);\n  const splitUrl = request.url.split('/');\n  const org = splitUrl[4];\n  const requestedRepo = splitUrl.slice(5, splitUrl.length - 1).join('/');\n  console.log('org', org);\n  console.log('request.url', request.url);\n  console.log('requestedRepo', requestedRepo);\n\n  const repoIndex = responses[org].repositories.findIndex(\n    (repo) => repo.name === requestedRepo,\n  );\n  responses[org].repositories[repoIndex].is_public = visibility === 'public';\n  return [200, successResponse];\n});\n\nconst deleteRepoRegex = new RegExp(`/api/v1/repository/.+/.+`);\nmock.onDelete(deleteRepoRegex).reply((request: AxiosRequestConfig) => {\n  const splitUrl = request.url.split('/');\n  const org = splitUrl[4];\n  const requestedRepo = splitUrl.slice(5, splitUrl.length).join('/');\n  responses[org].repositories = responses[org].repositories.filter(\n    (repo) => repo.name !== requestedRepo,\n  );\n  return [204, successResponse];\n});\n","import {AxiosRequestConfig} from 'axios';\nimport {mock} from 'src/tests/fake-db/MockAxios';\n\nconst response = {\n  account_recovery_mode: false,\n  config: {\n    AUTHENTICATION_TYPE: 'Database',\n    AVATAR_KIND: 'local',\n    BRANDING: {\n      footer_img: null,\n      footer_url: null,\n      logo: '/static/img/quay-horizontal-color.svg',\n    },\n    CHANNEL_COLORS: [\n      '#969696',\n      '#aec7e8',\n      '#ff7f0e',\n      '#ffbb78',\n      '#2ca02c',\n      '#98df8a',\n      '#d62728',\n      '#ff9896',\n      '#9467bd',\n      '#c5b0d5',\n      '#8c564b',\n      '#c49c94',\n      '#e377c2',\n      '#f7b6d2',\n      '#7f7f7f',\n      '#c7c7c7',\n      '#bcbd22',\n      '#1f77b4',\n      '#17becf',\n      '#9edae5',\n      '#393b79',\n      '#5254a3',\n      '#6b6ecf',\n      '#9c9ede',\n      '#9ecae1',\n      '#31a354',\n      '#b5cf6b',\n      '#a1d99b',\n      '#8c6d31',\n      '#ad494a',\n      '#e7ba52',\n      '#a55194',\n    ],\n    CONTACT_INFO: [],\n    DEBUG: false,\n    DOCUMENTATION_ROOT: 'https://docs.projectquay.io/',\n    ENTERPRISE_LOGO_URL: '/static/img/quay-horizontal-color.svg',\n    // ENTERPRISE_DARK_LOGO_URL:\n    //  '/static/img/quay-horizontal-whiteblue-nobackground.svg',\n    FEATURE_PROXY_CACHE: false,\n    FEATURE_QUOTA_MANAGEMENT: false,\n    FEATURE_REPO_MIRROR: false,\n    LOCAL_OAUTH_HANDLER: '/oauth/localapp',\n    PREFERRED_URL_SCHEME: 'https',\n    RECAPTCHA_SITE_KEY: null,\n    REGISTRY_TITLE: 'Mock Quay',\n    REGISTRY_TITLE_SHORT: 'Quay',\n    SEARCH_MAX_RESULT_PAGE_COUNT: 10,\n    SEARCH_RESULTS_PER_PAGE: 10,\n    SENTRY_PUBLIC_DSN: null,\n    SERVER_HOSTNAME: 'quay-ui.quaydev.org',\n    SETUP_COMPLETE: true,\n    STATIC_SITE_BUCKET: null,\n    TAG_EXPIRATION_OPTIONS: ['2w'],\n  },\n  external_login: [],\n  features: {\n    SUPERUSERS_FULL_ACCESS: true,\n    ACTION_LOG_ROTATION: false,\n    ADVERTISE_V2: true,\n    AGGREGATED_LOG_COUNT_RETRIEVAL: true,\n    ANONYMOUS_ACCESS: true,\n    APP_REGISTRY: false,\n    APP_SPECIFIC_TOKENS: true,\n    BILLING: false,\n    BITBUCKET_BUILD: false,\n    BLACKLISTED_EMAILS: false,\n    BUILD_SUPPORT: true,\n    CHANGE_TAG_EXPIRATION: true,\n    CLEAR_EXPIRED_RAC_ENTRIES: false,\n    DIRECT_LOGIN: true,\n    DISABLE_PULL_LOGS_FOR_FREE_NAMESPACES: false,\n    EXPORT_COMPLIANCE: false,\n    EXTENDED_REPOSITORY_NAMES: true,\n    FIPS: false,\n    GARBAGE_COLLECTION: true,\n    GENERAL_OCI_SUPPORT: true,\n    GITHUB_BUILD: false,\n    GITHUB_LOGIN: false,\n    GITLAB_BUILD: false,\n    GOOGLE_LOGIN: false,\n    HELM_OCI_SUPPORT: true,\n    INVITE_ONLY_USER_CREATION: false,\n    LIBRARY_SUPPORT: true,\n    LOG_EXPORT: true,\n    MAILING: false,\n    MANIFEST_SIZE_BACKFILL: true,\n    NAMESPACE_GARBAGE_COLLECTION: true,\n    NONSUPERUSER_TEAM_SYNCING_SETUP: false,\n    PARTIAL_USER_AUTOCOMPLETE: true,\n    PERMANENT_SESSIONS: true,\n    PROXY_CACHE: false,\n    PROXY_STORAGE: false,\n    PUBLIC_CATALOG: false,\n    QUOTA_MANAGEMENT: false,\n    RATE_LIMITS: false,\n    READER_BUILD_LOGS: false,\n    READONLY_APP_REGISTRY: false,\n    RECAPTCHA: false,\n    REPOSITORY_ACTION_COUNTER: true,\n    REPOSITORY_GARBAGE_COLLECTION: true,\n    REPO_MIRROR: false,\n    REQUIRE_ENCRYPTED_BASIC_AUTH: false,\n    REQUIRE_TEAM_INVITE: true,\n    RESTRICTED_V1_PUSH: false,\n    SECURITY_NOTIFICATIONS: true,\n    SECURITY_SCANNER: true,\n    SIGNING: false,\n    STORAGE_REPLICATION: false,\n    SUPER_USERS: true,\n    TEAM_SYNCING: false,\n    USERNAME_CONFIRMATION: true,\n    USER_CREATION: true,\n    USER_INITIALIZE: false,\n    USER_LAST_ACCESSED: true,\n    USER_LOG_ACCESS: false,\n    USER_METADATA: false,\n    USER_RENAME: false,\n  },\n  oauth: {\n    GITHUB_TRIGGER_CONFIG: {\n      AUTHORIZE_ENDPOINT: 'https://github.com/login/oauth/authorize',\n      CLIENT_ID: null,\n      GITHUB_ENDPOINT: 'https://github.com',\n      ORG_RESTRICT: false,\n    },\n    GITLAB_TRIGGER_CONFIG: {\n      AUTHORIZE_ENDPOINT: 'https://gitlab.com/oauth/authorize',\n      CLIENT_ID: null,\n      GITLAB_ENDPOINT: 'https://gitlab.com',\n    },\n  },\n  registry_state: 'normal',\n};\n\nmock.onGet('/config').reply((request: AxiosRequestConfig) => {\n  return [200, response];\n});\n","import {AxiosRequestConfig} from 'axios';\nimport {mock} from 'src/tests/fake-db/MockAxios';\n\nconst response = `<svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 348.09 97.57\"><defs><style>.cls-1{fill:#003764;}.cls-2{fill:#40b4e5;}</style></defs><title>quay</title><path class=\"cls-1\" d=\"M179.31,95.32a20.89,20.89,0,0,1-5.09,1.61,36.5,36.5,0,0,1-7.24.65q-11.15,0-18.82-5.14A31.66,31.66,0,0,1,136.73,79,29.79,29.79,0,0,1,126.6,74.9a27.88,27.88,0,0,1-7.78-7.56,35.26,35.26,0,0,1-4.94-10.67,49.31,49.31,0,0,1-1.72-13.46,46.86,46.86,0,0,1,2.3-15.28A31.62,31.62,0,0,1,121,16.67a27.84,27.84,0,0,1,10-7,35.81,35.81,0,0,1,25.85,0,27.57,27.57,0,0,1,10,7A32.21,32.21,0,0,1,173.34,28a46.52,46.52,0,0,1,2.31,15.17q0,14.16-6,23.27a28.08,28.08,0,0,1-16.19,12,12.93,12.93,0,0,0,6.65,5.09A26.38,26.38,0,0,0,168.8,85a22.8,22.8,0,0,0,4.24-.38,23.47,23.47,0,0,0,3.49-.91Zm-51-52.1q0,11.26,4.19,17.48a13.5,13.5,0,0,0,22.74,0q4.18-6.22,4.18-17.48,0-10.51-4.19-16.41a13.9,13.9,0,0,0-22.74,0Q128.36,32.7,128.36,43.21Z\"/><path class=\"cls-1\" d=\"M182.72,8.56h15.87V47.7q0,10.3,3.11,14.37t9,4.07q5.9,0,9.11-4.08t3.21-14.37V8.54h15.23V46.08q0,17.59-7,25.63t-20.54,8q-13.62,0-20.81-8t-7.19-25.63V8.56Z\"/><path class=\"cls-1\" d=\"M280.33,61.83H259L254.7,78.46H238.61L260.47,8.53h19l21.9,69.92H284.62ZM277.1,49.5l-1.61-6.43q-1.5-5.25-2.9-11.15T269.8,20.54h-0.43q-1.28,5.58-2.62,11.42t-2.84,11.1L262.2,49.5H277.1Z\"/><path class=\"cls-1\" d=\"M311.21,53.56l-21.14-45H307l6.23,16.08q1.5,4,2.84,7.67T318.93,40h0.43q1.5-4.07,2.95-7.78t2.95-7.67l6.32-16.09h16.52L327,53.56V78.44H311.22V53.56Z\"/><polygon class=\"cls-2\" points=\"75.13 0 95.99 44.12 75.13 88.23 57.38 88.23 78.23 44.12 57.38 0 75.13 0\"/><polygon class=\"cls-1\" points=\"57.38 88.23 36.52 44.12 57.38 0 75.13 0 54.28 44.12 75.13 88.23 57.38 88.23\"/><polygon class=\"cls-2\" points=\"47.99 19.85 38.61 0 20.86 0 39.12 38.63 47.99 19.85\"/><polygon class=\"cls-2\" points=\"39.12 49.6 20.86 88.23 38.61 88.23 47.99 68.38 39.12 49.6\"/><polygon class=\"cls-1\" points=\"20.86 88.23 0 44.12 20.86 0 38.61 0 17.75 44.12 38.61 88.23 20.86 88.23\"/></svg>`;\n\nmock\n  .onGet('/static/img/quay-horizontal-color.svg')\n  .reply((request: AxiosRequestConfig) => {\n    return [200, response];\n  });\n","import {mock} from '../../MockAxios';\n\nconst response = {\n  members: [\n    {\n      name: 'bdettelb',\n      kind: 'user',\n      avatar: {\n        name: 'bdettelb',\n        hash: 'c18bd4b51f59504fd53f594585d6fe3b',\n        color: '#aec7e8',\n        kind: 'user',\n      },\n      teams: [\n        {\n          name: 'owners',\n          avatar: {\n            name: 'owners',\n            hash: 'b132392a317588e56460e77a8fd74229',\n            color: '#1f77b4',\n            kind: 'team',\n          },\n        },\n        {\n          name: 'quay',\n          avatar: {\n            name: 'quay',\n            hash: 'a4499c24763a6dea853a657d5c52efab',\n            color: '#2ca02c',\n            kind: 'team',\n          },\n        },\n      ],\n      repositories: [],\n    },\n    {\n      name: 'doconnor',\n      kind: 'user',\n      avatar: {\n        name: 'doconnor',\n        hash: '0d035ab57477c5c088fb9b9039e9132c',\n        color: '#f7b6d2',\n        kind: 'user',\n      },\n      teams: [\n        {\n          name: 'owners',\n          avatar: {\n            name: 'owners',\n            hash: 'b132392a317588e56460e77a8fd74229',\n            color: '#1f77b4',\n            kind: 'team',\n          },\n        },\n        {\n          name: 'quay',\n          avatar: {\n            name: 'quay',\n            hash: 'a4499c24763a6dea853a657d5c52efab',\n            color: '#2ca02c',\n            kind: 'team',\n          },\n        },\n      ],\n      repositories: [],\n    },\n    {\n      name: 'sleesinc',\n      kind: 'user',\n      avatar: {\n        name: 'sleesinc',\n        hash: '27a1c473f8acc22c88905cc6cc03faec',\n        color: '#ff9896',\n        kind: 'user',\n      },\n      teams: [\n        {\n          name: 'quay',\n          avatar: {\n            name: 'quay',\n            hash: 'a4499c24763a6dea853a657d5c52efab',\n            color: '#2ca02c',\n            kind: 'team',\n          },\n        },\n      ],\n      repositories: ['python', 'quay-builder-qemu', 'quay-python3'],\n    },\n    {\n      name: 'hdonnay',\n      kind: 'user',\n      avatar: {\n        name: 'hdonnay',\n        hash: '84555da1e0d828f02ebb469a3fa07564',\n        color: '#2ca02c',\n        kind: 'user',\n      },\n      teams: [\n        {\n          name: 'quay',\n          avatar: {\n            name: 'quay',\n            hash: 'a4499c24763a6dea853a657d5c52efab',\n            color: '#2ca02c',\n            kind: 'team',\n          },\n        },\n      ],\n      repositories: ['clair', 'clair-fixtures'],\n    },\n    {\n      name: 'jonathankingfc',\n      kind: 'user',\n      avatar: {\n        name: 'jonathankingfc',\n        hash: 'fe0274e656bd0a810195fce234f1e17c',\n        color: '#e7ba52',\n        kind: 'user',\n      },\n      teams: [\n        {\n          name: 'quay',\n          avatar: {\n            name: 'quay',\n            hash: 'a4499c24763a6dea853a657d5c52efab',\n            color: '#2ca02c',\n            kind: 'team',\n          },\n        },\n      ],\n      repositories: [],\n    },\n    {\n      name: 'syed',\n      kind: 'user',\n      avatar: {\n        name: 'syed',\n        hash: 'd27486c531c5b7ec00bbec3865cea775',\n        color: '#17becf',\n        kind: 'user',\n      },\n      teams: [\n        {\n          name: 'quay',\n          avatar: {\n            name: 'quay',\n            hash: 'a4499c24763a6dea853a657d5c52efab',\n            color: '#2ca02c',\n            kind: 'team',\n          },\n        },\n      ],\n      repositories: ['quay-ui'],\n    },\n    {\n      name: 'harishg',\n      kind: 'user',\n      avatar: {\n        name: 'harishg',\n        hash: 'c35afb27219d19dd417c3a2c899eb041',\n        color: '#ffbb78',\n        kind: 'user',\n      },\n      teams: [\n        {\n          name: 'quay',\n          avatar: {\n            name: 'quay',\n            hash: 'a4499c24763a6dea853a657d5c52efab',\n            color: '#2ca02c',\n            kind: 'team',\n          },\n        },\n      ],\n      repositories: ['quay-alpha'],\n    },\n    {\n      name: 'fmissi',\n      kind: 'user',\n      avatar: {\n        name: 'fmissi',\n        hash: '98710663edc459a8708c43ba7ca8bae6',\n        color: '#9ecae1',\n        kind: 'user',\n      },\n      teams: [\n        {\n          name: 'quay',\n          avatar: {\n            name: 'quay',\n            hash: 'a4499c24763a6dea853a657d5c52efab',\n            color: '#2ca02c',\n            kind: 'team',\n          },\n        },\n      ],\n      repositories: ['quay-operator-bundle', 'quay-operator-index'],\n    },\n    {\n      name: 'sdadi0',\n      kind: 'user',\n      avatar: {\n        name: 'sdadi0',\n        hash: '568337640005bdf306261f49356b6bc6',\n        color: '#6b6ecf',\n        kind: 'user',\n      },\n      teams: [\n        {\n          name: 'quay',\n          avatar: {\n            name: 'quay',\n            hash: 'a4499c24763a6dea853a657d5c52efab',\n            color: '#2ca02c',\n            kind: 'team',\n          },\n        },\n      ],\n      repositories: [],\n    },\n    {\n      name: 'rh-obulatov',\n      kind: 'user',\n      avatar: {\n        name: 'rh-obulatov',\n        hash: 'd00e50e3d19d92e6fe75594f1419f696',\n        color: '#bcbd22',\n        kind: 'user',\n      },\n      teams: [\n        {\n          name: 'quay',\n          avatar: {\n            name: 'quay',\n            hash: 'a4499c24763a6dea853a657d5c52efab',\n            color: '#2ca02c',\n            kind: 'team',\n          },\n        },\n      ],\n      repositories: ['quay-ci-app'],\n    },\n    {\n      name: 'bcaton',\n      kind: 'user',\n      avatar: {\n        name: 'bcaton',\n        hash: 'bc26239130668309488b9dc4a11b2713',\n        color: '#8c6d31',\n        kind: 'user',\n      },\n      teams: [\n        {\n          name: 'quay',\n          avatar: {\n            name: 'quay',\n            hash: 'a4499c24763a6dea853a657d5c52efab',\n            color: '#2ca02c',\n            kind: 'team',\n          },\n        },\n      ],\n      repositories: [],\n    },\n  ],\n};\n\nconst membersPathRegex = new RegExp(`/api/v1/organization/.+/members$`);\nmock.onGet(membersPathRegex).reply(() => {\n  return [200, response];\n});\n","import {mock} from '../../MockAxios';\n\nconst response = {\n  robots: [\n    {\n      name: 'projectquay+claircore_github',\n      created: 'Mon, 10 May 2021 14:29:36 -0000',\n      last_accessed: null,\n      teams: [],\n      repositories: ['clair', 'golang'],\n      description: '',\n    },\n    {\n      name: 'projectquay+clair_github',\n      created: 'Thu, 26 Mar 2020 13:46:33 -0000',\n      last_accessed: null,\n      teams: [],\n      repositories: ['clair'],\n      description: \"Token for clair's Github Actions\",\n    },\n    {\n      name: 'projectquay+jzmeskal',\n      created: 'Wed, 20 Jan 2021 22:36:49 -0000',\n      last_accessed: null,\n      teams: [],\n      repositories: ['golang'],\n      description: 'Robot account for jzmeskal to hack around with.',\n    },\n    {\n      name: 'projectquay+quay_builder_qemu_token',\n      created: 'Tue, 01 Mar 2022 20:47:10 -0000',\n      last_accessed: null,\n      teams: [],\n      repositories: ['quay-builder-qemu'],\n      description: 'For pushes of quay-builder-qemu image',\n    },\n    {\n      name: 'projectquay+quay_ci_app_github',\n      created: 'Tue, 26 Apr 2022 12:46:39 -0000',\n      last_accessed: null,\n      teams: [],\n      repositories: ['quay-ci-app'],\n      description: \"Token for quay-ci-app's GitHub Actions\",\n    },\n    {\n      name: 'projectquay+quay_github',\n      created: 'Wed, 07 Apr 2021 21:43:08 -0000',\n      last_accessed: null,\n      teams: [],\n      repositories: [\n        'quay',\n        'quay-builder',\n        'quay-operator',\n        'quay-operator-catalog',\n        'quay-operator-index',\n        'quay-operator-bundle',\n        'quay-builder-qemu',\n        'quay-ui',\n      ],\n      description: \"Token for quay's Github Actions\",\n    },\n  ],\n};\n\nconst robotsPathRegex = new RegExp(\n  `/api/v1/organization/.+/robots\\\\?permissions=true&token=false`,\n);\nmock.onGet(robotsPathRegex).reply(() => {\n  return [200, response];\n});\n","import {mock} from '../../MockAxios';\nimport {AxiosRequestConfig} from 'axios';\n\nconst response = {\n  name: 'projectquay',\n  email: 'quay-devel+projectquay@redhat.com',\n  avatar: {\n    name: 'projectquay',\n    hash: 'f203c4cdecd4445765750deafa7d589d',\n    color: '#17becf',\n    kind: 'user',\n  },\n  is_admin: true,\n  is_member: true,\n  teams: {\n    owners: {\n      name: 'owners',\n      description: '',\n      role: 'admin',\n      avatar: {\n        name: 'owners',\n        hash: 'b132392a317588e56460e77a8fd74229',\n        color: '#1f77b4',\n        kind: 'team',\n      },\n      can_view: true,\n      repo_count: 0,\n      member_count: 2,\n      is_synced: false,\n    },\n    quay: {\n      name: 'quay',\n      description: 'Quay dev team',\n      role: 'admin',\n      avatar: {\n        name: 'quay',\n        hash: 'a4499c24763a6dea853a657d5c52efab',\n        color: '#2ca02c',\n        kind: 'team',\n      },\n      can_view: true,\n      repo_count: 6,\n      member_count: 11,\n      is_synced: false,\n    },\n  },\n  ordered_teams: ['owners', 'quay'],\n  invoice_email: false,\n  invoice_email_address: null,\n  tag_expiration_s: 1209600,\n  is_free_account: true,\n};\n\nconst createOrgSuccessResponse = {\n  success: true,\n};\n\nconst orgPathRegex = new RegExp(`/api/v1/organization/(.+)$`);\nmock.onGet(orgPathRegex).reply((config) => {\n  const orgNameMatch = config.url.match(orgPathRegex);\n  if (orgNameMatch && orgNameMatch.length > 1) {\n    response.name = orgNameMatch[1];\n  }\n\n  return [200, response];\n});\n\nmock.onPost('/api/v1/organization/').reply((request: AxiosRequestConfig) => {\n  const {name, email} = JSON.parse(request.data);\n  return [201, createOrgSuccessResponse];\n});\n\nconst superUserOrgsResponse = {\n  organizations: [\n    {\n      name: 'superuserorg1',\n    },\n    {\n      name: 'superuserorg2',\n    },\n  ],\n};\n\nmock.onGet(`/api/v1/superuser/organizations/`).reply((config) => {\n  return [200, superUserOrgsResponse];\n});\n","import {mock} from './MockAxios';\n\nimport './data/login/login';\n\nimport './data/user/robots';\nimport './data/user/user';\nimport './data/repository/security';\n\nimport './data/tag/tag';\nimport './data/tag/labels';\nimport './data/tag/manifest';\n\nimport './data/repository/repository';\n\nimport './data/config/config';\nimport './data/config/logo';\n\n// Order matters here. We match with more specific API endpoints first\nimport './data/organization/members';\nimport './data/organization/robots';\nimport './data/organization/organization';\n\nmock.onAny().passThrough();\n"],"names":["___CSS_LOADER_EXPORT___","push","module","id","options","styleTagTransform","setAttributes","insert","domAPI","insertStyleElement","AxiosErrorCode","message","responses","Map","Object","setPrototypeOf","BulkOperationError","prototype","addError","key","error","this","set","getErrors","Error","resource","ResourceError","throwIfError","errResponses","filter","r","status","length","bulkDeleteError","reason","addDisplayError","errorDetails","AxiosError","values","includes","code","ERR_FR_TOO_MANY_REDIRECTS","ERR_NETWORK","ERR_CANCELED","ECONNABORTED","ETIMEDOUT","getNetworkError","response","data","error_message","getErrorMessage","got","expected","isErrorString","err","GlobalAuthState","isLoggedIn","csrfToken","bearerToken","getUser","username","getOrganization","orgName","process","env","MOCK_API","csrf_token","axiosIns","interceptors","request","use","config","window","insights","chrome","auth","getToken","headers","location","href","VulnerabilitySeverity","VulnerabilityOrder","Critical","High","Medium","Low","Negligible","Unknown","getTags","org","repo","page","limit","specificTag","path","concat","getLabels","digest","bulkDeleteTags","tags","Promise","allSettled","map","tag","TagDeleteError","deleteTag","getManifestByDigest","getSecurityDetails","getSeverityColor","severity","None","formatDate","date","Date","toLocaleString","timeZone","Intl","DateTimeFormat","resolvedOptions","timeStyle","dateStyle","formatSize","sizeInBytes","i","Math","floor","log","pow","toFixed","isValidEmail","email","test","parseRepoNameFromUrl","url","urlParts","split","repoKeywordIndex","indexOf","parseOrgNameFromUrl","FormError","props","Alert","isInline","actionClose","AlertActionCloseButton","onClose","setErr","variant","title","fetchOrg","orgname","signal","getOrgUrl","fetchOrgsAsSuperUser","organizations","OrgDeleteError","bulkDeleteOrganizations","orgs","isSuperUser","deleteApiUrl","deleteOrg","createOrg","name","reqBody","defaultMessage","isValid","type","CreateOrganizationModal","useState","organizationName","setOrganizationName","organizationEmail","setOrganizationEmail","invalidEmailFlag","setInvalidEmailFlag","validation","setValidation","createOrganization","onSuccess","onError","queryClient","createOrganizationMutator","useMutation","invalidateQueries","mutate","useCreateOrganization","handleModalToggle","Modal","ModalVariant","isOpen","isModalOpen","actions","Button","onClick","form","isDisabled","Form","isWidthLimited","FormGroup","label","isRequired","fieldId","helperText","helperTextInvalid","validated","TextInput","value","onChange","onBlur","selectedOrgsState","default","query","field","fetchMembersForOrg","getMembersUrl","members","robotName","RobotDeleteError","fetchRobotsForNamespace","isUser","userOrOrgPath","getRobotsUrl","robots","addDefaultPermsForRobot","robotname","permission","robotNameWithOrg","updatePermsUrl","payload","delegate","kind","is_robot","role","toLowerCase","updateRepoPermsForRobot","reponame","bulkUpdateRepoPermsForRobot","repoPerms","repoPerm","repository_name","bulkDeleteRepoPermsForRobot","repoNames","repoName","deletePermsUrl","deleteRepoPermsForRobot","createNewRobotForNamespace","description","reposToUpdate","selectedTeams","robotDefaultPerm","namespacePath","createOrgRobotsUrl","bulkDeleteRobotAccounts","robotaccounts","robot","replace","deleteUrl","deleteRobotAccount","regenerateRobotToken","RepoRole","MemberType","fetchRepositoriesForNamespace","ns","next_page_token","next_page","repos","repositories","resp","createNewRepository","namespace","repository","visibility","repo_kind","setRepositoryVisibility","repositoryName","api","bulkDeleteRepositories","RepoDeleteError","deleteRepository","bulkSetRepoPermissions","roles","newRole","user","setRepoPermissions","bulkDeleteRepoPermissions","roleType","deleteRepoPermissions","fetchUser","fetchUsersAsSuperUser","users","getMemberType","entity","team","fetchEntities","search","splitSearchTerm","results","updateUser","fetchQuayConfig","useQuayConfig","useQuery","staleTime","Infinity","useCurrentUser","loading","features","SUPERUSERS_FULL_ACCESS","super_user","RepositoryListColumnNames","RobotAccountColumnNames","useRepositories","organization","setPage","perPage","setPerPage","setSearch","currentOrganization","setCurrentOrganization","listOfOrgNames","queryKey","keepPreviousData","placeholderData","queryFn","namespaces","flatten","all","namespacedRepos","reduce","allRepos","fetchAllRepos","isPlaceholderData","totalResults","Count","count","Skeleton","width","RepoLastModifiedDate","lastModifiedDate","OrgTableData","teamCountVal","enabled","undefined","memberCount","robotCount","repoCount","prev","curr","last_modified","teams","keys","toString","Td","dataLabel","Link","to","ToolbarPagination","ToolbarItem","Pagination","perPageComponent","itemCount","total","itemsList","onSetPage","_event","pageNumber","onPerPageSelect","perPageNumber","widgetId","bottom","PaginationVariant","BulkDeleteModalTemplate","selectedItems","itemsMarkedForDelete","setItemsMarkedForDelete","colNames","mapOfColNamesToTableData","confirmDeletionInput","setConfirmDeletionInput","searchInput","setSearchInput","bulkModalPerPage","setBulkModalPerPage","bulkModalPage","setBulkModalPage","paginatedBulkItemsList","slice","useEffect","applyTransformFuncIfGiven","item","transformFunc","resourceName","titleIconVariant","handleBulkDeletion","PageSection","PageSectionVariants","Toolbar","ToolbarContent","placeholder","iconVariant","filteredTableRow","TableComposable","Thead","Tr","idx","Th","Tbody","index","RequestError","EmptyState","EmptyStateIcon","icon","Title","headingLevel","size","EmptyStateBody","reload","DropdownCheckbox","setIsOpen","deSelectAll","selectPageItems","itemsPerPageList","onItemSelect","dropdownItems","DropdownItem","component","allItemsList","Dropdown","toggle","DropdownToggle","splitButtonItems","DropdownToggleCheckbox","isChecked","checked","onToggle","SearchDropdown","items","console","setSearchState","spacer","onSelect","document","getElementById","focus","searchState","SearchInput","val","trim","ToolbarButton","setModalOpen","buttonValue","Kebab","setKebabOpen","isKebabOpen","useActions","KebabToggle","kebabItems","isPlain","OrganizationToolBar","selectedOrganization","setSelectedOrganization","organizationsList","paginatedOrganizationsList","onSelectOrganization","createOrgModal","isOrganizationModalOpen","setOrganizationModalOpen","deleteKebabIsOpen","deleteModal","Empty","style","paddingBottom","body","button","persistAtom","BrowserHistoryState","effects_UNSTABLE","QuayBreadcrumb","browserHistory","setBrowserHistoryState","breadcrumbItems","setBreadcrumbItems","routerBreadcrumbs","NavigationRoutes","disableDefaults","excludePaths","urlParams","useParams","fetchRepoName","route","re","RegExp","match","buildBreadCrumbFromPrevRoute","object","prevObj","pathname","localeCompare","result","history","newItem","lastItem","Component","currentBreadcrumbItem","Array","from","newObj","children","buildFromBrowserHistory","prevItem","buildFromRoute","PageBreadcrumb","Breadcrumb","BreadcrumbItem","render","className","active","LoadingPage","Bullseye","Spinner","primaryAction","EmptyStateSecondaryActions","secondaryActions","ErrorModal","isArray","e","color","position","setError","RepoCount","setValue","useOrganizations","orgnames","usernames","superUserOrganizations","superUserUsers","x","organizationsTableDetails","deleteOrganizationMutator","names","deleteOrganizations","OrgListHeader","OrganizationsList","deleteModalIsOpen","setDeleteModalIsOpen","filteredOrgs","isOrgSelectable","setOrganizationChecked","isSelecting","prevSelected","otherSelectedOrganizationNames","recentSelectedRowIndex","setRecentSelectedRowIndex","shifting","setShifting","rowIndex","numberSelected","_x","abs","forEach","deleteOrganizationsMutator","useDeleteOrganizations","Organization","some","selectedOrg","onKeyDown","onKeyUp","addEventListener","removeEventListener","select","isSelected","disable","PanelFooter","visibilityType","CreateRepositoryModalTemplate","userSelection","orgsSelectionList","quayConfig","isDropdownOpen","createRepository","createRepositoryMutator","params","useCreateRepository","validationState","setValidationState","newRepository","setNewRepository","PUBLIC","repoVisibility","setrepoVisibility","nameInputRef","useRef","validNamespace","validRepo","maxWidth","Flex","FlexItem","helperTextInvalidIcon","Select","SelectVariant","prevState","maxHeight","placeholderText","selections","SelectOption","regex","EXTENDED_REPOSITORY_NAMES","ref","Radio","PRIVATE","selectedReposState","searchRepoState","selectedReposPermissionState","ConfirmationModal","modalOpen","toggleModal","makePublic","repoArray","join","selectAllRepos","buttonText","RepositoryToolBar","fetchConfirmationModalText","selectedRepoNames","setSelectedRepoNames","repositoryList","paginatedRepositoryList","onSelectRepo","pageModal","makePublicModalOpen","toggleMakePublicClick","makePrivateModalOpen","toggleMakePrivateClick","useDeleteRepositories","deleteRepositoriesMutator","deleteRepositories","RepoListHeader","shouldRender","hasShadowBottom","RepositoriesList","currentOrg","isCreateRepoModalOpen","setCreateRepoModalOpen","setmakePublicModal","setmakePrivateModal","useLocation","sort","r1","r2","is_public","quota_report","quota_bytes","filteredRepos","isRepoSelectable","isRepoSelected","otherSelectedRepoNames","setRepoSelected","isDeleteModalOpen","setDeleteModalOpen","handleDeleteModalToggle","Repository","Visibility","Size","createRepoModal","updateListHandler","deleteRepositoryModal","selected","showPageButton","QUOTA_MANAGEMENT","getRepoDetailPath","GeneralSettings","isUserOrganization","fill","isLoading","useOrganization","timeMachineOptions","timeMachineFormValue","setTimeMachineFormValue","emailFormValue","setEmailFormValue","FormSelect","option","FormSelectOption","ActionGroup","justifyContent","Settings","activeTabIndex","setActiveTabIndex","tabs","content","flexWrap","Tabs","activeKey","event","tabIndex","isVertical","tab","Tab","eventKey","TabTitleText","alignSelf","padding","at","selectedRobotAccountsState","searchRobotAccountState","selectedRobotDefaultPermission","selectedRobotReposState","selectedRobotReposPermissionState","FilterInput","onClear","ExpandCollapseButton","tableMode","setTableMode","onTableModeChange","_isSelected","currentTarget","expandTable","collapseTable","ToggleGroup","ToggleGroupItem","text","buttonId","BulkDelete","setClicked","RobotAccountsToolBar","setSelectedRobotAccounts","NameAndDescription","validatedName","setValidatedName","nameHelperText","setNameHelperText","validateName","nameLabel","setName","descriptionLabel","robotDescription","setDescription","createNewTeamForNamespac","createTeamUrl","updateTeamForRobot","teamName","useRobotAccounts","setNamespace","robotAccountsForOrg","createRobotAccountMutator","addDefaultPermsForRobotMutator","updateRepoPermsForRobotMutator","updateTeamsForRobotMutator","teamname","createNewRobot","updateTeamsForRobot","Footer","isDrawerExpanded","WizardFooter","WizardContextConsumer","activeStep","onNext","onBack","isDataValid","onSubmit","ToggleDrawer","drawerRef","panelContent","DrawerPanelContent","colorVariant","DrawerColorVariant","DrawerHead","isExpanded","drawerpanelContent","DrawerActions","DrawerCloseButton","setIsExpanded","Drawer","onExpand","current","DrawerContent","selectedTeamsState","searchTeamState","FilterWithDropdown","searchInputText","TeamView","tableItems","setTableItems","setSearchInputText","filteredItems","paginatedItems","isItemSelected","onSelectItem","setSelectedTeams","otherSelectedItems","setItemSelected","showCheckbox","filterWithDropdown","member_count","last_updated","AddToTeam","newTeamName","setNewTeamName","newTeamDescription","setNewTeamDescription","createNewTeamHook","createTeamMutator","useTeams","setDrawerExpanded","validateTeamName","then","TextContent","Text","TextVariants","showToggleGroup","defaultUnSelectedVal","DropdownWithDescription","dropdownToggle","setDropdownToggle","dropdownOnSelect","userEntry","wizarStep","setUserEntry","OnRowSelect","selectedVal","isUserEntry","AddToRepository","robotRepoPermsMapping","setRobotRepoPermsMapping","updatedRepoPerms","setUpdatedRepoPerms","selectedRepos","setSelectedRepos","updateTable","robotPermissions","temp","charAt","toUpperCase","newItems","assign","updateRepoPerms","wizardStep","setSelectedRepoPerms","selectedRepoPerms","newPerms","tempItem","updateRobotAccountsList","fetchRepoPermission","setTimeout","setShowRepoModalSave","setPrevRepoPerms","setNewRepoPerms","DefaultPermissions","disabled","repoPermissions","setRobotdefaultPerm","ReviewAndFinish","robotdefaultPerm","fetchDefaultPerms","CreateRobotAccountModal","setRobotName","setrobotDescription","setLoading","validateRobotName","steps","RepoPermissionDropdownItems","showClose","hasNoBodyWrapper","Wizard","titleId","descriptionId","height","footer","hasNoBodyPadding","RobotAccountKebab","robotAccount","setSelectedRobotAccount","onSetRepoPermsClick","robotAccountRepos","DropdownPosition","useDeleteRobotAccounts","deleteRobotAccountsMutator","robotacounts","deleteRobotAccounts","DisplayModal","setIsModalOpen","footerWithoutSave","footerWithSave","onSave","showSave","RobotRepositoryPermissions","setRobotPermissions","resetRobotPermissions","useImperativeHandle","robotPermissionsPlaceholder","robName","getRobotPermsUrl","permissions","fetchRobotPermissionsForNamespace","deleteRepoPermsMutator","updateRepoPermsMutator","deleteRepoPerms","useRobotPermissions","fetchingRobotPerms","useRobotToken","getRobotTokenUrl","fetchRobotAccountToken","robotAccountToken","regenerateRobotTokenMutator","regenerateRobotTokenParams","EmptyRobotToken","created","last_accessed","token","unstructured_metadata","RobotTokensModal","activeTabKey","setActiveTabKey","isSecretExpanded","setSecretExpanded","tokenData","setTokenData","domain","SERVER_HOSTNAME","getSuffixedFilename","suffix","escaped","getKubernetesSecretName","getKubernetesContent","auths","dockerConfigJson","JSON","stringify","kubesClusterCmd","TabTitleIcon","ClipboardCopy","hoverTip","clickTip","isReadOnly","src","Grid","GridItem","span","rowSpan","filename","fileContent","blob","Blob","element","createElement","URL","createObjectURL","download","click","downloadFile","ExpandableSectionToggle","contentId","ExpandableSection","isDetached","TextArea","autoResize","isCode","ClipboardCopyVariant","EmptyRobotAccount","RobotAccountsList","selectedReposForModalView","setSelectedReposForModalView","isCreateRobotModalOpen","setCreateRobotModalOpen","isTableExpanded","setTableExpanded","isTeamsModalOpen","setTeamsModalOpen","teamsViewItems","setTeamsViewItems","isReposModalOpen","setReposModalOpen","robotRepos","setRobotRepos","setTeams","robotForDeletion","setRobotForDeletion","robotForModalView","setRobotForModalView","isTokenModalOpen","setTokenModalOpen","prevRepoPerms","showRepoModalSave","newRepoPerms","errTitle","setErrTitle","robotAccountsList","getQueryData","filteredRobotAccounts","paginatedRobotAccountList","expandedRobotNames","setExpandedRobotNames","setRobotExpanded","isExpanding","prevExpanded","otherExpandedRepoNames","isRobotExpanded","selectedRobotAccounts","fetchBulKUpdateErrorMsg","msg","errMessages","useRobotRepoPermissions","onSelectRobot","otherSelectedRobotNames","setRobotAccountsSelected","fetchReposModal","fetchTeamsModal","getLength","list","len","single_placeholder","RobotAccount","handleBulkDeleteModalToggle","bulkDeleteRobotAccountModal","createRobotModal","borders","colSpan","textCenter","diameter","toUpdate","toDelete","updateRepoPermissions","modifier","expand","rob","fetchTokensModal","noPadding","ExpandableRowContent","useSearchParams","searchParams","setSearchParams","get","onTabSelect","useCallback","tabKey","repositoriesSubNav","Page","nav","searchTagsState","searchTagsFilterState","manifest_digest","selectedTagsState","currentOpenPopoverState","DeleteModal","isReadonly","repoDetails","state","selectedTags","disableFocusTrap","loadTags","setSelectedTags","Label","TagsToolbar","TagList","paginatedTags","selectTag","TabIndex","TablePopover","currentOpenPopover","setCurrentOpenPopover","Popover","isVisible","shouldClose","headerContent","onMouseLeave","bodyContent","fontWeight","onMouseEnter","Variant","SecurityDetailsState","SecurityDetailsErrorState","SecurityDetails","setStatus","hasFeatures","setHasFeatures","vulnCount","setVulnCount","setGlobalErr","setGlobalData","severityOrder","securityDetails","vulns","cacheResults","Layer","Features","feature","Vulnerabilities","vuln","Severity","has","queryParams","SecurityReport","getTagDetailPath","textDecoration","marginRight","marginBottom","condensed","highestSeverity","getHighestSeverity","counts","ImageSize","setSize","manifestResp","calculatedSizeMesnifestResp","layers","compressed_size","SubRow","isTagExpanded","manifest","platform","os","architecture","substring","TagsTableRow","manifest_list","emptySecurityDetails","is_manifest_list","setTagExpanded","expiration","manifests","TagsTable","expandedTags","setExpandedTags","otherExpandedtagNames","isSVG","hasError","fallback","getDerivedStateFromError","TagsList","setTags","resetSelectedTags","searchFilter","resetSearch","filteredTags","otherSelectedtagNames","getManifest","parse","manifest_data","hasAdditional","currentTags","has_additional","tagCount","selectAllTags","t","Conditional","if","PermissionsColumnNames","NotificationsColumnNames","DeleteRepository","repoNameInput","setRepoNameInput","isError","setIsError","navigate","useNavigate","DrawerContentType","Menu","menuRef","toggleRef","containerRef","handleMenuKeys","contains","target","handleClickOutside","Popper","trigger","MenuToggle","ev","stopPropagation","firstElement","querySelector","popper","containsFlyout","MenuList","appendTo","popperMatchesTriggerWidth","useUpdateRepositoryPermissions","_","variables","setPermissions","errorSetPermissions","successSetPermissions","resetSetRepoPermissions","deletePermissions","errorDeletePermissions","successDeletePermissions","resetDeleteRepoPermissions","read","write","admin","ChangePermissions","success","deselectAll","setIsMenuOpen","AlertGroup","isToast","isLiveRegion","MenuItem","flyoutMenu","MenuContent","itemId","Delete","PermissionsToolbar","isMenuOpen","allItems","searchOptions","setDrawerContent","AddPermission","PermissionsDropdown","member","PermissionsKebab","EntityIcon","includeIcon","includeText","Permissions","account","fetchUserRepoPermissions","userRoles","errorLoadingUserRoles","loadingUserRoles","isUserPlaceholderData","fetchTeamRepoPermissions","teamRoles","errorLoadingTeamRoles","loadingTeamRoles","isTeamPlaceholderData","entries","roleData","filteredMembers","paginatedMembers","useRepositoryPermissions","selectedMembers","setSelectedMembers","onSelectMember","others","ReadonlySecret","secretHidden","setSecretHidden","direction","InputGroup","secret","backgroundColor","paddingRight","cursor","paddingLeft","NotificationEventType","NotificationMethodType","createNotification","notification","notificationRequest","eventConfig","event_config","bulkDeleteNotifications","uuids","uuid","deleteNotification","testNotification","bulkEnableNotifications","enableNotification","isNotificationDisabled","number_of_failures","isNotificationEnabled","useEvents","events","repoPush","vulnFound","SECURITY_SCANNER","buildFailure","BUILD_SUPPORT","buildQueued","buildStart","buildSuccess","buildCancelled","mirrorStarted","REPO_MIRROR","mirrorSuccess","mirrorFailed","useNotificationMethods","notificationMethods","MAILING","flowdock","hipchat","quaynotification","REGISTRY_TITLE_SHORT","slack","webhook","NotifiationStatus","useUpdateNotifications","create","errorCreatingNotification","successCreatingNotification","resetCreatingNotification","removeNotification","errorDeletingNotification","successDeletingNotification","resetDeletingNotification","errorTestingNotification","successTestingNotification","resetTestingNotification","enable","errorEnablingNotification","successEnablingNotification","resetEnablingNotification","errorCreationMessage","detail","deleteNotifications","enableNotifications","NotificationsKebab","isTestModalOpen","setIsTestModalOpen","NotificationsFilter","selectStatus","setFilter","f","Checkbox","selectEvent","NotificationsFilterChips","deleteFilter","category","chip","ToolbarFilter","chips","deleteChip","deleteChipGroup","resetFilter","categoryName","Actions","notificationsToEnable","n","NotificationsToolbar","clearAllFilters","ToolbarGroup","CreateNotification","Notifications","selectedNotifications","setSelectedNotifications","expandedUuids","setExpandedUuids","notifications","fetchNotifications","filteredNotifications","showEnabled","showDisabled","paginatedNotifications","useNotifications","onSelectNotification","u","EventTitle","NotificationTitle","NotificationStatus","NotificationConfig","find","fontSize","notificationMethod","m","method","flow_api_token","room_id","notification_token","template","fetchSubscription","setSubscription","plan","fetchCard","card","setVisibility","useRepositoryVisibility","loadingSetVisibility","isOrg","plans","fetchPlans","BILLING","loadingPlans","errorFetchingPlans","fetchPrivateAllowed","privateAllowed","loadingPrivateAllowed","errorFetchingPrivateAllowed","planRequired","maxPrivateCountReached","privateCount","p","deprecated","stripeId","bus_features","privateRepos","upgrade","currentSubscription","reuseCard","currentPlan","price","cardInfo","updateSubscription","last4","StripeCheckout","open","STRIPE_PUBLISHABLE_KEY","amount","currency","panelLabel","billingAddress","zipCode","errorFetchingPlanData","errorUpdatingSubscription","reset","useUpgradePlan","is_organization","publicRepoDescription","useEntities","searchTerm","setSearchTerm","entities","setEntities","entityResults","clearTimeout","isLoadingEntities","EntitySearch","filteredEntity","selectedEntity","toggleId","onTypeaheadInputChanged","shouldResetOnSelect","loadingVariant","AddPermissions","isPermissionOpen","setIsPermissionOpen","setRole","setSelectedEntity","errorFetchingEntities","setErrorFetchingEntities","errorSettingPermissions","closeDrawer","required","fetchAuthorizedEmail","sendAuthorizedEmail","useAuthorizedEmails","pollEmail","setPollEmail","emailConfirmed","setEmailConfirmed","polling","stopPolling","errorPolling","refetchInterval","emailData","confirmed","sendEmail","errorSendingEmail","successSendingEmail","startPolling","resetEmailConfirmed","successSendingAuthorizedEmail","errorSendingAuthorizedEmail","resetSendAuthorizationEmail","CreateEmailNotification","setTitle","setEmail","isEmailAuthModalOpen","setIsEmailAuthModalOpen","isFormComplete","emailStatus","CreateFlowdockNotification","apiTopken","setAPIToken","CreateHipchatNotification","roomId","setRoomId","setToken","isValidRoomId","CreateQuayNotification","CreateSlackNotification","setUrl","isValidWebhookURL","CreateWebhookNotification","jsonBody","setJsonBody","isValidURL","startsWith","isEventOpen","setIsEventOpen","isMethodOpen","setIsMethodOpen","setEvent","setMethod","RepositoryDetails","Tags","drawerContent","fetchRepositoryDetails","errorLoadingRepoDetails","useRepository","requestedTabIndex","getTabIndex","drawerContentOptions","DrawerContentBody","isHidden","UI_V2_REPO_SETTINGS","can_admin","ArchSelect","isSelectOpen","setIsSelectOpen","setDigest","CopyTags","DescriptionList","DescriptionListGroup","DescriptionListTerm","DescriptionListDescription","labels","setLabels","labelsResp","columnModifier","start_ts","Divider","getSeverityIcon","SecurityReportMetadataTable","vulnerability","distro","Metadata","DistroName","NamespaceName","getDistro","NVD","CVSSv3","Score","cellPadding","marginWidth","Vectors","vector","NVD_VECTORS","vectorType","vectorValue","Description","AV","AC","PR","UI","S","C","I","A","E","RL","RC","CR","IR","AR","MAV","MAC","MPR","MUI","MS","MC","MI","MA","SecurityReportFilter","isFixedOnlyChecked","setIsFixedOnlyChecked","filterVulnList","fixedOnlyChecked","vulnList","PackageName","Advisory","FixedInVersion","onSearchTermChanged","newSearchTerm","setFilteredVulnList","evt","columnNames","VulnSeverityOrder","getVulnerabilityLink","TableTitle","setVulnList","filteredVulnList","activeSortIndex","setActiveSortIndex","activeSortDirection","setActiveSortDirection","paginatedVulns","sortVulnerabilities","sortIndex","prevVulnList","a","b","aValue","getSortableRowValues","bValue","expandedVulnKeys","setExpandedVulnKeys","isRepoExpanded","Name","CurrentVersion","Version","FixedBy","sortBy","onSort","columnIndex","uniqueKey","hashInput","RepoName","generateUniqueKey","otherExpandedKeys","k","rel","marginLeft","VulnerabilitySummary","stats","patchesMessage","patchesAvailable","TitleSizes","vulnLevel","VulnerabilityChart","Pending","shape","ChartDonut","ariaDesc","ariaTitle","constrainToVisibleArea","y","colorScale","datum","SecurityReportChart","Split","SplitItem","QueuedState","FailedState","UnsupportedState","PackagesSummary","packagesMessage","availableMessage","PackagesDonutChart","PackagesChart","totalPackages","totalPackagesPerSeverity","perPackageVulnStats","PackagesFilter","setFilteredPackageList","packagesList","filterPackagesList","getVulnerabilitiesCount","vulnerabilities","after_fix","currentVuln","getHighestVulnerabilitySeverity","TableHead","VulnerabilitiesEntry","v","remaining","PackagesTable","setPackagesList","filteredPackagesList","setFilteredPackagesList","paginatedPackagList","VulnerabilityCounts","HighestVulnerabilitySeverity","VulnerabilityCountsAfterFix","HighestVulnerabilitySeverityAfterFix","sortedPackagesList","p1","p2","sortPackages","pkg","Packages","TagTabs","Details","TagDetails","tagKeywordIndex","resetSecurityDetails","resetSecurityError","reversion","schemaVersion","mediaType","tagDetails","setTagDetails","tagResp","currentDigest","NavigationPath","organizationsListBreadcrumb","repositoriesListBreadcrumb","organizationDetailBreadcrumb","repositoryDetailBreadcrumb","tagDetailBreadcrumb","tagName","currentRoute","repoPath","repositoryDetail","domainRoute","tagPath","tagDetail","entry","definedRoute","breadcrumb","organizationDetail","repositoriesList","NotFound","IsPluginState","CreateNewUser","setUsername","validatedUsername","setValidatedUsername","setHelperText","NewUserEmptyPage","EmptyStateVariant","setCreateUserModalOpen","PluginMain","useChrome","isProd","setIsPluginState","isConfirmUserModalOpen","setConfirmUserModalOpen","REGISTRY_TITLE","prompts","Banner","spaceItems","Routes","Route","Navigate","Outlet","PluginMainRoot","useMemo","defaultOptions","queries","retry","refetchOnWindowFocus","QueryClientProvider","client","mock","csrfResponse","onPost","reply","onGet","robotsPathRegex","anonymous","avatar","hash","can_create_repo","is_me","verified","logins","service","service_identifier","metadata","service_username","invoice_email","invoice_email_address","preferred_namespace","tag_expiration_s","company","family_name","given_name","is_free_account","has_password_set","public","is_org_admin","superUserUsersResponse","noSeverityFeatures","VersionFormat","AddedBy","highSeverityFeatures","UpdatedBy","RepoLink","DistroVersion","mockResponseMixedVulns","ParentName","IndexedByVersion","RepoLin","mockResponseNoVulns","mockResponseHighVulns","mockResponseQueued","specificTagPathRegex","URLSearchParams","tagPathRegex","deleteTagRegex","onDelete","pop","labelsResponse","source_type","media_type","manifestPathRegex","manifestResponse","baseURL","user1","configured_quota","popularity","is_starred","quay","projectquay","testorg","successResponse","repoDetailsPathRegex","visibilityPathRegex","splitUrl","requestedRepo","repoIndex","findIndex","deleteRepoRegex","account_recovery_mode","AUTHENTICATION_TYPE","AVATAR_KIND","BRANDING","footer_img","footer_url","logo","CHANNEL_COLORS","CONTACT_INFO","DEBUG","DOCUMENTATION_ROOT","ENTERPRISE_LOGO_URL","FEATURE_PROXY_CACHE","FEATURE_QUOTA_MANAGEMENT","FEATURE_REPO_MIRROR","LOCAL_OAUTH_HANDLER","PREFERRED_URL_SCHEME","RECAPTCHA_SITE_KEY","SEARCH_MAX_RESULT_PAGE_COUNT","SEARCH_RESULTS_PER_PAGE","SENTRY_PUBLIC_DSN","SETUP_COMPLETE","STATIC_SITE_BUCKET","TAG_EXPIRATION_OPTIONS","external_login","ACTION_LOG_ROTATION","ADVERTISE_V2","AGGREGATED_LOG_COUNT_RETRIEVAL","ANONYMOUS_ACCESS","APP_REGISTRY","APP_SPECIFIC_TOKENS","BITBUCKET_BUILD","BLACKLISTED_EMAILS","CHANGE_TAG_EXPIRATION","CLEAR_EXPIRED_RAC_ENTRIES","DIRECT_LOGIN","DISABLE_PULL_LOGS_FOR_FREE_NAMESPACES","EXPORT_COMPLIANCE","FIPS","GARBAGE_COLLECTION","GENERAL_OCI_SUPPORT","GITHUB_BUILD","GITHUB_LOGIN","GITLAB_BUILD","GOOGLE_LOGIN","HELM_OCI_SUPPORT","INVITE_ONLY_USER_CREATION","LIBRARY_SUPPORT","LOG_EXPORT","MANIFEST_SIZE_BACKFILL","NAMESPACE_GARBAGE_COLLECTION","NONSUPERUSER_TEAM_SYNCING_SETUP","PARTIAL_USER_AUTOCOMPLETE","PERMANENT_SESSIONS","PROXY_CACHE","PROXY_STORAGE","PUBLIC_CATALOG","RATE_LIMITS","READER_BUILD_LOGS","READONLY_APP_REGISTRY","RECAPTCHA","REPOSITORY_ACTION_COUNTER","REPOSITORY_GARBAGE_COLLECTION","REQUIRE_ENCRYPTED_BASIC_AUTH","REQUIRE_TEAM_INVITE","RESTRICTED_V1_PUSH","SECURITY_NOTIFICATIONS","SIGNING","STORAGE_REPLICATION","SUPER_USERS","TEAM_SYNCING","USERNAME_CONFIRMATION","USER_CREATION","USER_INITIALIZE","USER_LAST_ACCESSED","USER_LOG_ACCESS","USER_METADATA","USER_RENAME","oauth","GITHUB_TRIGGER_CONFIG","AUTHORIZE_ENDPOINT","CLIENT_ID","GITHUB_ENDPOINT","ORG_RESTRICT","GITLAB_TRIGGER_CONFIG","GITLAB_ENDPOINT","registry_state","membersPathRegex","is_admin","is_member","owners","can_view","repo_count","is_synced","ordered_teams","createOrgSuccessResponse","orgPathRegex","orgNameMatch","superUserOrgsResponse","onAny","passThrough"],"sourceRoot":""}